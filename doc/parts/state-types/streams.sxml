<!-- This file is part of Shapes.                                           -->
<!--                                                                        -->
<!-- Shapes is free software: you can redistribute it and/or modify         -->
<!-- it under the terms of the GNU General Public License as published by   -->
<!-- the Free Software Foundation, either version 3 of the License, or      -->
<!-- any later version.                                                     -->
<!--                                                                        -->
<!-- Shapes is distributed in the hope that it will be useful,              -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of         -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          -->
<!-- GNU General Public License for more details.                           -->
<!--                                                                        -->
<!-- You should have received a copy of the GNU General Public License      -->
<!-- along with Shapes.  If not, see <http://www.gnu.org/licenses/>.        -->
<!--                                                                        -->
<!-- Copyright 2008 Henrik Tidefelt                                         -->

<section id="state-types/streams">
<title>Streams</title>
<top>
	<p>States of types in this section are used to wrap files for input/output.</p>
</top>

  <core-state-type name="Ostream">
    <abstraction>
      <p>States of type <self /> wrap a file stream for output.</p>
    </abstraction>
    <see-also>
			<state name="stdout" />
			<state name="stderr" />
    </see-also>
		<mutator op="tack-on">
			<function>
				<case>
					<arguments>
						<arg>
							<type><named-type name="Object" /></type>
						</arg>
					</arguments>
					<side-effect>
						<p>Allow object to produce a textual representation (may not be unique or have anything to do with the value, well behaved object do a reasonable job here), which is appended to the stream.</p>
					</side-effect>
				</case>
			</function>
		</mutator>
  </core-state-type>

</section>
