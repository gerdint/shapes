<!-- This file is part of Shapes.                                           -->
<!--                                                                        -->
<!-- Shapes is free software: you can redistribute it and/or modify         -->
<!-- it under the terms of the GNU General Public License as published by   -->
<!-- the Free Software Foundation, either version 3 of the License, or      -->
<!-- any later version.                                                     -->
<!--                                                                        -->
<!-- Shapes is distributed in the hope that it will be useful,              -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of         -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          -->
<!-- GNU General Public License for more details.                           -->
<!--                                                                        -->
<!-- You should have received a copy of the GNU General Public License      -->
<!-- along with Shapes.  If not, see <http://www.gnu.org/licenses/>.        -->
<!--                                                                        -->
<!-- Copyright 2008 Henrik Tidefelt                                         -->

<section id="types/tuples">
<title>Elementary tuple types</title>
<top>
	<p>Values of types in this section combine a fixed number of other values to form a tuple.</p>
</top>

  <coretype name="FloatPair">
    <abstraction>
      <p>The <self /> type is typically a sized direction in the plane.</p>
    </abstraction>
    <construction>
      <syntax name="float-pair" />
    </construction>
		<fields>
			<type-field name="x">
				<type><named-type name="Float" /></type>
				<description>First component.</description>
			</type-field>
			<type-field name="y">
				<type><named-type name="Float" /></type>
				<description>Second component.</description>
			</type-field>
		</fields>
  </coretype>

  <coretype name="FloatTriple">
    <abstraction>
      <p>The <self /> type is typically a sized direction in the perceivable space.</p>
    </abstraction>
    <construction>
      <syntax name="float-triple" />
    </construction>
		<fields>
			<type-field name="x">
				<type><named-type name="Float" /></type>
				<description>First component.</description>
			</type-field>
			<type-field name="y">
				<type><named-type name="Float" /></type>
				<description>Second component.</description>
			</type-field>
			<type-field name="z">
				<type><named-type name="Float" /></type>
				<description>Third component.</description>
			</type-field>
		</fields>
  </coretype>

  <coretype name="Coords">
    <abstraction>
      <p>The <self /> type is a pair of <named-type name="Length" /> ordinates.</p>
    </abstraction>
    <construction>
      <syntax name="coords-2D" />
    </construction>
		<fields>
			<type-field name="x">
				<type><named-type name="Length" /></type>
				<description>First component.</description>
			</type-field>
			<type-field name="y">
				<type><named-type name="Length" /></type>
				<description>Second component.</description>
			</type-field>
		</fields>
  </coretype>

  <coretype name="CornerCoords">
    <abstraction>
			<p><self /> is a subtype of <named-type name="Coords" />.  Objects of this type behave as <named-type name="Coords" /> in every situation except when being the center point of a path point with one or more undetermined handle angles.</p>
    </abstraction>
    <construction>
      <syntax name="corner-point-2D" />
    </construction>
		<fields>
			<type-field name="x">
				<type><named-type name="Length" /></type>
				<description>First component.</description>
			</type-field>
			<type-field name="y">
				<type><named-type name="Length" /></type>
				<description>Second component.</description>
			</type-field>
			<type-field name="a">
				<type><named-type name="Float" /></type>
				<description>Corner angle.</description>
			</type-field>
		</fields>
  </coretype>

  <coretype name="Coords3D">
    <abstraction>
      <p>The <self /> type is a triple of <named-type name="Length" /> ordinates.</p>
    </abstraction>
    <construction>
      <syntax name="coords-3D" />
    </construction>
		<fields>
			<type-field name="x">
				<type><named-type name="Length" /></type>
				<description>First component.</description>
			</type-field>
			<type-field name="y">
				<type><named-type name="Length" /></type>
				<description>Second component.</description>
			</type-field>
			<type-field name="z">
				<type><named-type name="Length" /></type>
				<description>Third component.</description>
			</type-field>
		</fields>
  </coretype>

</section>
