<section id="chap-kerntypes">
<title>Built-in types</title>
<top>
<p>There is a large number of built-in types.  In order to use them efficiently, one needs to know things as how to construct values, what fields these values have, and important functions that operate on them.</p>
</top>

<section id="kerntypes-simple">
<title>Simple types</title>
<top>
<p>By <em>simple types</em> it is referred to types of values that can be constructed using a single input token.  For this reason, their construction is also mentioned in the syntax chapter.</p>
</top>

<section id="kerntypes-simple-floats">
<title>Float</title>
<body>
<p>How floats are entered literally is described in <secref-title id="syntax-floats" />.</p>

<p>Floats have no fields.</p>

<p>A large number of types may be scaled by floats, which makes the list of operators very long for floats.  Since dividing by a float is expected to mean the same as multiplying by the multiplicative inverse of the float, the list gets even longer:</p>
<operator-table type="Float" />
</body>
</section>

</section>  <!-- end of kerntypes-simple -->

<section id="kerntypes-pointspaths">
<title>Points and paths</title>
<top>
<p>Not much needs to be known about most of these intuitive types.</p>
</top>
</section>  <!-- end of kerntypes-pointspaths -->

<section id="kerntypes-graphics">
<title>Graphics</title>
<top>
<p>Values of the types described here can be drawn (possibly after projection to 2D).</p>
</top>
</section>  <!-- end of kerntypes-graphics -->

<section id="kerntypes-other">
<title>Other</title>
<top>
<p>Here, various types that don't fit in the above cathegories are placed.</p>
</top>
</section>  <!-- end of kerntypes-other -->

</section><!-- end of chap-kerntypes -->
