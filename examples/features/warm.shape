/** This file is part of Shapes.
 **
 ** Shapes is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
 ** the Free Software Foundation, either version 3 of the License, or
 ** any later version.
 **
 ** Shapes is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU General Public License for more details.
 **
 ** You should have received a copy of the GNU General Public License
 ** along with Shapes.  If not, see <http://www.gnu.org/licenses/>.
 **
 ** Copyright 2008 Henrik Tidefelt
 **/

•str: newString
•msg: newString
•str << `Say´ << ` ´
•msg << `Say´ << ` ´
•str << `hello!´
•msg << `goodbye!´
str: •str;
msg: •msg;
•stderr << str << `¢n´ << msg << `¢n´

•stderr << ( newString << `a ´ << `b¢n´ )

•dst1: newString
•dst2: newString

•dst1 << `1:´
•dst2 << `2:´

say_y: \ •dstStr → { •dstStr << `y´ }

/** Dynamic states is currently not a supported feature. **/

|** dynamic @dfoo I stderr

|** foo: \ → { @dfoo << ` x ´   [say_y (@dfoo <<)] }

|** @dfoo: (dst1 <<)
|** | [foo]
|** @dfoo: (dst2 <<)
|** | [foo]
|** @dfoo: (dst1 <<)
|** | [foo]

endline: \ •os → { •os << `(endl)¢n´ }

[endline •dst1]
[endline •dst2]
dst1: •dst1;
dst2: •dst2;

•stderr << dst1 << dst2

/** Prevent empty output error. **/
[stroke (0cm,0cm)--(1cm,1cm)]
