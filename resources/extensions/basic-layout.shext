/** This file is part of Shapes.
 **
 ** Shapes is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
 ** the Free Software Foundation, either version 3 of the License, or
 ** any later version.
 **
 ** Shapes is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU General Public License for more details.
 **
 ** You should have received a copy of the GNU General Public License
 ** along with Shapes.  If not, see <http://www.gnu.org/licenses/>.
 **
 ** Copyright 2008 Henrik Tidefelt
 **/

/**
 ** Functions for finding coordinates of rectangle bounding a path.
 **/

xmax: \ p → [maximizer p (1,0)].p.x
xmin: \ p → [maximizer p (~1,0)].p.x
ymax: \ p → [maximizer p (0,1)].p.y
ymin: \ p → [maximizer p (0,~1)].p.y



/**
 ** Functions for positioning an object relative to it's bounding box.
 **/

center: \ obj z:(0,0) →
 {
  thebb: [bbox obj]
  [if thebb.null?
      obj
      [[shift (0.5*([xmin thebb]*(z.x-1) - [xmax thebb]*(z.x+1)),
               0.5*([ymin thebb]*(z.y-1) - [ymax thebb]*(z.y+1)) )]
      obj]]
 }

center_x: \ obj x:0 →
 {
  thebb: [bbox obj]
  [[shift ( 0.5*([xmin thebb]*(x-1) - [xmax thebb]*(x+1)),
            0cm )]
   obj]
 }

center_y: \ obj y:0 →
 {
  thebb: [bbox obj]
  [[shift ( 0cm,
            0.5*([ymin thebb]*(y-1) - [ymax thebb]*(y+1)) )]
   obj]
 }

centerof: \ obj → { thebb: [bbox obj]  (0.5*([xmin thebb]+[xmax thebb]),0.5*([ymin thebb]+[ymax thebb])) }


dynamic @labelmargin identity 1mm

|** The name of the following function is an abbreviation of "center, with label margin"
center_wlm: \ obj z →
 {
  thebb: [bbox obj]
  [[shift (0.5*(([xmin thebb]-@labelmargin)*(z.x-1) - ([xmax thebb]+@labelmargin)*(z.x+1)),
           0.5*(([ymin thebb]-@labelmargin)*(z.y-1) - ([ymax thebb]+@labelmargin)*(z.y+1)) )]
   obj]
 }



/**
 ** Now some functions for mediation.
 **/

mediate: \ r x1 x2 → (1-r)*x1 + r*x2
mspoint: \ pth mediation slide:0cm → [pth mediation * [abs pth] + slide].p



/**
 ** Now some box stuff.
 **/

|** This function enlarges the bbox so that its center coincides with the origin.
bboxed_sym: \ obj →
{
  bb: [bbox obj]
  rx: [max ~[xmin bb] [xmax bb]]
  ry: [max ~[ymin bb] [ymax bb]]
  [bboxed obj [rectangle (~rx,~ry) (rx,ry)]]
}

|** This function enlarges the bbox vertically so that its vertical midpoint is 0.
bboxed_sym_y: \ obj →
{
  bb: [bbox obj]
  ry: [max ~[ymin bb] [ymax bb]]
  [bboxed obj [rectangle (~[xmin bb],~ry) ([xmax bb],ry)]]
}

|** This function enlarges the bbox horizontally.  Compare bboxed_sym_y.
bboxed_sym_x: \ obj →
{
  bb: [bbox obj]
  rx: [max ~[xmin bb] [xmax bb]]
  [bboxed obj [rectangle (~rx,[ymin bb]) (rx,[ymax bb])]]
}

|** This function enlarges the bbox in all directions.
bboxed_enlarge: \ obj xy →
{
  bb: [bbox obj]
  [bboxed obj [rectangle ([xmin bb]-xy.x,[ymin bb]-xy.y) ([xmax bb]+xy.x,[ymax bb]+xy.y)]]
}

enlarge_bleedbox: \ obj xy →
{
  bb: [bbox obj 'bleed]
  [bboxed obj [rectangle ([xmin bb]-xy.x,[ymin bb]-xy.y) ([xmax bb]+xy.x,[ymax bb]+xy.y)] 'bleed]
}
