(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    491243,      15881]*)
(*NotebookOutlinePosition[    492137,      15912]*)
(*  CellTagsIndexPosition[    492046,      15906]*)
(*WindowFrame->Normal*)



Notebook[{
Cell["Surfaces", "Title"],

Cell[TextData[{
  " ",
  StyleBox["Exploring differential geometry of surfaces with ",
    FontSize->16],
  StyleBox["Mathematica",
    FontSize->16,
    FontSlant->"Italic"]
}], "Subtitle"],

Cell["\<\
Professor Mohammad Ghomi
Math 426, PSU, Spring 2004\
\>", "Author"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .73667 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics3D
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.17875e-16 1.04919 -0.104822 1.04919 [
[ 0 0 0 0 ]
[ 1 .73667 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .73667 L
0 .73667 L
closepath
clip
newpath
.5 Mabswid
[ ] 0 setdash
1 0 .311 r
.43018 .56313 m .49405 .5704 L .49492 .55381 L p F P
0 g
s
1 0 .311 r
.49492 .55381 m .43292 .54668 L .43018 .56313 L p F P
0 g
s
1 0 .296 r
.55787 .55351 m .49492 .55381 L .49405 .5704 L p F P
0 g
s
1 0 .571 r
.43292 .54668 m .49492 .55381 L .49602 .53749 L p F P
0 g
s
1 0 .55 r
.49492 .55381 m .55787 .55351 L .55656 .53719 L p F P
0 g
s
1 0 .55 r
.55656 .53719 m .49602 .53749 L .49492 .55381 L p F P
0 g
s
1 0 .296 r
.49405 .5704 m .55889 .57008 L .55787 .55351 L p F P
0 g
s
1 0 .27 r
.61968 .54577 m .55787 .55351 L .55889 .57008 L p F P
0 g
s
1 0 .509 r
.55787 .55351 m .61968 .54577 L .61599 .52968 L p F P
0 g
s
1 0 .509 r
.61599 .52968 m .55656 .53719 L .55787 .55351 L p F P
0 g
s
1 0 .124 r
.42832 .5792 m .49346 .58654 L .49405 .5704 L p F P
0 g
s
1 0 .124 r
.49405 .5704 m .43018 .56313 L .42832 .5792 L p F P
0 g
s
1 0 .117 r
.55889 .57008 m .49405 .5704 L .49346 .58654 L p F P
0 g
s
1 0 .117 r
.49346 .58654 m .55959 .58623 L .55889 .57008 L p F P
0 g
s
1 0 .105 r
.62258 .56219 m .55889 .57008 L .55959 .58623 L p F P
0 g
s
1 0 .27 r
.55889 .57008 m .62258 .56219 L .61968 .54577 L p F P
0 g
s
1 0 .571 r
.49602 .53749 m .43642 .53057 L .43292 .54668 L p F P
0 g
s
1 0 .89 r
.43642 .53057 m .49602 .53749 L .49733 .52213 L p F P
0 g
s
1 0 .865 r
.49602 .53749 m .55656 .53719 L .55503 .52184 L p F P
0 g
s
1 0 .865 r
.55503 .52184 m .49733 .52213 L .49602 .53749 L p F P
0 g
s
1 0 .819 r
.55656 .53719 m .61599 .52968 L .61164 .51462 L p F P
0 g
s
1 0 .819 r
.61164 .51462 m .55503 .52184 L .55656 .53719 L p F P
0 g
s
1 0 .025 r
.42742 .59422 m .49317 .60156 L .49346 .58654 L p F P
0 g
s
1 0 .025 r
.49346 .58654 m .42832 .5792 L .42742 .59422 L p F P
0 g
s
1 0 .024 r
.55959 .58623 m .49346 .58654 L .49317 .60156 L p F P
0 g
s
1 0 .024 r
.49317 .60156 m .55992 .60124 L .55959 .58623 L p F P
0 g
s
1 0 .021 r
.62454 .57826 m .55959 .58623 L .55992 .60124 L p F P
0 g
s
1 0 .105 r
.55959 .58623 m .62454 .57826 L .62258 .56219 L p F P
0 g
s
1 0 .89 r
.49733 .52213 m .44054 .51547 L .43642 .53057 L p F P
0 g
s
.744 0 1 r
.44054 .51547 m .49733 .52213 L .49877 .50839 L p F P
0 g
s
.765 0 1 r
.49733 .52213 m .55503 .52184 L .55332 .50812 L p F P
0 g
s
.765 0 1 r
.55332 .50812 m .49877 .50839 L .49733 .52213 L p F P
0 g
s
.806 0 1 r
.55503 .52184 m .61164 .51462 L .60683 .50124 L p F P
0 g
s
.806 0 1 r
.60683 .50124 m .55332 .50812 L .55503 .52184 L p F P
0 g
s
1 0 .309 r
.36945 .54842 m .43018 .56313 L .43292 .54668 L p F P
0 g
s
1 0 .309 r
.43292 .54668 m .37401 .53227 L .36945 .54842 L p F P
0 g
s
1 0 .568 r
.37401 .53227 m .43292 .54668 L .43642 .53057 L p F P
0 g
s
1 0 .24 r
.67823 .53076 m .61968 .54577 L .62258 .56219 L p F P
0 g
s
1 0 .464 r
.61968 .54577 m .67823 .53076 L .67223 .51512 L p F P
0 g
s
1 0 .464 r
.67223 .51512 m .61599 .52968 L .61968 .54577 L p F P
0 g
s
1 0 .568 r
.43642 .53057 m .37983 .51658 L .37401 .53227 L p F P
0 g
s
1 0 .886 r
.37983 .51658 m .43642 .53057 L .44054 .51547 L p F P
0 g
s
1 0 .123 r
.36636 .56434 m .42832 .5792 L .43018 .56313 L p F P
0 g
s
1 0 .123 r
.43018 .56313 m .36945 .54842 L .36636 .56434 L p F P
0 g
s
1 0 .765 r
.61599 .52968 m .67223 .51512 L .66517 .50062 L p F P
0 g
s
1 0 .765 r
.66517 .50062 m .61164 .51462 L .61599 .52968 L p F P
0 g
s
1 0 .092 r
.68294 .54688 m .62258 .56219 L .62454 .57826 L p F P
0 g
s
1 0 .24 r
.62258 .56219 m .68294 .54688 L .67823 .53076 L p F P
0 g
s
1 0 .025 r
.42754 .6075 m .49321 .61478 L .49317 .60156 L p F P
0 g
s
1 0 .025 r
.49317 .60156 m .42742 .59422 L .42754 .6075 L p F P
0 g
s
1 0 .024 r
.55992 .60124 m .49317 .60156 L .49321 .61478 L p F P
0 g
s
1 0 .021 r
.55992 .60124 m .62548 .59327 L .62454 .57826 L p F P
0 g
s
1 0 .024 r
.49321 .61478 m .55987 .61446 L .55992 .60124 L p F P
0 g
s
1 0 .021 r
.62548 .59327 m .55992 .60124 L .55987 .61446 L p F P
0 g
s
.744 0 1 r
.49877 .50839 m .44509 .50205 L .44054 .51547 L p F P
0 g
s
.333 0 1 r
.44509 .50205 m .49877 .50839 L .50029 .49689 L p F P
0 g
s
.344 0 1 r
.49877 .50839 m .55332 .50812 L .55152 .49663 L p F P
0 g
s
.344 0 1 r
.55152 .49663 m .50029 .49689 L .49877 .50839 L p F P
0 g
s
.365 0 1 r
.55332 .50812 m .60683 .50124 L .60176 .49013 L p F P
0 g
s
.365 0 1 r
.60176 .49013 m .55152 .49663 L .55332 .50812 L p F P
0 g
s
1 0 .886 r
.44054 .51547 m .38666 .50203 L .37983 .51658 L p F P
0 g
s
.747 0 1 r
.38666 .50203 m .44054 .51547 L .44509 .50205 L p F P
0 g
s
1 0 .025 r
.36487 .57936 m .42742 .59422 L .42832 .5792 L p F P
0 g
s
1 0 .025 r
.42832 .5792 m .36636 .56434 L .36487 .57936 L p F P
0 g
s
.854 0 1 r
.61164 .51462 m .66517 .50062 L .65737 .48791 L p F P
0 g
s
.854 0 1 r
.65737 .48791 m .60683 .50124 L .61164 .51462 L p F P
0 g
s
1 0 .018 r
.68613 .56279 m .62454 .57826 L .62548 .59327 L p F P
0 g
s
1 0 .092 r
.62454 .57826 m .68613 .56279 L .68294 .54688 L p F P
0 g
s
.747 0 1 r
.44509 .50205 m .39422 .48924 L .38666 .50203 L p F P
0 g
s
.334 0 1 r
.39422 .48924 m .44509 .50205 L .44989 .4909 L p F P
0 g
s
.333 0 1 r
.50029 .49689 m .44989 .4909 L .44509 .50205 L p F P
0 g
s
1 0 .025 r
.36506 .59278 m .42754 .6075 L .42742 .59422 L p F P
0 g
s
1 0 .025 r
.42742 .59422 m .36487 .57936 L .36506 .59278 L p F P
0 g
s
1 0 .124 r
.42868 .61846 m .49356 .6256 L .49321 .61478 L p F P
0 g
s
1 0 .124 r
.49321 .61478 m .42754 .6075 L .42868 .61846 L p F P
0 g
s
1 0 .117 r
.55987 .61446 m .49321 .61478 L .49356 .6256 L p F P
0 g
s
.391 0 1 r
.60683 .50124 m .65737 .48791 L .64915 .47754 L p F P
0 g
s
.391 0 1 r
.64915 .47754 m .60176 .49013 L .60683 .50124 L p F P
0 g
s
1 0 .117 r
.49356 .6256 m .55944 .62529 L .55987 .61446 L p F P
0 g
s
1 0 .105 r
.62535 .60657 m .55987 .61446 L .55944 .62529 L p F P
0 g
s
1 0 .021 r
.55987 .61446 m .62535 .60657 L .62548 .59327 L p F P
0 g
s
1 0 .018 r
.62548 .59327 m .68766 .5778 L .68613 .56279 L p F P
0 g
s
1 0 .018 r
.68766 .5778 m .62548 .59327 L .62535 .60657 L p F P
0 g
s
0 .034 1 r
.44989 .4909 m .50029 .49689 L .50182 .48817 L p F P
0 g
s
0 .036 1 r
.50029 .49689 m .55152 .49663 L .5497 .48792 L p F P
0 g
s
0 .036 1 r
.5497 .48792 m .50182 .48817 L .50029 .49689 L p F P
0 g
s
0 .039 1 r
.55152 .49663 m .60176 .49013 L .59664 .48181 L p F P
0 g
s
0 .039 1 r
.59664 .48181 m .5497 .48792 L .55152 .49663 L p F P
0 g
s
1 0 .291 r
.31405 .52658 m .36945 .54842 L .37401 .53227 L p F P
0 g
s
1 0 .291 r
.37401 .53227 m .32032 .51087 L .31405 .52658 L p F P
0 g
s
1 0 .541 r
.32032 .51087 m .37401 .53227 L .37983 .51658 L p F P
0 g
s
1 0 .541 r
.37983 .51658 m .32832 .49583 L .32032 .51087 L p F P
0 g
s
1 0 .855 r
.32832 .49583 m .37983 .51658 L .38666 .50203 L p F P
0 g
s
1 0 .218 r
.73138 .50881 m .67823 .53076 L .68294 .54688 L p F P
0 g
s
1 0 .428 r
.67823 .53076 m .73138 .50881 L .7232 .49384 L p F P
0 g
s
1 0 .428 r
.7232 .49384 m .67223 .51512 L .67823 .53076 L p F P
0 g
s
1 0 .114 r
.30978 .54228 m .36636 .56434 L .36945 .54842 L p F P
0 g
s
1 0 .114 r
.36945 .54842 m .31405 .52658 L .30978 .54228 L p F P
0 g
s
1 0 .722 r
.67223 .51512 m .7232 .49384 L .71361 .48019 L p F P
0 g
s
1 0 .722 r
.71361 .48019 m .66517 .50062 L .67223 .51512 L p F P
0 g
s
1 0 .082 r
.73778 .52447 m .68294 .54688 L .68613 .56279 L p F P
0 g
s
1 0 .218 r
.68294 .54688 m .73778 .52447 L .73138 .50881 L p F P
0 g
s
1 0 .855 r
.38666 .50203 m .33771 .48211 L .32832 .49583 L p F P
0 g
s
.774 0 1 r
.33771 .48211 m .38666 .50203 L .39422 .48924 L p F P
0 g
s
.334 0 1 r
.44989 .4909 m .40218 .4788 L .39422 .48924 L p F P
0 g
s
0 .035 1 r
.40218 .4788 m .44989 .4909 L .45473 .48253 L p F P
0 g
s
0 .034 1 r
.50182 .48817 m .45473 .48253 L .44989 .4909 L p F P
0 g
s
1 0 .123 r
.36696 .60402 m .42868 .61846 L .42754 .6075 L p F P
0 g
s
1 0 .123 r
.42754 .6075 m .36506 .59278 L .36696 .60402 L p F P
0 g
s
0 .042 1 r
.60176 .49013 m .64915 .47754 L .64087 .47 L p F P
0 g
s
0 .042 1 r
.64087 .47 m .59664 .48181 L .60176 .49013 L p F P
0 g
s
.893 0 1 r
.66517 .50062 m .71361 .48019 L .70302 .46847 L p F P
0 g
s
.893 0 1 r
.70302 .46847 m .65737 .48791 L .66517 .50062 L p F P
0 g
s
1 0 .105 r
.55944 .62529 m .62414 .61754 L .62535 .60657 L p F P
0 g
s
1 0 .092 r
.68745 .59125 m .62535 .60657 L .62414 .61754 L p F P
0 g
s
1 0 .018 r
.62535 .60657 m .68745 .59125 L .68766 .5778 L p F P
0 g
s
1 0 .023 r
.30773 .55728 m .36487 .57936 L .36636 .56434 L p F P
0 g
s
1 0 .023 r
.36636 .56434 m .30978 .54228 L .30773 .55728 L p F P
0 g
s
1 0 .311 r
.4308 .62655 m .49423 .6335 L .49356 .6256 L p F P
0 g
s
1 0 .311 r
.49356 .6256 m .42868 .61846 L .4308 .62655 L p F P
0 g
s
1 0 .296 r
.55944 .62529 m .49356 .6256 L .49423 .6335 L p F P
0 g
s
1 0 .296 r
.49423 .6335 m .55864 .6332 L .55944 .62529 L p F P
0 g
s
1 0 .27 r
.62414 .61754 m .55944 .62529 L .55864 .6332 L p F P
0 g
s
0 .323 1 r
.45473 .48253 m .50182 .48817 L .50329 .48265 L p F P
0 g
s
0 .335 1 r
.50182 .48817 m .5497 .48792 L .54795 .48242 L p F P
0 g
s
0 .335 1 r
.54795 .48242 m .50329 .48265 L .50182 .48817 L p F P
0 g
s
1 0 .016 r
.74213 .54015 m .68613 .56279 L .68766 .5778 L p F P
0 g
s
1 0 .082 r
.68613 .56279 m .74213 .54015 L .73778 .52447 L p F P
0 g
s
0 .359 1 r
.5497 .48792 m .59664 .48181 L .59171 .47671 L p F P
0 g
s
0 .359 1 r
.59171 .47671 m .54795 .48242 L .5497 .48792 L p F P
0 g
s
.774 0 1 r
.39422 .48924 m .34808 .47029 L .33771 .48211 L p F P
0 g
s
.348 0 1 r
.34808 .47029 m .39422 .48924 L .40218 .4788 L p F P
0 g
s
.412 0 1 r
.65737 .48791 m .70302 .46847 L .69187 .4592 L p F P
0 g
s
.412 0 1 r
.69187 .4592 m .64915 .47754 L .65737 .48791 L p F P
0 g
s
1 0 .023 r
.308 .57092 m .36506 .59278 L .36487 .57936 L p F P
0 g
s
1 0 .023 r
.36487 .57936 m .30773 .55728 L .308 .57092 L p F P
0 g
s
0 .035 1 r
.45473 .48253 m .4102 .47118 L .40218 .4788 L p F P
0 g
s
0 .325 1 r
.4102 .47118 m .45473 .48253 L .4594 .47738 L p F P
0 g
s
0 .323 1 r
.50329 .48265 m .4594 .47738 L .45473 .48253 L p F P
0 g
s
1 0 .016 r
.68766 .5778 m .74422 .55515 L .74213 .54015 L p F P
0 g
s
1 0 .016 r
.74422 .55515 m .68766 .5778 L .68745 .59125 L p F P
0 g
s
1 0 .309 r
.3705 .61251 m .4308 .62655 L .42868 .61846 L p F P
0 g
s
1 0 .309 r
.42868 .61846 m .36696 .60402 L .3705 .61251 L p F P
0 g
s
0 .388 1 r
.59664 .48181 m .64087 .47 L .6329 .46566 L p F P
0 g
s
0 .388 1 r
.6329 .46566 m .59171 .47671 L .59664 .48181 L p F P
0 g
s
1 0 .27 r
.55864 .6332 m .62188 .62566 L .62414 .61754 L p F P
0 g
s
1 0 .24 r
.68548 .60251 m .62414 .61754 L .62188 .62566 L p F P
0 g
s
1 0 .092 r
.62414 .61754 m .68548 .60251 L .68745 .59125 L p F P
0 g
s
.348 0 1 r
.40218 .4788 m .35899 .46092 L .34808 .47029 L p F P
0 g
s
0 .036 1 r
.35899 .46092 m .40218 .4788 L .4102 .47118 L p F P
0 g
s
0 .045 1 r
.64915 .47754 m .69187 .4592 L .68066 .45281 L p F P
0 g
s
0 .045 1 r
.68066 .45281 m .64087 .47 L .64915 .47754 L p F P
0 g
s
1 0 .571 r
.43384 .63136 m .49519 .63806 L .49423 .6335 L p F P
0 g
s
1 0 .571 r
.49423 .6335 m .4308 .62655 L .43384 .63136 L p F P
0 g
s
1 0 .55 r
.55864 .6332 m .49423 .6335 L .49519 .63806 L p F P
0 g
s
1 0 .55 r
.49519 .63806 m .5575 .63777 L .55864 .6332 L p F P
0 g
s
1 0 .509 r
.62188 .62566 m .55864 .6332 L .5575 .63777 L p F P
0 g
s
0 .617 1 r
.4594 .47738 m .50329 .48265 L .50464 .48066 L p F P
0 g
s
0 .679 1 r
.54795 .48242 m .56612 .48005 L p .58719 .47511 L F P
0 g
s
0 .679 1 r
.56612 .48005 m .59171 .47671 L .58719 .47511 L p F P
0 g
s
0 .728 1 r
.59171 .47671 m .60878 .47213 L p .6256 .46479 L F P
0 g
s
0 .728 1 r
.60878 .47213 m .6329 .46566 L .6256 .46479 L p F P
0 g
s
0 1 .87 r
.65156 .45346 m .6494 .4544 L p .6256 .46479 L F P
0 g
s
0 .728 1 r
.6256 .46479 m .58719 .47511 L .59171 .47671 L p F P
0 g
s
0 1 .917 r
.58719 .47511 m .6256 .46479 L .61932 .46748 L p F P
0 g
s
0 1 .87 r
.6494 .4544 m .61932 .46748 L .6256 .46479 L p F P
0 g
s
0 1 .917 r
.61932 .46748 m .61691 .46813 L p .58719 .47511 L F P
0 g
s
0 1 .917 r
.61691 .46813 m .5833 .47715 L .58719 .47511 L p F P
0 g
s
0 .679 1 r
.58719 .47511 m .54635 .48045 L .54795 .48242 L p F P
0 g
s
0 1 .977 r
.5833 .47715 m .58074 .47749 L p .54635 .48045 L F P
0 g
s
0 .638 1 r
.52187 .48256 m .54795 .48242 L .54635 .48045 L p F P
0 g
s
0 1 .977 r
.58074 .47749 m .54496 .48216 L .54635 .48045 L p F P
0 g
s
0 .638 1 r
.50329 .48265 m .52187 .48256 L p .54635 .48045 L F P
0 g
s
0 .638 1 r
.50464 .48066 m .50329 .48265 L p .51986 .4818 L F P
0 g
s
0 .617 1 r
.46367 .47574 m .4594 .47738 L p .47684 .47865 L F P
0 g
s
0 .617 1 r
.50464 .48066 m .46367 .47574 L p .47684 .47865 L F P
0 g
s
0 .62 1 r
.41792 .46677 m .4594 .47738 L .46367 .47574 L p F P
0 g
s
0 .62 1 r
.42499 .46582 m .41792 .46677 L p .43559 .47023 L F P
0 g
s
0 .62 1 r
.46367 .47574 m .42499 .46582 L p .43559 .47023 L F P
0 g
s
0 .647 1 r
.38052 .45112 m .41792 .46677 L .42499 .46582 L p F P
0 g
s
0 .647 1 r
.39016 .45122 m .38052 .45112 L p .39773 .45681 L F P
0 g
s
0 .647 1 r
.42499 .46582 m .39016 .45122 L p .39773 .45681 L F P
0 g
s
0 .984 1 r
.39016 .45122 m .42499 .46582 L p .41205 .46044 L F P
0 g
s
0 .984 1 r
.39844 .45477 m .39016 .45122 L p .40468 .45733 L F P
0 g
s
0 .984 1 r
.43106 .46845 m .39844 .45477 L p .40468 .45733 L F P
0 g
s
0 .34 1 r
.41792 .46677 m .38052 .45112 L .36996 .45442 L p F P
0 g
s
0 1 .617 r
.39844 .45477 m .40494 .46167 L p .39125 .45182 L F P
0 g
s
0 1 .962 r
.39016 .45122 m .39844 .45477 L p .38091 .44438 L F P
0 g
s
0 1 .962 r
.37089 .43716 m .36068 .43239 L p .3741 .44035 L F P
0 g
s
0 1 .962 r
.39844 .45477 m .37089 .43716 L p .3741 .44035 L F P
0 g
s
0 1 .617 r
.37089 .43716 m .39844 .45477 L p .39125 .45182 L F P
0 g
s
0 1 .962 r
.36068 .43239 m .39016 .45122 L p .38091 .44438 L F P
0 g
s
0 .691 1 r
.39016 .45122 m .36068 .43239 L .34877 .43091 L p F P
0 g
s
0 .691 1 r
.34877 .43091 m .38052 .45112 L .39016 .45122 L p F P
0 g
s
0 1 .617 r
.37889 .44505 m .37089 .43716 L p .38244 .44547 L F P
0 g
s
0 1 .617 r
.40494 .46167 m .37889 .44505 L p .38244 .44547 L F P
0 g
s
0 .366 1 r
.33572 .43275 m .36996 .45442 L .38052 .45112 L p F P
0 g
s
0 .366 1 r
.38052 .45112 m .34877 .43091 L .33572 .43275 L p F P
0 g
s
0 1 .278 r
.37889 .44505 m .38428 .45574 L p .37498 .44458 L F P
0 g
s
0 1 .564 r
.37089 .43716 m .37889 .44505 L p .36717 .43348 L F P
0 g
s
0 1 .564 r
.3497 .41624 m .37089 .43716 L p .36717 .43348 L F P
0 g
s
0 1 .904 r
.33793 .40999 m .36068 .43239 L .37089 .43716 L p F P
0 g
s
0 1 .904 r
.37089 .43716 m .3497 .41624 L .33793 .40999 L p F P
0 g
s
0 1 .564 r
.35892 .42532 m .3497 .41624 L p .35962 .42602 L F P
0 g
s
0 1 .564 r
.37889 .44505 m .35892 .42532 L p .35962 .42602 L F P
0 g
s
0 1 .528 r
.33604 .39279 m .3497 .41624 L .35892 .42532 L p F P
0 g
s
0 1 .256 r
.35892 .42532 m .36512 .43687 L p .35816 .42455 L F P
0 g
s
0 1 .528 r
.34611 .40325 m .33604 .39279 L p .34382 .40385 L F P
0 g
s
0 1 .528 r
.35892 .42532 m .34611 .40325 L p .34382 .40385 L F P
0 g
s
0 1 .256 r
.34611 .40325 m .35892 .42532 L p .35816 .42455 L F P
0 g
s
0 1 .256 r
.35287 .41578 m .34611 .40325 L p .35244 .41445 L F P
0 g
s
0 1 .256 r
.36512 .43687 m .35287 .41578 L p .35244 .41445 L F P
0 g
s
0 .74 1 r
.32418 .40684 m .34877 .43091 L .36068 .43239 L p F P
0 g
s
0 .74 1 r
.36068 .43239 m .33793 .40999 L .32418 .40684 L p F P
0 g
s
0 1 .078 r
.35597 .42982 m .35287 .41578 L p .3579 .42729 L F P
0 g
s
0 1 .078 r
.36797 .45037 m .35597 .42982 L p .3579 .42729 L F P
0 g
s
0 1 .016 r
.35597 .42982 m .35522 .44473 L p .35399 .43242 L F P
0 g
s
0 1 .076 r
.35287 .41578 m .35597 .42982 L p .35332 .41719 L F P
0 g
s
0 1 .078 r
.35287 .41578 m .36512 .43687 L .36797 .45037 L p F P
0 g
s
0 1 .076 r
.34832 .39333 m .35287 .41578 L p .35332 .41719 L F P
0 g
s
0 1 .252 r
.34611 .40325 m .35287 .41578 L p .34863 .40258 L F P
0 g
s
0 1 .252 r
.35287 .41578 m .34832 .39333 L .34129 .37974 L p F P
0 g
s
0 1 .076 r
.35155 .40796 m .34832 .39333 L p .35087 .40549 L F P
0 g
s
0 1 .076 r
.35597 .42982 m .35155 .40796 L p .35087 .40549 L F P
0 g
s
0 1 .016 r
.35155 .40796 m .35597 .42982 L p .35399 .43242 L F P
0 g
s
0 1 .016 r
.35077 .42296 m .35155 .40796 L p .35279 .4204 L F P
0 g
s
0 1 .016 r
.35522 .44473 m .35077 .42296 L p .35279 .4204 L F P
0 g
s
0 .394 1 r
.30907 .40687 m .33572 .43275 L .34877 .43091 L p F P
0 g
s
0 .394 1 r
.34877 .43091 m .32418 .40684 L .30907 .40687 L p F P
0 g
s
0 1 .081 r
.35077 .42296 m .34596 .43763 L p .34874 .42551 L F P
0 g
s
0 1 .017 r
.35155 .40796 m .35077 .42296 L p .35225 .41051 L F P
0 g
s
0 1 .017 r
.35518 .38578 m .35155 .40796 L p .35225 .41051 L F P
0 g
s
0 1 .017 r
.35441 .40086 m .35518 .38578 L p .35369 .39836 L F P
0 g
s
0 1 .017 r
.35077 .42296 m .35441 .40086 L p .35369 .39836 L F P
0 g
s
0 1 .081 r
.35441 .40086 m .35077 .42296 L p .34874 .42551 L F P
0 g
s
0 1 .862 r
.32317 .38485 m .33793 .40999 L .3497 .41624 L p F P
0 g
s
0 1 .862 r
.3497 .41624 m .33604 .39279 L .32317 .38485 L p F P
0 g
s
0 1 .081 r
.34964 .4151 m .35441 .40086 L p .35145 .41372 L F P
0 g
s
0 1 .081 r
.34596 .43763 m .34964 .4151 L p .35145 .41372 L F P
0 g
s
0 1 .284 r
.34964 .4151 m .34105 .42782 L p .34789 .41644 L F P
0 g
s
0 1 .088 r
.35441 .40086 m .34964 .4151 L p .35513 .40336 L F P
0 g
s
0 1 .088 r
.36178 .39331 m .36627 .37951 L p .36046 .39195 L F P
0 g
s
0 1 .088 r
.34964 .4151 m .36178 .39331 L p .36046 .39195 L F P
0 g
s
0 1 .284 r
.36178 .39331 m .34964 .4151 L p .34789 .41644 L F P
0 g
s
0 1 .088 r
.36627 .37951 m .35441 .40086 L p .35513 .40336 L F P
0 g
s
0 1 .284 r
.35369 .40511 m .36178 .39331 L p .35412 .40608 L F P
0 g
s
0 1 .284 r
.34105 .42782 m .35369 .40511 L p .35412 .40608 L F P
0 g
s
0 1 .081 r
.35199 .37054 m .34832 .39333 L .35155 .40796 L p F P
0 g
s
0 1 .081 r
.35155 .40796 m .35518 .38578 L .35199 .37054 L p F P
0 g
s
0 1 .597 r
.35369 .40511 m .3423 .4143 L p .35329 .4042 L F P
0 g
s
0 1 .299 r
.36178 .39331 m .35369 .40511 L p .36307 .39463 L F P
0 g
s
0 1 .299 r
.37491 .38432 m .38207 .3734 L p .37159 .38511 L F P
0 g
s
0 1 .299 r
.35369 .40511 m .37491 .38432 L p .37159 .38511 L F P
0 g
s
0 1 .597 r
.37491 .38432 m .35369 .40511 L p .35329 .4042 L F P
0 g
s
0 1 .299 r
.38207 .3734 m .36178 .39331 L p .36307 .39463 L F P
0 g
s
0 1 .597 r
.36483 .39222 m .37491 .38432 L p .36172 .39645 L F P
0 g
s
0 1 .597 r
.3423 .4143 m .36483 .39222 L p .36172 .39645 L F P
0 g
s
0 1 .018 r
.367 .36435 m .35518 .38578 L .35441 .40086 L p F P
0 g
s
0 1 .018 r
.35441 .40086 m .36627 .37951 L .367 .36435 L p F P
0 g
s
0 1 .093 r
.38604 .36001 m .36627 .37951 L .36178 .39331 L p F P
0 g
s
0 1 .093 r
.36178 .39331 m .38207 .3734 L .38604 .36001 L p F P
0 g
s
0 1 .942 r
.36483 .39222 m .35224 .39667 L p .3676 .38844 L F P
0 g
s
0 1 .598 r
.37491 .38432 m .36483 .39222 L p .37801 .38358 L F P
0 g
s
0 1 .598 r
.4039 .36663 m .37491 .38432 L p .37801 .38358 L F P
0 g
s
0 1 .598 r
.3957 .3734 m .4039 .36663 L p .38812 .37696 L F P
0 g
s
0 1 .598 r
.36483 .39222 m .3957 .3734 L p .38812 .37696 L F P
0 g
s
0 1 .3 r
.37491 .38432 m .4039 .36663 L .40972 .35646 L p F P
0 g
s
0 1 .57 r
.43932 .35306 m .4039 .36663 L .3957 .3734 L p F P
0 g
s
0 1 .91 r
.3957 .3734 m .38544 .37639 L p .40247 .37021 L F P
0 g
s
0 1 .57 r
.4335 .35895 m .43932 .35306 L p .42173 .36126 L F P
0 g
s
0 1 .57 r
.3957 .3734 m .4335 .35895 L p .42173 .36126 L F P
0 g
s
0 1 .91 r
.4335 .35895 m .3957 .3734 L p .40247 .37021 L F P
0 g
s
0 1 .91 r
.4262 .3608 m .4335 .35895 L p .41113 .36706 L F P
0 g
s
0 1 .91 r
.38544 .37639 m .4262 .3608 L p .41113 .36706 L F P
0 g
s
0 1 .282 r
.44345 .34349 m .40972 .35646 L .4039 .36663 L p F P
0 g
s
0 1 .282 r
.4039 .36663 m .43932 .35306 L .44345 .34349 L p F P
0 g
s
0 1 .516 r
.47937 .34446 m .43932 .35306 L .4335 .35895 L p F P
0 g
s
0 .787 1 r
.4262 .3608 m .41776 .35843 L p .43891 .35551 L F P
0 g
s
0 1 .849 r
.4335 .35895 m .4262 .3608 L p .44399 .35688 L F P
0 g
s
0 1 .849 r
.47629 .34978 m .4335 .35895 L p .44399 .35688 L F P
0 g
s
0 1 .516 r
.4335 .35895 m .47629 .34978 L .47937 .34446 L p F P
0 g
s
0 1 .849 r
.47243 .35089 m .47629 .34978 L p .45302 .3549 L F P
0 g
s
0 1 .849 r
.4262 .3608 m .47243 .35089 L p .45302 .3549 L F P
0 g
s
0 1 .451 r
.52187 .34137 m .47937 .34446 L .47629 .34978 L p F P
0 g
s
0 1 .451 r
.47629 .34978 m .52174 .34648 L .52187 .34137 L p F P
0 g
s
0 1 .771 r
.52174 .34648 m .47629 .34978 L .47243 .35089 L p F P
0 g
s
0 .855 1 r
.47243 .35089 m .46796 .34765 L p .48876 .34752 L F P
0 g
s
0 1 .771 r
.52158 .34733 m .52174 .34648 L p .49888 .34853 L F P
0 g
s
0 1 .771 r
.47243 .35089 m .52158 .34733 L p .49888 .34853 L F P
0 g
s
0 1 .398 r
.56448 .34399 m .52187 .34137 L .52174 .34648 L p F P
0 g
s
0 1 .398 r
.52174 .34648 m .5673 .34928 L .56448 .34399 L p F P
0 g
s
0 1 .706 r
.5673 .34928 m .52174 .34648 L .52158 .34733 L p F P
0 g
s
0 .914 1 r
.52158 .34733 m .52139 .34377 L p .54061 .34633 L F P
0 g
s
0 1 .706 r
.52158 .34733 m .57084 .35035 L .5673 .34928 L p F P
0 g
s
0 .914 1 r
.57084 .35035 m .52158 .34733 L p .54061 .34633 L F P
0 g
s
0 .855 1 r
.52158 .34733 m .47243 .35089 L p .48876 .34752 L F P
0 g
s
0 .787 1 r
.47243 .35089 m .4262 .3608 L p .43891 .35551 L F P
0 g
s
0 1 .942 r
.3957 .3734 m .36483 .39222 L p .3676 .38844 L F P
0 g
s
0 1 .252 r
.34129 .37974 m .34611 .40325 L p .34863 .40258 L F P
0 g
s
0 1 .278 r
.35892 .42532 m .37889 .44505 L p .37498 .44458 L F P
0 g
s
0 .984 1 r
.42499 .46582 m .43106 .46845 L p .41205 .46044 L F P
0 g
s
0 .951 1 r
.46367 .47574 m .46734 .47775 L p .44762 .47219 L F P
0 g
s
0 .951 1 r
.42499 .46582 m .46367 .47574 L p .44762 .47219 L F P
0 g
s
0 .947 1 r
.50464 .48066 m .50581 .48236 L p .48615 .47927 L F P
0 g
s
0 .947 1 r
.46367 .47574 m .50464 .48066 L p .48615 .47927 L F P
0 g
s
0 .638 1 r
.54635 .48045 m .50464 .48066 L p .51986 .4818 L F P
0 g
s
1 0 .114 r
.31062 .58257 m .36696 .60402 L .36506 .59278 L p F P
0 g
s
1 0 .114 r
.36506 .59278 m .308 .57092 L .31062 .58257 L p F P
0 g
s
1 0 .082 r
.74394 .56881 m .68745 .59125 L .68548 .60251 L p F P
0 g
s
1 0 .016 r
.68745 .59125 m .74394 .56881 L .74422 .55515 L p F P
0 g
s
1 0 .498 r
.27402 .48302 m .32032 .51087 L .32832 .49583 L p F P
0 g
s
1 0 .498 r
.32832 .49583 m .284 .46886 L .27402 .48302 L p F P
0 g
s
1 0 .805 r
.284 .46886 m .32832 .49583 L .33771 .48211 L p F P
0 g
s
1 0 .262 r
.26619 .49812 m .31405 .52658 L .32032 .51087 L p F P
0 g
s
1 0 .262 r
.32032 .51087 m .27402 .48302 L .26619 .49812 L p F P
0 g
s
1 0 .805 r
.33771 .48211 m .29568 .45624 L .284 .46886 L p F P
0 g
s
.818 0 1 r
.29568 .45624 m .33771 .48211 L .34808 .47029 L p F P
0 g
s
1 0 .416 r
.76682 .46638 m .7232 .49384 L .73138 .50881 L p F P
0 g
s
1 0 .707 r
.7232 .49384 m .76682 .46638 L .75495 .45386 L p F P
0 g
s
1 0 .707 r
.75495 .45386 m .71361 .48019 L .7232 .49384 L p F P
0 g
s
0 .325 1 r
.4594 .47738 m .41792 .46677 L .4102 .47118 L p F P
0 g
s
1 0 .21 r
.77694 .48046 m .73138 .50881 L .73778 .52447 L p F P
0 g
s
1 0 .416 r
.73138 .50881 m .77694 .48046 L .76682 .46638 L p F P
0 g
s
1 0 .102 r
.26086 .5135 m .30978 .54228 L .31405 .52658 L p F P
0 g
s
1 0 .102 r
.31405 .52658 m .26619 .49812 L .26086 .5135 L p F P
0 g
s
0 .036 1 r
.4102 .47118 m .36996 .45442 L .35899 .46092 L p F P
0 g
s
0 .34 1 r
.36996 .45442 m .4102 .47118 L .41792 .46677 L p F P
0 g
s
1 0 .568 r
.37555 .61782 m .43384 .63136 L .4308 .62655 L p F P
0 g
s
1 0 .568 r
.4308 .62655 m .3705 .61251 L .37555 .61782 L p F P
0 g
s
.907 0 1 r
.71361 .48019 m .75495 .45386 L .74187 .44347 L p F P
0 g
s
.907 0 1 r
.74187 .44347 m .70302 .46847 L .71361 .48019 L p F P
0 g
s
1 0 .509 r
.5575 .63777 m .61867 .6305 L .62188 .62566 L p F P
0 g
s
1 0 .464 r
.68182 .61104 m .62188 .62566 L .61867 .6305 L p F P
0 g
s
1 0 .24 r
.62188 .62566 m .68182 .61104 L .68548 .60251 L p F P
0 g
s
0 .411 1 r
.64087 .47 m .68066 .45281 L .66988 .44962 L p F P
0 g
s
0 .411 1 r
.66988 .44962 m .6329 .46566 L .64087 .47 L p F P
0 g
s
1 0 .079 r
.78489 .4955 m .73778 .52447 L .74213 .54015 L p F P
0 g
s
1 0 .21 r
.73778 .52447 m .78489 .4955 L .77694 .48046 L p F P
0 g
s
.818 0 1 r
.34808 .47029 m .30858 .44572 L .29568 .45624 L p F P
0 g
s
.372 0 1 r
.30858 .44572 m .34808 .47029 L .35899 .46092 L p F P
0 g
s
1 0 .89 r
.43766 .6326 m .4964 .63901 L .49519 .63806 L p F P
0 g
s
1 0 .89 r
.49519 .63806 m .43384 .63136 L .43766 .6326 L p F P
0 g
s
1 0 .865 r
.5575 .63777 m .49519 .63806 L .4964 .63901 L p F P
0 g
s
1 0 .02 r
.2583 .52848 m .30773 .55728 L .30978 .54228 L p F P
0 g
s
1 0 .02 r
.30978 .54228 m .26086 .5135 L .2583 .52848 L p F P
0 g
s
1 0 .865 r
.4964 .63901 m .55606 .63873 L .5575 .63777 L p F P
0 g
s
1 0 .819 r
.61867 .6305 m .5575 .63777 L .55606 .63873 L p F P
0 g
s
1 0 .291 r
.31549 .59166 m .3705 .61251 L .36696 .60402 L p F P
0 g
s
1 0 .291 r
.36696 .60402 m .31062 .58257 L .31549 .59166 L p F P
0 g
s
.42 0 1 r
.70302 .46847 m .74187 .44347 L .72812 .43564 L p F P
0 g
s
.42 0 1 r
.72812 .43564 m .69187 .4592 L .70302 .46847 L p F P
0 g
s
0 .973 1 r
.50464 .48066 m .54635 .48045 L .54496 .48216 L p F P
0 g
s
0 .973 1 r
.54496 .48216 m .50581 .48236 L .50464 .48066 L p F P
0 g
s
0 1 .977 r
.54635 .48045 m .58719 .47511 L .5833 .47715 L p F P
0 g
s
1 0 .218 r
.74126 .5805 m .68548 .60251 L .68182 .61104 L p F P
0 g
s
1 0 .082 r
.68548 .60251 m .74126 .5805 L .74394 .56881 L p F P
0 g
s
1 0 .016 r
.79029 .51085 m .74213 .54015 L .74422 .55515 L p F P
0 g
s
1 0 .079 r
.74213 .54015 m .79029 .51085 L .78489 .4955 L p F P
0 g
s
.372 0 1 r
.35899 .46092 m .32212 .43777 L .30858 .44572 L p F P
0 g
s
0 .04 1 r
.32212 .43777 m .35899 .46092 L .36996 .45442 L p F P
0 g
s
0 .046 1 r
.69187 .4592 m .72812 .43564 L .71432 .43076 L p F P
0 g
s
0 .046 1 r
.71432 .43076 m .68066 .45281 L .69187 .4592 L p F P
0 g
s
1 0 .02 r
.25863 .5424 m .308 .57092 L .30773 .55728 L p F P
0 g
s
1 0 .02 r
.30773 .55728 m .2583 .52848 L .25863 .5424 L p F P
0 g
s
0 .947 1 r
.50581 .48236 m .46734 .47775 L .46367 .47574 L p F P
0 g
s
0 .768 1 r
.6329 .46566 m .66988 .44962 L .66002 .44982 L p F P
0 g
s
0 .768 1 r
.66002 .44982 m .6256 .46479 L .6329 .46566 L p F P
0 g
s
1 0 .886 r
.3819 .61965 m .43766 .6326 L .43384 .63136 L p F P
0 g
s
1 0 .886 r
.43384 .63136 m .37555 .61782 L .3819 .61965 L p F P
0 g
s
1 0 .819 r
.55606 .63873 m .61462 .63178 L .61867 .6305 L p F P
0 g
s
1 0 .765 r
.6766 .61641 m .61867 .6305 L .61462 .63178 L p F P
0 g
s
1 0 .464 r
.61867 .6305 m .6766 .61641 L .68182 .61104 L p F P
0 g
s
1 0 .016 r
.74422 .55515 m .79289 .52583 L .79029 .51085 L p F P
0 g
s
1 0 .016 r
.79289 .52583 m .74422 .55515 L .74394 .56881 L p F P
0 g
s
1 0 .541 r
.32245 .59774 m .37555 .61782 L .3705 .61251 L p F P
0 g
s
1 0 .541 r
.3705 .61251 m .31549 .59166 L .32245 .59774 L p F P
0 g
s
.744 0 1 r
.4421 .63013 m .4978 .63622 L .4964 .63901 L p F P
0 g
s
.744 0 1 r
.4964 .63901 m .43766 .6326 L .4421 .63013 L p F P
0 g
s
.765 0 1 r
.55606 .63873 m .4964 .63901 L .4978 .63622 L p F P
0 g
s
0 .04 1 r
.36996 .45442 m .33572 .43275 L .32212 .43777 L p F P
0 g
s
.765 0 1 r
.4978 .63622 m .5544 .63595 L .55606 .63873 L p F P
0 g
s
.806 0 1 r
.61462 .63178 m .55606 .63873 L .5544 .63595 L p F P
0 g
s
1 0 .428 r
.73627 .58965 m .68182 .61104 L .6766 .61641 L p F P
0 g
s
1 0 .218 r
.68182 .61104 m .73627 .58965 L .74126 .5805 L p F P
0 g
s
0 1 .702 r
.46734 .47775 m .50581 .48236 L .50672 .48775 L p F P
0 g
s
0 1 .677 r
.50581 .48236 m .54496 .48216 L .54387 .48756 L p F P
0 g
s
0 1 .677 r
.54387 .48756 m .50672 .48775 L .50581 .48236 L p F P
0 g
s
0 .42 1 r
.68066 .45281 m .71432 .43076 L .70107 .42906 L p F P
0 g
s
0 .42 1 r
.70107 .42906 m .66988 .44962 L .68066 .45281 L p F P
0 g
s
0 1 .631 r
.54496 .48216 m .5833 .47715 L .58024 .48282 L p F P
0 g
s
0 1 .631 r
.58024 .48282 m .54387 .48756 L .54496 .48216 L p F P
0 g
s
1 0 .102 r
.2619 .5546 m .31062 .58257 L .308 .57092 L p F P
0 g
s
1 0 .102 r
.308 .57092 m .25863 .5424 L .2619 .5546 L p F P
0 g
s
0 .951 1 r
.46734 .47775 m .43106 .46845 L .42499 .46582 L p F P
0 g
s
1 0 .079 r
.79254 .53977 m .74394 .56881 L .74126 .5805 L p F P
0 g
s
1 0 .016 r
.74394 .56881 m .79254 .53977 L .79289 .52583 L p F P
0 g
s
0 .783 1 r
.68899 .43067 m .66002 .44982 L .66988 .44962 L p F P
0 g
s
0 1 .853 r
.66002 .44982 m .67408 .44053 L p .67862 .43555 L F P
0 g
s
0 1 .853 r
.67408 .44053 m .68899 .43067 L .67862 .43555 L p F P
0 g
s
0 1 .535 r
.6899 .42358 m .68435 .42928 L p .67862 .43555 L F P
0 g
s
0 1 .853 r
.67862 .43555 m .65156 .45346 L .66002 .44982 L p F P
0 g
s
0 1 .52 r
.65156 .45346 m .67862 .43555 L .6705 .44353 L p F P
0 g
s
0 1 .535 r
.68435 .42928 m .6705 .44353 L .67862 .43555 L p F P
0 g
s
0 1 .52 r
.6705 .44353 m .6632 .44836 L p .65156 .45346 L F P
0 g
s
0 1 .87 r
.64232 .45752 m .66002 .44982 L .65156 .45346 L p F P
0 g
s
0 1 .52 r
.6632 .44836 m .64492 .46044 L .65156 .45346 L p F P
0 g
s
0 1 .87 r
.6256 .46479 m .64232 .45752 L p .65156 .45346 L F P
0 g
s
0 1 .699 r
.43106 .46845 m .46734 .47775 L .47023 .48338 L p F P
0 g
s
0 1 .702 r
.50672 .48775 m .47023 .48338 L .46734 .47775 L p F P
0 g
s
0 1 .577 r
.5833 .47715 m .61932 .46748 L .61439 .47368 L p F P
0 g
s
0 1 .577 r
.61439 .47368 m .58024 .48282 L .5833 .47715 L p F P
0 g
s
.747 0 1 r
.38928 .61784 m .4421 .63013 L .43766 .6326 L p F P
0 g
s
.747 0 1 r
.43766 .6326 m .3819 .61965 L .38928 .61784 L p F P
0 g
s
1 0 .453 r
.23726 .44947 m .27402 .48302 L .284 .46886 L p F P
0 g
s
1 0 .453 r
.284 .46886 m .24892 .43641 L .23726 .44947 L p F P
0 g
s
1 0 .752 r
.24892 .43641 m .284 .46886 L .29568 .45624 L p F P
0 g
s
.806 0 1 r
.5544 .63595 m .60992 .62935 L .61462 .63178 L p F P
0 g
s
1 0 .765 r
.61462 .63178 m .67003 .6183 L .6766 .61641 L p F P
0 g
s
.854 0 1 r
.67003 .6183 m .61462 .63178 L .60992 .62935 L p F P
0 g
s
1 0 .752 r
.29568 .45624 m .26256 .42518 L .24892 .43641 L p F P
0 g
s
.866 0 1 r
.26256 .42518 m .29568 .45624 L .30858 .44572 L p F P
0 g
s
1 0 .233 r
.2281 .4638 m .26619 .49812 L .27402 .48302 L p F P
0 g
s
1 0 .233 r
.27402 .48302 m .23726 .44947 L .2281 .4638 L p F P
0 g
s
1 0 .855 r
.33118 .60046 m .3819 .61965 L .37555 .61782 L p F P
0 g
s
1 0 .855 r
.37555 .61782 m .32245 .59774 L .33118 .60046 L p F P
0 g
s
1 0 .429 r
.80101 .43352 m .76682 .46638 L .77694 .48046 L p F P
0 g
s
1 0 .722 r
.76682 .46638 m .80101 .43352 L .78723 .42241 L p F P
0 g
s
1 0 .722 r
.78723 .42241 m .75495 .45386 L .76682 .46638 L p F P
0 g
s
0 .783 1 r
.66988 .44962 m .70107 .42906 L .68899 .43067 L p F P
0 g
s
.893 0 1 r
.75495 .45386 m .78723 .42241 L .77206 .41365 L p F P
0 g
s
.893 0 1 r
.77206 .41365 m .74187 .44347 L .75495 .45386 L p F P
0 g
s
.866 0 1 r
.30858 .44572 m .27757 .41627 L .26256 .42518 L p F P
0 g
s
.397 0 1 r
.27757 .41627 m .30858 .44572 L .32212 .43777 L p F P
0 g
s
1 0 .262 r
.268 .5645 m .31549 .59166 L .31062 .58257 L p F P
0 g
s
1 0 .262 r
.31062 .58257 m .2619 .5546 L .268 .5645 L p F P
0 g
s
1 0 .428 r
.6766 .61641 m .72916 .5958 L .73627 .58965 L p F P
0 g
s
1 0 .722 r
.72916 .5958 m .6766 .61641 L .67003 .6183 L p F P
0 g
s
1 0 .218 r
.81278 .44648 m .77694 .48046 L .78489 .4955 L p F P
0 g
s
1 0 .429 r
.77694 .48046 m .81278 .44648 L .80101 .43352 L p F P
0 g
s
.333 0 1 r
.44697 .624 m .49934 .62975 L .4978 .63622 L p F P
0 g
s
.333 0 1 r
.4978 .63622 m .4421 .63013 L .44697 .624 L p F P
0 g
s
.344 0 1 r
.5544 .63595 m .4978 .63622 L .49934 .62975 L p F P
0 g
s
.344 0 1 r
.49934 .62975 m .55257 .6295 L .5544 .63595 L p F P
0 g
s
.365 0 1 r
.60992 .62935 m .5544 .63595 L .55257 .6295 L p F P
0 g
s
1 0 .089 r
.22186 .47877 m .26086 .5135 L .26619 .49812 L p F P
0 g
s
1 0 .089 r
.26619 .49812 m .2281 .4638 L .22186 .47877 L p F P
0 g
s
.412 0 1 r
.74187 .44347 m .77206 .41365 L .75617 .40761 L p F P
0 g
s
.412 0 1 r
.75617 .40761 m .72812 .43564 L .74187 .44347 L p F P
0 g
s
0 1 .369 r
.47023 .48338 m .50672 .48775 L .50733 .49664 L p F P
0 g
s
0 1 .352 r
.50672 .48775 m .54387 .48756 L .54314 .49646 L p F P
0 g
s
0 1 .352 r
.54314 .49646 m .50733 .49664 L .50672 .48775 L p F P
0 g
s
0 1 .321 r
.54387 .48756 m .58024 .48282 L .57818 .49191 L p F P
0 g
s
0 1 .321 r
.57818 .49191 m .54314 .49646 L .54387 .48756 L p F P
0 g
s
1 0 .21 r
.78921 .55202 m .74126 .5805 L .73627 .58965 L p F P
0 g
s
1 0 .079 r
.74126 .5805 m .78921 .55202 L .79254 .53977 L p F P
0 g
s
1 0 .082 r
.82204 .46074 m .78489 .4955 L .79029 .51085 L p F P
0 g
s
1 0 .218 r
.78489 .4955 m .82204 .46074 L .81278 .44648 L p F P
0 g
s
.397 0 1 r
.32212 .43777 m .29331 .41007 L .27757 .41627 L p F P
0 g
s
0 .043 1 r
.29331 .41007 m .32212 .43777 L .33572 .43275 L p F P
0 g
s
0 1 .667 r
.39844 .45477 m .43106 .46845 L .43583 .4746 L p F P
0 g
s
0 1 .699 r
.47023 .48338 m .43583 .4746 L .43106 .46845 L p F P
0 g
s
0 1 .534 r
.61932 .46748 m .65156 .45346 L .64492 .46044 L p F P
0 g
s
0 1 .534 r
.64492 .46044 m .61439 .47368 L .61932 .46748 L p F P
0 g
s
0 .045 1 r
.72812 .43564 m .75617 .40761 L .74024 .40458 L p F P
0 g
s
0 .045 1 r
.74024 .40458 m .71432 .43076 L .72812 .43564 L p F P
0 g
s
1 0 .018 r
.21885 .49372 m .2583 .52848 L .26086 .5135 L p F P
0 g
s
1 0 .018 r
.26086 .5135 m .22186 .47877 L .21885 .49372 L p F P
0 g
s
0 1 .366 r
.43583 .4746 m .47023 .48338 L .47217 .49245 L p F P
0 g
s
0 1 .369 r
.50733 .49664 m .47217 .49245 L .47023 .48338 L p F P
0 g
s
0 1 .286 r
.58024 .48282 m .61439 .47368 L .61106 .48316 L p F P
0 g
s
0 1 .286 r
.61106 .48316 m .57818 .49191 L .58024 .48282 L p F P
0 g
s
.334 0 1 r
.39735 .6124 m .44697 .624 L .4421 .63013 L p F P
0 g
s
.334 0 1 r
.4421 .63013 m .38928 .61784 L .39735 .6124 L p F P
0 g
s
.365 0 1 r
.55257 .6295 m .60478 .62326 L .60992 .62935 L p F P
0 g
s
.391 0 1 r
.6624 .61655 m .60992 .62935 L .60478 .62326 L p F P
0 g
s
.854 0 1 r
.60992 .62935 m .6624 .61655 L .67003 .6183 L p F P
0 g
s
1 0 .016 r
.82834 .47567 m .79029 .51085 L .79289 .52583 L p F P
0 g
s
1 0 .082 r
.79029 .51085 m .82834 .47567 L .82204 .46074 L p F P
0 g
s
.774 0 1 r
.34132 .59964 m .38928 .61784 L .3819 .61965 L p F P
0 g
s
.774 0 1 r
.3819 .61965 m .33118 .60046 L .34132 .59964 L p F P
0 g
s
0 .043 1 r
.33572 .43275 m .30907 .40687 L .29331 .41007 L p F P
0 g
s
1 0 .498 r
.27668 .5716 m .32245 .59774 L .31549 .59166 L p F P
0 g
s
1 0 .498 r
.31549 .59166 m .268 .5645 L .27668 .5716 L p F P
0 g
s
.893 0 1 r
.72022 .59861 m .67003 .6183 L .6624 .61655 L p F P
0 g
s
1 0 .722 r
.67003 .6183 m .72022 .59861 L .72916 .5958 L p F P
0 g
s
0 .034 1 r
.45201 .61445 m .50093 .61985 L .49934 .62975 L p F P
0 g
s
0 .034 1 r
.49934 .62975 m .44697 .624 L .45201 .61445 L p F P
0 g
s
0 .036 1 r
.55257 .6295 m .49934 .62975 L .50093 .61985 L p F P
0 g
s
0 .036 1 r
.50093 .61985 m .55068 .61962 L .55257 .6295 L p F P
0 g
s
0 .039 1 r
.60478 .62326 m .55257 .6295 L .55068 .61962 L p F P
0 g
s
0 .411 1 r
.71432 .43076 m .74024 .40458 L .72499 .4047 L p F P
0 g
s
0 .411 1 r
.72499 .4047 m .70107 .42906 L .71432 .43076 L p F P
0 g
s
1 0 .416 r
.78302 .562 m .73627 .58965 L .72916 .5958 L p F P
0 g
s
1 0 .21 r
.73627 .58965 m .78302 .562 L .78921 .55202 L p F P
0 g
s
0 1 .119 r
.47217 .49245 m .50733 .49664 L .50762 .50865 L p F P
0 g
s
0 1 .113 r
.50733 .49664 m .54314 .49646 L .5428 .50848 L p F P
0 g
s
0 1 .113 r
.5428 .50848 m .50762 .50865 L .50733 .49664 L p F P
0 g
s
1 0 .018 r
.21925 .50797 m .25863 .5424 L .2583 .52848 L p F P
0 g
s
1 0 .018 r
.2583 .52848 m .21885 .49372 L .21925 .50797 L p F P
0 g
s
0 1 .101 r
.54314 .49646 m .57818 .49191 L .57722 .50404 L p F P
0 g
s
0 1 .101 r
.57722 .50404 m .5428 .50848 L .54314 .49646 L p F P
0 g
s
0 1 .667 r
.43583 .4746 m .40494 .46167 L .39844 .45477 L p F P
0 g
s
0 1 .345 r
.40494 .46167 m .43583 .4746 L .43905 .48403 L p F P
0 g
s
0 1 .366 r
.47217 .49245 m .43905 .48403 L .43583 .4746 L p F P
0 g
s
1 0 .016 r
.79289 .52583 m .83137 .49062 L .82834 .47567 L p F P
0 g
s
1 0 .016 r
.83137 .49062 m .79289 .52583 L .79254 .53977 L p F P
0 g
s
0 1 .26 r
.61439 .47368 m .64492 .46044 L .64044 .47047 L p F P
0 g
s
0 1 .26 r
.64044 .47047 m .61106 .48316 L .61439 .47368 L p F P
0 g
s
0 1 .118 r
.43905 .48403 m .47217 .49245 L .47307 .50457 L p F P
0 g
s
0 1 .119 r
.50762 .50865 m .47307 .50457 L .47217 .49245 L p F P
0 g
s
0 1 .089 r
.57818 .49191 m .61106 .48316 L .60953 .4955 L p F P
0 g
s
0 1 .089 r
.60953 .4955 m .57722 .50404 L .57818 .49191 L p F P
0 g
s
0 .035 1 r
.40572 .60355 m .45201 .61445 L .44697 .624 L p F P
0 g
s
0 .035 1 r
.44697 .624 m .39735 .6124 L .40572 .60355 L p F P
0 g
s
0 .039 1 r
.55068 .61962 m .59944 .61376 L .60478 .62326 L p F P
0 g
s
0 .042 1 r
.65407 .61119 m .60478 .62326 L .59944 .61376 L p F P
0 g
s
.391 0 1 r
.60478 .62326 m .65407 .61119 L .6624 .61655 L p F P
0 g
s
0 .768 1 r
.70107 .42906 m .72499 .4047 L .7111 .40801 L p F P
0 g
s
0 .768 1 r
.7111 .40801 m .68899 .43067 L .70107 .42906 L p F P
0 g
s
1 0 .805 r
.28757 .57552 m .33118 .60046 L .32245 .59774 L p F P
0 g
s
1 0 .805 r
.32245 .59774 m .27668 .5716 L .28757 .57552 L p F P
0 g
s
.348 0 1 r
.35238 .59525 m .39735 .6124 L .38928 .61784 L p F P
0 g
s
.348 0 1 r
.38928 .61784 m .34132 .59964 L .35238 .59525 L p F P
0 g
s
1 0 .089 r
.22308 .52085 m .2619 .5546 L .25863 .5424 L p F P
0 g
s
1 0 .089 r
.25863 .5424 m .21925 .50797 L .22308 .52085 L p F P
0 g
s
0 .323 1 r
.457 .6019 m .50251 .60697 L .50093 .61985 L p F P
0 g
s
0 .323 1 r
.50093 .61985 m .45201 .61445 L .457 .6019 L p F P
0 g
s
0 .335 1 r
.55068 .61962 m .50093 .61985 L .50251 .60697 L p F P
0 g
s
0 .335 1 r
.50251 .60697 m .54881 .60675 L .55068 .61962 L p F P
0 g
s
0 .359 1 r
.59944 .61376 m .55068 .61962 L .54881 .60675 L p F P
0 g
s
.412 0 1 r
.70986 .59788 m .6624 .61655 L .65407 .61119 L p F P
0 g
s
.893 0 1 r
.6624 .61655 m .70986 .59788 L .72022 .59861 L p F P
0 g
s
0 1 .025 r
.47307 .50457 m .50762 .50865 L .50754 .52324 L p F P
0 g
s
0 1 .024 r
.50762 .50865 m .5428 .50848 L .54287 .52306 L p F P
0 g
s
0 1 .024 r
.54287 .52306 m .50754 .52324 L .50762 .50865 L p F P
0 g
s
0 1 .021 r
.5428 .50848 m .57722 .50404 L .57745 .51865 L p F P
0 g
s
0 1 .021 r
.57745 .51865 m .54287 .52306 L .5428 .50848 L p F P
0 g
s
1 0 .416 r
.72916 .5958 m .7742 .56919 L .78302 .562 L p F P
0 g
s
1 0 .707 r
.7742 .56919 m .72916 .5958 L .72022 .59861 L p F P
0 g
s
1 0 .082 r
.83096 .50489 m .79254 .53977 L .78921 .55202 L p F P
0 g
s
1 0 .016 r
.79254 .53977 m .83096 .50489 L .83137 .49062 L p F P
0 g
s
0 1 .345 r
.43905 .48403 m .40932 .47165 L .40494 .46167 L p F P
0 g
s
0 1 .11 r
.40932 .47165 m .43905 .48403 L .44053 .49635 L p F P
0 g
s
0 1 .118 r
.47307 .50457 m .44053 .49635 L .43905 .48403 L p F P
0 g
s
0 1 .025 r
.44053 .49635 m .47307 .50457 L .47285 .51917 L p F P
0 g
s
0 1 .025 r
.50754 .52324 m .47285 .51917 L .47307 .50457 L p F P
0 g
s
0 1 .079 r
.61106 .48316 m .64044 .47047 L .63838 .48312 L p F P
0 g
s
0 1 .079 r
.63838 .48312 m .60953 .4955 L .61106 .48316 L p F P
0 g
s
0 .325 1 r
.41397 .59168 m .457 .6019 L .45201 .61445 L p F P
0 g
s
0 .325 1 r
.45201 .61445 m .40572 .60355 L .41397 .59168 L p F P
0 g
s
0 1 .018 r
.57722 .50404 m .60953 .4955 L .6099 .51014 L p F P
0 g
s
0 1 .018 r
.6099 .51014 m .57745 .51865 L .57722 .50404 L p F P
0 g
s
1 0 .715 r
.22508 .39952 m .24892 .43641 L .26256 .42518 L p F P
0 g
s
1 0 .715 r
.26256 .42518 m .24019 .38993 L .22508 .39952 L p F P
0 g
s
.9 0 1 r
.24019 .38993 m .26256 .42518 L .27757 .41627 L p F P
0 g
s
0 .359 1 r
.54881 .60675 m .59418 .60125 L .59944 .61376 L p F P
0 g
s
0 .388 1 r
.64543 .60242 m .59944 .61376 L .59418 .60125 L p F P
0 g
s
0 .042 1 r
.59944 .61376 m .64543 .60242 L .65407 .61119 L p F P
0 g
s
0 1 .87 r
.68899 .43067 m .7111 .40801 L .69921 .41439 L p F P
0 g
s
0 1 .87 r
.69921 .41439 m .67862 .43555 L .68899 .43067 L p F P
0 g
s
0 1 .312 r
.37889 .44505 m .40494 .46167 L .40932 .47165 L p F P
0 g
s
.9 0 1 r
.27757 .41627 m .25679 .38292 L .24019 .38993 L p F P
0 g
s
.416 0 1 r
.25679 .38292 m .27757 .41627 L .29331 .41007 L p F P
0 g
s
1 0 .423 r
.21213 .41127 m .23726 .44947 L .24892 .43641 L p F P
0 g
s
1 0 .423 r
.24892 .43641 m .22508 .39952 L .21213 .41127 L p F P
0 g
s
0 .617 1 r
.46166 .58695 m .50399 .5917 L .50251 .60697 L p F P
0 g
s
0 .617 1 r
.50251 .60697 m .457 .6019 L .46166 .58695 L p F P
0 g
s
0 .638 1 r
.54881 .60675 m .50251 .60697 L .50399 .5917 L p F P
0 g
s
0 .638 1 r
.50399 .5917 m .54706 .5915 L .54881 .60675 L p F P
0 g
s
0 .679 1 r
.59418 .60125 m .54881 .60675 L .54706 .5915 L p F P
0 g
s
0 1 .251 r
.64492 .46044 m .6705 .44353 L .66502 .45429 L p F P
0 g
s
0 1 .251 r
.66502 .45429 m .64044 .47047 L .64492 .46044 L p F P
0 g
s
0 1 .119 r
.47285 .51917 m .50754 .52324 L .50712 .53969 L p F P
0 g
s
0 1 .113 r
.50754 .52324 m .54287 .52306 L .54337 .53951 L p F P
0 g
s
0 1 .113 r
.54337 .53951 m .50712 .53969 L .50754 .52324 L p F P
0 g
s
1 0 .233 r
.23022 .53175 m .268 .5645 L .2619 .5546 L p F P
0 g
s
1 0 .233 r
.2619 .5546 m .22308 .52085 L .23022 .53175 L p F P
0 g
s
0 1 .101 r
.54287 .52306 m .57745 .51865 L .57886 .53503 L p F P
0 g
s
0 1 .101 r
.57886 .53503 m .54337 .53951 L .54287 .52306 L p F P
0 g
s
1 0 .754 r
.8086 .38688 m .78723 .42241 L .80101 .43352 L p F P
0 g
s
.864 0 1 r
.78723 .42241 m .8086 .38688 L .7919 .38004 L p F P
0 g
s
.864 0 1 r
.7919 .38004 m .77206 .41365 L .78723 .42241 L p F P
0 g
s
0 .036 1 r
.36384 .58746 m .40572 .60355 L .39735 .6124 L p F P
0 g
s
0 .036 1 r
.39735 .6124 m .35238 .59525 L .36384 .58746 L p F P
0 g
s
.818 0 1 r
.30018 .57601 m .34132 .59964 L .33118 .60046 L p F P
0 g
s
.818 0 1 r
.33118 .60046 m .28757 .57552 L .30018 .57601 L p F P
0 g
s
.397 0 1 r
.77206 .41365 m .7919 .38004 L .77443 .37608 L p F P
0 g
s
.397 0 1 r
.77443 .37608 m .75617 .40761 L .77206 .41365 L p F P
0 g
s
.416 0 1 r
.29331 .41007 m .27415 .37879 L .25679 .38292 L p F P
0 g
s
0 .046 1 r
.27415 .37879 m .29331 .41007 L .30907 .40687 L p F P
0 g
s
1 0 .214 r
.20194 .42467 m .2281 .4638 L .23726 .44947 L p F P
0 g
s
1 0 .214 r
.23726 .44947 m .21213 .41127 L .20194 .42467 L p F P
0 g
s
1 0 .454 r
.8238 .39632 m .80101 .43352 L .81278 .44648 L p F P
0 g
s
1 0 .754 r
.80101 .43352 m .8238 .39632 L .8086 .38688 L p F P
0 g
s
0 .045 1 r
.69855 .5936 m .65407 .61119 L .64543 .60242 L p F P
0 g
s
.412 0 1 r
.65407 .61119 m .69855 .5936 L .70986 .59788 L p F P
0 g
s
1 0 .218 r
.82708 .51784 m .78921 .55202 L .78302 .562 L p F P
0 g
s
1 0 .082 r
.78921 .55202 m .82708 .51784 L .83096 .50489 L p F P
0 g
s
.907 0 1 r
.76313 .57322 m .72022 .59861 L .70986 .59788 L p F P
0 g
s
1 0 .707 r
.72022 .59861 m .76313 .57322 L .7742 .56919 L p F P
0 g
s
0 .043 1 r
.75617 .40761 m .77443 .37608 L .75697 .37519 L p F P
0 g
s
0 .043 1 r
.75697 .37519 m .74024 .40458 L .75617 .40761 L p F P
0 g
s
0 1 .025 r
.47285 .51917 m .44017 .51099 L .44053 .49635 L p F P
0 g
s
0 1 .118 r
.44017 .51099 m .47285 .51917 L .47151 .53556 L p F P
0 g
s
0 1 .119 r
.50712 .53969 m .47151 .53556 L .47285 .51917 L p F P
0 g
s
0 .947 1 r
.46577 .57033 m .50529 .57482 L .50399 .5917 L p F P
0 g
s
0 .947 1 r
.50399 .5917 m .46166 .58695 L .46577 .57033 L p F P
0 g
s
0 .973 1 r
.54706 .5915 m .50399 .5917 L .50529 .57482 L p F P
0 g
s
0 .62 1 r
.4217 .57736 m .46166 .58695 L .457 .6019 L p F P
0 g
s
0 .62 1 r
.457 .6019 m .41397 .59168 L .4217 .57736 L p F P
0 g
s
1 0 .234 r
.83683 .40795 m .81278 .44648 L .82204 .46074 L p F P
0 g
s
1 0 .454 r
.81278 .44648 m .83683 .40795 L .8238 .39632 L p F P
0 g
s
0 1 .089 r
.57745 .51865 m .6099 .51014 L .61217 .52638 L p F P
0 g
s
0 1 .089 r
.61217 .52638 m .57886 .53503 L .57745 .51865 L p F P
0 g
s
0 .973 1 r
.50529 .57482 m .54552 .57463 L .54706 .5915 L p F P
0 g
s
0 1 .977 r
.58925 .58633 m .54706 .5915 L .54552 .57463 L p F P
0 g
s
0 .679 1 r
.54706 .5915 m .58925 .58633 L .59418 .60125 L p F P
0 g
s
0 1 .369 r
.47151 .53556 m .50712 .53969 L .50635 .55718 L p F P
0 g
s
0 1 .352 r
.50712 .53969 m .54337 .53951 L .54427 .557 L p F P
0 g
s
0 1 .352 r
.54427 .557 m .50635 .55718 L .50712 .53969 L p F P
0 g
s
0 1 .11 r
.44053 .49635 m .41134 .48428 L .40932 .47165 L p F P
0 g
s
0 1 .023 r
.41134 .48428 m .44053 .49635 L .44017 .51099 L p F P
0 g
s
0 1 .321 r
.54337 .53951 m .57886 .53503 L .58138 .55236 L p F P
0 g
s
0 1 .321 r
.58138 .55236 m .54427 .557 L .54337 .53951 L p F P
0 g
s
0 .728 1 r
.63691 .59062 m .59418 .60125 L .58925 .58633 L p F P
0 g
s
0 .388 1 r
.59418 .60125 m .63691 .59062 L .64543 .60242 L p F P
0 g
s
0 .046 1 r
.30907 .40687 m .29151 .37771 L .27415 .37879 L p F P
0 g
s
0 .415 1 r
.29151 .37771 m .30907 .40687 L .32418 .40684 L p F P
0 g
s
0 1 .016 r
.60953 .4955 m .63838 .48312 L .63887 .49782 L p F P
0 g
s
0 1 .016 r
.63887 .49782 m .6099 .51014 L .60953 .4955 L p F P
0 g
s
1 0 .081 r
.195 .43914 m .22186 .47877 L .2281 .4638 L p F P
0 g
s
1 0 .081 r
.2281 .4638 m .20194 .42467 L .195 .43914 L p F P
0 g
s
0 1 .566 r
.70206 .40135 m .6899 .42358 L .69921 .41439 L p F P
0 g
s
0 1 .279 r
.69525 .41396 m .69067 .42234 L p .6899 .42358 L F P
0 g
s
0 1 .535 r
.68923 .42464 m .69921 .41439 L .6899 .42358 L p F P
0 g
s
0 1 .279 r
.69067 .42234 m .68363 .43521 L .6899 .42358 L p F P
0 g
s
0 1 .535 r
.67862 .43555 m .68923 .42464 L p .6899 .42358 L F P
0 g
s
0 1 .702 r
.46911 .55291 m .50635 .55718 L .50529 .57482 L p F P
0 g
s
0 1 .702 r
.50529 .57482 m .46577 .57033 L .46911 .55291 L p F P
0 g
s
0 1 .677 r
.54552 .57463 m .50529 .57482 L .50635 .55718 L p F P
0 g
s
0 1 .369 r
.50635 .55718 m .46911 .55291 L .47151 .53556 L p F P
0 g
s
0 1 .677 r
.50635 .55718 m .54427 .557 L .54552 .57463 L p F P
0 g
s
0 1 .631 r
.58491 .56976 m .54552 .57463 L .54427 .557 L p F P
0 g
s
0 1 .977 r
.54552 .57463 m .58491 .56976 L .58925 .58633 L p F P
0 g
s
0 1 .631 r
.54427 .557 m .58138 .55236 L .58491 .56976 L p F P
0 g
s
0 .393 1 r
.74024 .40458 m .75697 .37519 L .74029 .37742 L p F P
0 g
s
0 .393 1 r
.74029 .37742 m .72499 .4047 L .74024 .40458 L p F P
0 g
s
0 1 .312 r
.40932 .47165 m .38428 .45574 L .37889 .44505 L p F P
0 g
s
0 1 .098 r
.38428 .45574 m .40932 .47165 L .41134 .48428 L p F P
0 g
s
0 .34 1 r
.37513 .57661 m .41397 .59168 L .40572 .60355 L p F P
0 g
s
0 .34 1 r
.40572 .60355 m .36384 .58746 L .37513 .57661 L p F P
0 g
s
1 0 .09 r
.84708 .42127 m .82204 .46074 L .82834 .47567 L p F P
0 g
s
1 0 .234 r
.82204 .46074 m .84708 .42127 L .83683 .40795 L p F P
0 g
s
0 1 .118 r
.47151 .53556 m .43796 .52725 L .44017 .51099 L p F P
0 g
s
0 1 .366 r
.43796 .52725 m .47151 .53556 L .46911 .55291 L p F P
0 g
s
1 0 .453 r
.24037 .54012 m .27668 .5716 L .268 .5645 L p F P
0 g
s
1 0 .453 r
.268 .5645 m .23022 .53175 L .24037 .54012 L p F P
0 g
s
0 .951 1 r
.42849 .56129 m .46577 .57033 L .46166 .58695 L p F P
0 g
s
0 .951 1 r
.46166 .58695 m .4217 .57736 L .42849 .56129 L p F P
0 g
s
0 1 .076 r
.64044 .47047 m .66502 .45429 L .6625 .46735 L p F P
0 g
s
0 1 .076 r
.6625 .46735 m .63838 .48312 L .64044 .47047 L p F P
0 g
s
0 1 .286 r
.57886 .53503 m .61217 .52638 L .61624 .54341 L p F P
0 g
s
0 1 .286 r
.61624 .54341 m .58138 .55236 L .57886 .53503 L p F P
0 g
s
0 1 .917 r
.62894 .57636 m .58925 .58633 L .58491 .56976 L p F P
0 g
s
0 .728 1 r
.58925 .58633 m .62894 .57636 L .63691 .59062 L p F P
0 g
s
0 .411 1 r
.68684 .58591 m .64543 .60242 L .63691 .59062 L p F P
0 g
s
0 .045 1 r
.64543 .60242 m .68684 .58591 L .69855 .5936 L p F P
0 g
s
.372 0 1 r
.31393 .57301 m .35238 .59525 L .34132 .59964 L p F P
0 g
s
.372 0 1 r
.34132 .59964 m .30018 .57601 L .31393 .57301 L p F P
0 g
s
0 .415 1 r
.32418 .40684 m .30809 .37976 L .29151 .37771 L p F P
0 g
s
0 .775 1 r
.30809 .37976 m .32418 .40684 L .33793 .40999 L p F P
0 g
s
1 0 .016 r
.19165 .45403 m .21885 .49372 L .22186 .47877 L p F P
0 g
s
1 0 .016 r
.22186 .47877 m .195 .43914 L .19165 .45403 L p F P
0 g
s
0 1 .366 r
.46911 .55291 m .434 .5443 L .43796 .52725 L p F P
0 g
s
0 1 .699 r
.434 .5443 m .46911 .55291 L .46577 .57033 L p F P
0 g
s
1 0 .218 r
.78302 .562 m .81986 .52883 L .82708 .51784 L p F P
0 g
s
1 0 .429 r
.81986 .52883 m .78302 .562 L .7742 .56919 L p F P
0 g
s
0 1 .699 r
.46577 .57033 m .42849 .56129 L .434 .5443 L p F P
0 g
s
0 1 .023 r
.44017 .51099 m .41085 .49897 L .41134 .48428 L p F P
0 g
s
0 1 .11 r
.41085 .49897 m .44017 .51099 L .43796 .52725 L p F P
0 g
s
0 1 .577 r
.58138 .55236 m .61624 .54341 L .62193 .56035 L p F P
0 g
s
0 1 .577 r
.62193 .56035 m .58491 .56976 L .58138 .55236 L p F P
0 g
s
.42 0 1 r
.75032 .57384 m .70986 .59788 L .69855 .5936 L p F P
0 g
s
.907 0 1 r
.70986 .59788 m .75032 .57384 L .76313 .57322 L p F P
0 g
s
0 1 .917 r
.58491 .56976 m .62193 .56035 L .62894 .57636 L p F P
0 g
s
0 .738 1 r
.72499 .4047 m .74029 .37742 L .72513 .38268 L p F P
0 g
s
0 .738 1 r
.72513 .38268 m .7111 .40801 L .72499 .4047 L p F P
0 g
s
0 1 .079 r
.6099 .51014 m .63887 .49782 L .64193 .51385 L p F P
0 g
s
0 1 .079 r
.64193 .51385 m .61217 .52638 L .6099 .51014 L p F P
0 g
s
1 0 .018 r
.85407 .4357 m .82834 .47567 L .83137 .49062 L p F P
0 g
s
1 0 .09 r
.82834 .47567 m .85407 .4357 L .84708 .42127 L p F P
0 g
s
0 .647 1 r
.38568 .56324 m .4217 .57736 L .41397 .59168 L p F P
0 g
s
0 .647 1 r
.41397 .59168 m .37513 .57661 L .38568 .56324 L p F P
0 g
s
0 1 .26 r
.6705 .44353 m .6899 .42358 L .68363 .43521 L p F P
0 g
s
0 1 .26 r
.68363 .43521 m .66502 .45429 L .6705 .44353 L p F P
0 g
s
0 .768 1 r
.67531 .57517 m .63691 .59062 L .62894 .57636 L p F P
0 g
s
0 .411 1 r
.63691 .59062 m .67531 .57517 L .68684 .58591 L p F P
0 g
s
0 1 .098 r
.41134 .48428 m .38676 .46876 L .38428 .45574 L p F P
0 g
s
0 1 .02 r
.38676 .46876 m .41134 .48428 L .41085 .49897 L p F P
0 g
s
0 1 .11 r
.43796 .52725 m .40784 .51502 L .41085 .49897 L p F P
0 g
s
0 1 .345 r
.40784 .51502 m .43796 .52725 L .434 .5443 L p F P
0 g
s
0 .775 1 r
.33793 .40999 m .32317 .38485 L .30809 .37976 L p F P
0 g
s
0 1 .016 r
.63838 .48312 m .6625 .46735 L .6631 .48211 L p F P
0 g
s
0 1 .016 r
.6631 .48211 m .63887 .49782 L .63838 .48312 L p F P
0 g
s
1 0 .752 r
.2531 .54552 m .28757 .57552 L .27668 .5716 L p F P
0 g
s
1 0 .752 r
.27668 .5716 m .24037 .54012 L .2531 .54552 L p F P
0 g
s
0 1 .26 r
.61217 .52638 m .64193 .51385 L .64742 .53043 L p F P
0 g
s
0 1 .26 r
.64742 .53043 m .61624 .54341 L .61217 .52638 L p F P
0 g
s
1 0 .016 r
.19209 .46867 m .21925 .50797 L .21885 .49372 L p F P
0 g
s
1 0 .016 r
.21885 .49372 m .19165 .45403 L .19209 .46867 L p F P
0 g
s
0 .04 1 r
.32814 .56663 m .36384 .58746 L .35238 .59525 L p F P
0 g
s
0 .04 1 r
.35238 .59525 m .31393 .57301 L .32814 .56663 L p F P
0 g
s
0 .984 1 r
.39494 .54799 m .42849 .56129 L .4217 .57736 L p F P
0 g
s
0 .984 1 r
.4217 .57736 m .38568 .56324 L .39494 .54799 L p F P
0 g
s
0 1 .906 r
.7111 .40801 m .72513 .38268 L .71218 .39077 L p F P
0 g
s
0 1 .906 r
.71218 .39077 m .69921 .41439 L .7111 .40801 L p F P
0 g
s
0 1 .87 r
.66455 .56188 m .62894 .57636 L .62193 .56035 L p F P
0 g
s
0 .768 1 r
.62894 .57636 m .66455 .56188 L .67531 .57517 L p F P
0 g
s
0 1 .345 r
.434 .5443 m .40246 .53164 L .40784 .51502 L p F P
0 g
s
0 1 .667 r
.40246 .53164 m .434 .5443 L .42849 .56129 L p F P
0 g
s
0 .046 1 r
.73636 .57097 m .69855 .5936 L .68684 .58591 L p F P
0 g
s
.42 0 1 r
.69855 .5936 m .73636 .57097 L .75032 .57384 L p F P
0 g
s
1 0 .722 r
.80959 .53731 m .7742 .56919 L .76313 .57322 L p F P
0 g
s
1 0 .429 r
.7742 .56919 m .80959 .53731 L .81986 .52883 L p F P
0 g
s
0 1 .667 r
.42849 .56129 m .39494 .54799 L .40246 .53164 L p F P
0 g
s
0 1 .534 r
.61624 .54341 m .64742 .53043 L .65509 .54671 L p F P
0 g
s
0 1 .534 r
.65509 .54671 m .62193 .56035 L .61624 .54341 L p F P
0 g
s
1 0 .018 r
.83137 .49062 m .85744 .45058 L .85407 .4357 L p F P
0 g
s
1 0 .018 r
.85744 .45058 m .83137 .49062 L .83096 .50489 L p F P
0 g
s
0 1 .87 r
.62193 .56035 m .65509 .54671 L .66455 .56188 L p F P
0 g
s
0 1 .278 r
.38428 .45574 m .36512 .43687 L .35892 .42532 L p F P
0 g
s
0 1 .086 r
.36512 .43687 m .38428 .45574 L .38676 .46876 L p F P
0 g
s
0 1 .02 r
.41085 .49897 m .38616 .48352 L .38676 .46876 L p F P
0 g
s
0 1 .098 r
.38616 .48352 m .41085 .49897 L .40784 .51502 L p F P
0 g
s
0 1 .079 r
.66502 .45429 m .68363 .43521 L .68075 .44875 L p F P
0 g
s
0 1 .079 r
.68075 .44875 m .6625 .46735 L .66502 .45429 L p F P
0 g
s
0 1 .076 r
.63887 .49782 m .6631 .48211 L .66684 .49787 L p F P
0 g
s
0 1 .076 r
.66684 .49787 m .64193 .51385 L .63887 .49782 L p F P
0 g
s
0 .366 1 r
.34212 .55714 m .37513 .57661 L .36384 .58746 L p F P
0 g
s
0 .366 1 r
.36384 .58746 m .32814 .56663 L .34212 .55714 L p F P
0 g
s
1 0 .081 r
.19636 .48235 m .22308 .52085 L .21925 .50797 L p F P
0 g
s
1 0 .081 r
.21925 .50797 m .19209 .46867 L .19636 .48235 L p F P
0 g
s
0 1 .566 r
.69921 .41439 m .71218 .39077 L .70206 .40135 L p F P
0 g
s
.866 0 1 r
.26781 .54766 m .30018 .57601 L .28757 .57552 L p F P
0 g
s
.866 0 1 r
.28757 .57552 m .2531 .54552 L .26781 .54766 L p F P
0 g
s
0 .42 1 r
.72193 .56472 m .68684 .58591 L .67531 .57517 L p F P
0 g
s
0 .046 1 r
.68684 .58591 m .72193 .56472 L .73636 .57097 L p F P
0 g
s
1 0 .09 r
.85698 .46525 m .83096 .50489 L .82708 .51784 L p F P
0 g
s
1 0 .018 r
.83096 .50489 m .85698 .46525 L .85744 .45058 L p F P
0 g
s
.893 0 1 r
.79673 .54285 m .76313 .57322 L .75032 .57384 L p F P
0 g
s
1 0 .722 r
.76313 .57322 m .79673 .54285 L .80959 .53731 L p F P
0 g
s
0 1 .098 r
.40784 .51502 m .38247 .49931 L .38616 .48352 L p F P
0 g
s
0 1 .312 r
.38247 .49931 m .40784 .51502 L .40246 .53164 L p F P
0 g
s
.906 0 1 r
.23022 .35183 m .24019 .38993 L .25679 .38292 L p F P
0 g
s
.906 0 1 r
.25679 .38292 m .24774 .34696 L .23022 .35183 L p F P
0 g
s
.419 0 1 r
.24774 .34696 m .25679 .38292 L .27415 .37879 L p F P
0 g
s
.419 0 1 r
.27415 .37879 m .26602 .34513 L .24774 .34696 L p F P
0 g
s
0 .046 1 r
.26602 .34513 m .27415 .37879 L .29151 .37771 L p F P
0 g
s
0 .691 1 r
.35515 .54502 m .38568 .56324 L .37513 .57661 L p F P
0 g
s
0 .691 1 r
.37513 .57661 m .34212 .55714 L .35515 .54502 L p F P
0 g
s
0 1 .251 r
.64193 .51385 m .66684 .49787 L .67356 .51386 L p F P
0 g
s
0 1 .251 r
.67356 .51386 m .64742 .53043 L .64193 .51385 L p F P
0 g
s
1 0 .708 r
.21423 .35956 m .22508 .39952 L .24019 .38993 L p F P
0 g
s
1 0 .708 r
.24019 .38993 m .23022 .35183 L .21423 .35956 L p F P
0 g
s
0 1 .086 r
.38676 .46876 m .36797 .45037 L .36512 .43687 L p F P
0 g
s
0 1 .018 r
.36797 .45037 m .38676 .46876 L .38616 .48352 L p F P
0 g
s
0 .783 1 r
.70775 .55536 m .67531 .57517 L .66455 .56188 L p F P
0 g
s
0 .42 1 r
.67531 .57517 m .70775 .55536 L .72193 .56472 L p F P
0 g
s
0 .046 1 r
.29151 .37771 m .28425 .34641 L .26602 .34513 L p F P
0 g
s
0 .419 1 r
.28425 .34641 m .29151 .37771 L .30809 .37976 L p F P
0 g
s
.839 0 1 r
.79989 .34392 m .7919 .38004 L .8086 .38688 L p F P
0 g
s
.383 0 1 r
.7919 .38004 m .79989 .34392 L .78157 .34229 L p F P
0 g
s
.383 0 1 r
.78157 .34229 m .77443 .37608 L .7919 .38004 L p F P
0 g
s
0 .041 1 r
.77443 .37608 m .78157 .34229 L .76331 .34378 L p F P
0 g
s
0 .041 1 r
.76331 .34378 m .75697 .37519 L .77443 .37608 L p F P
0 g
s
0 1 .312 r
.40246 .53164 m .37584 .51535 L .38247 .49931 L p F P
0 g
s
0 1 .617 r
.37584 .51535 m .40246 .53164 L .39494 .54799 L p F P
0 g
s
0 1 .016 r
.6625 .46735 m .68075 .44875 L .68144 .46359 L p F P
0 g
s
0 1 .016 r
.68144 .46359 m .6631 .48211 L .6625 .46735 L p F P
0 g
s
1 0 .417 r
.2005 .3698 m .21213 .41127 L .22508 .39952 L p F P
0 g
s
1 0 .417 r
.22508 .39952 m .21423 .35956 L .2005 .3698 L p F P
0 g
s
0 1 .962 r
.36658 .53085 m .39494 .54799 L .38568 .56324 L p F P
0 g
s
0 1 .962 r
.38568 .56324 m .35515 .54502 L .36658 .53085 L p F P
0 g
s
1 0 .781 r
.81745 .34861 m .8086 .38688 L .8238 .39632 L p F P
0 g
s
.839 0 1 r
.8086 .38688 m .81745 .34861 L .79989 .34392 L p F P
0 g
s
1 0 .214 r
.2043 .49443 m .23022 .53175 L .22308 .52085 L p F P
0 g
s
1 0 .214 r
.22308 .52085 m .19636 .48235 L .2043 .49443 L p F P
0 g
s
0 1 .52 r
.64742 .53043 m .67356 .51386 L .68294 .52928 L p F P
0 g
s
0 1 .52 r
.68294 .52928 m .65509 .54671 L .64742 .53043 L p F P
0 g
s
0 1 .617 r
.39494 .54799 m .36658 .53085 L .37584 .51535 L p F P
0 g
s
0 .378 1 r
.75697 .37519 m .76331 .34378 L .7459 .34832 L p F P
0 g
s
0 .378 1 r
.7459 .34832 m .74029 .37742 L .75697 .37519 L p F P
0 g
s
0 1 .279 r
.6899 .42358 m .69624 .41198 L p .69525 .41396 L F P
0 g
s
0 1 .086 r
.68363 .43521 m .69525 .41396 L .69213 .42805 L p F P
0 g
s
0 1 .092 r
.69588 .40613 m .69417 .41615 L p .69525 .41396 L F P
0 g
s
0 1 .092 r
.69417 .41615 m .69213 .42805 L .69525 .41396 L p F P
0 g
s
0 1 .279 r
.69624 .41198 m .70206 .40135 L .69525 .41396 L p F P
0 g
s
.397 0 1 r
.2838 .54638 m .31393 .57301 L .30018 .57601 L p F P
0 g
s
.397 0 1 r
.30018 .57601 m .26781 .54766 L .2838 .54638 L p F P
0 g
s
0 1 .853 r
.69454 .54335 m .66455 .56188 L .65509 .54671 L p F P
0 g
s
0 .783 1 r
.66455 .56188 m .69454 .54335 L .70775 .55536 L p F P
0 g
s
0 1 .853 r
.65509 .54671 m .68294 .52928 L .69454 .54335 L p F P
0 g
s
0 .419 1 r
.30809 .37976 m .30162 .35076 L .28425 .34641 L p F P
0 g
s
0 .782 1 r
.30162 .35076 m .30809 .37976 L .32317 .38485 L p F P
0 g
s
1 0 .478 r
.83348 .35617 m .8238 .39632 L .83683 .40795 L p F P
0 g
s
1 0 .781 r
.8238 .39632 m .83348 .35617 L .81745 .34861 L p F P
0 g
s
1 0 .234 r
.85268 .479 m .82708 .51784 L .81986 .52883 L p F P
0 g
s
1 0 .09 r
.82708 .51784 m .85268 .479 L .85698 .46525 L p F P
0 g
s
.412 0 1 r
.78186 .54514 m .75032 .57384 L .73636 .57097 L p F P
0 g
s
.893 0 1 r
.75032 .57384 m .78186 .54514 L .79673 .54285 L p F P
0 g
s
1 0 .211 r
.18968 .38214 m .20194 .42467 L .21213 .41127 L p F P
0 g
s
1 0 .211 r
.21213 .41127 m .2005 .3698 L .18968 .38214 L p F P
0 g
s
0 .712 1 r
.74029 .37742 m .7459 .34832 L .73012 .35573 L p F P
0 g
s
0 .712 1 r
.73012 .35573 m .72513 .38268 L .74029 .37742 L p F P
0 g
s
0 1 .018 r
.38616 .48352 m .36728 .4652 L .36797 .45037 L p F P
0 g
s
0 1 .086 r
.36728 .4652 m .38616 .48352 L .38247 .49931 L p F P
0 g
s
0 1 .079 r
.6631 .48211 m .68144 .46359 L .68571 .47902 L p F P
0 g
s
0 1 .079 r
.68571 .47902 m .66684 .49787 L .6631 .48211 L p F P
0 g
s
1 0 .249 r
.84723 .36629 m .83683 .40795 L .84708 .42127 L p F P
0 g
s
1 0 .478 r
.83683 .40795 m .84723 .36629 L .83348 .35617 L p F P
0 g
s
0 .782 1 r
.32317 .38485 m .31738 .35799 L .30162 .35076 L p F P
0 g
s
0 1 .855 r
.31738 .35799 m .32317 .38485 L .33604 .39279 L p F P
0 g
s
0 .043 1 r
.3003 .54173 m .32814 .56663 L .31393 .57301 L p F P
0 g
s
0 .043 1 r
.31393 .57301 m .2838 .54638 L .3003 .54173 L p F P
0 g
s
1 0 .423 r
.21559 .50429 m .24037 .54012 L .23022 .53175 L p F P
0 g
s
1 0 .423 r
.23022 .53175 m .2043 .49443 L .21559 .50429 L p F P
0 g
s
0 1 .936 r
.72513 .38268 m .73012 .35573 L .71667 .36569 L p F P
0 g
s
0 1 .936 r
.71667 .36569 m .71218 .39077 L .72513 .38268 L p F P
0 g
s
0 1 .086 r
.69213 .42805 m .68075 .44875 L .68363 .43521 L p F P
0 g
s
1 0 .079 r
.18229 .39602 m .195 .43914 L .20194 .42467 L p F P
0 g
s
1 0 .079 r
.20194 .42467 m .18968 .38214 L .18229 .39602 L p F P
0 g
s
0 .045 1 r
.7657 .54402 m .73636 .57097 L .72193 .56472 L p F P
0 g
s
.412 0 1 r
.73636 .57097 m .7657 .54402 L .78186 .54514 L p F P
0 g
s
0 1 .086 r
.38247 .49931 m .36304 .48067 L .36728 .4652 L p F P
0 g
s
0 1 .278 r
.36304 .48067 m .38247 .49931 L .37584 .51535 L p F P
0 g
s
1 0 .234 r
.81986 .52883 m .84467 .49118 L .85268 .479 L p F P
0 g
s
1 0 .454 r
.84467 .49118 m .81986 .52883 L .80959 .53731 L p F P
0 g
s
1 0 .096 r
.85808 .37853 m .84708 .42127 L .85407 .4357 L p F P
0 g
s
1 0 .249 r
.84708 .42127 m .85808 .37853 L .84723 .36629 L p F P
0 g
s
0 1 .26 r
.66684 .49787 m .68571 .47902 L .6934 .4943 L p F P
0 g
s
0 1 .26 r
.6934 .4943 m .67356 .51386 L .66684 .49787 L p F P
0 g
s
0 1 .855 r
.33604 .39279 m .33081 .36779 L .31738 .35799 L p F P
0 g
s
0 1 .521 r
.33081 .36779 m .33604 .39279 L .34611 .40325 L p F P
0 g
s
0 .394 1 r
.31649 .53392 m .34212 .55714 L .32814 .56663 L p F P
0 g
s
0 .394 1 r
.32814 .56663 m .3003 .54173 L .31649 .53392 L p F P
0 g
s
0 1 .593 r
.71218 .39077 m .71667 .36569 L .70617 .37777 L p F P
0 g
s
0 1 .593 r
.70617 .37777 m .70206 .40135 L .71218 .39077 L p F P
0 g
s
0 .411 1 r
.74903 .53952 m .72193 .56472 L .70775 .55536 L p F P
0 g
s
0 .045 1 r
.72193 .56472 m .74903 .53952 L .7657 .54402 L p F P
0 g
s
0 1 .278 r
.37584 .51535 m .35541 .49601 L .36304 .48067 L p F P
0 g
s
0 1 .564 r
.35541 .49601 m .37584 .51535 L .36658 .53085 L p F P
0 g
s
0 1 .016 r
.35597 .42982 m .36797 .45037 L .36728 .4652 L p F P
0 g
s
1 0 .016 r
.17873 .41083 m .19165 .45403 L .195 .43914 L p F P
0 g
s
1 0 .016 r
.195 .43914 m .18229 .39602 L .17873 .41083 L p F P
0 g
s
1 0 .715 r
.22971 .51145 m .2531 .54552 L .24037 .54012 L p F P
0 g
s
1 0 .715 r
.24037 .54012 m .21559 .50429 L .22971 .51145 L p F P
0 g
s
0 .74 1 r
.33156 .52332 m .35515 .54502 L .34212 .55714 L p F P
0 g
s
0 .74 1 r
.34212 .55714 m .31649 .53392 L .33156 .52332 L p F P
0 g
s
0 1 .535 r
.67356 .51386 m .6934 .4943 L .70416 .50867 L p F P
0 g
s
0 1 .535 r
.70416 .50867 m .68294 .52928 L .67356 .51386 L p F P
0 g
s
0 1 .018 r
.68075 .44875 m .69213 .42805 L .69288 .44297 L p F P
0 g
s
0 1 .018 r
.69288 .44297 m .68144 .46359 L .68075 .44875 L p F P
0 g
s
0 1 .564 r
.36658 .53085 m .34475 .51047 L .35541 .49601 L p F P
0 g
s
0 1 .904 r
.34475 .51047 m .36658 .53085 L .35515 .54502 L p F P
0 g
s
0 1 .904 r
.35515 .54502 m .33156 .52332 L .34475 .51047 L p F P
0 g
s
0 .768 1 r
.73268 .53186 m .70775 .55536 L .69454 .54335 L p F P
0 g
s
0 .411 1 r
.70775 .55536 m .73268 .53186 L .74903 .53952 L p F P
0 g
s
1 0 .019 r
.86548 .39236 m .85407 .4357 L .85744 .45058 L p F P
0 g
s
1 0 .096 r
.85407 .4357 m .86548 .39236 L .85808 .37853 L p F P
0 g
s
1 0 .754 r
.8333 .50118 m .80959 .53731 L .79673 .54285 L p F P
0 g
s
1 0 .454 r
.80959 .53731 m .8333 .50118 L .84467 .49118 L p F P
0 g
s
0 1 .87 r
.68294 .52928 m .70416 .50867 L .71747 .5214 L p F P
0 g
s
0 1 .87 r
.71747 .5214 m .69454 .54335 L .68294 .52928 L p F P
0 g
s
0 .768 1 r
.69454 .54335 m .71747 .5214 L .73268 .53186 L p F P
0 g
s
0 1 .521 r
.34611 .40325 m .34129 .37974 L .33081 .36779 L p F P
0 g
s
0 1 .297 r
.70206 .40135 m .70617 .37777 L .69912 .39145 L p F P
0 g
s
0 1 .297 r
.69912 .39145 m .69525 .41396 L .70206 .40135 L p F P
0 g
s
1 0 .016 r
.1792 .42588 m .19209 .46867 L .19165 .45403 L p F P
0 g
s
1 0 .016 r
.19165 .45403 m .17873 .41083 L .1792 .42588 L p F P
0 g
s
0 1 .016 r
.36728 .4652 m .35522 .44473 L .35597 .42982 L p F P
0 g
s
0 1 .078 r
.35522 .44473 m .36728 .4652 L .36304 .48067 L p F P
0 g
s
.9 0 1 r
.246 .51552 m .26781 .54766 L .2531 .54552 L p F P
0 g
s
.9 0 1 r
.2531 .54552 m .22971 .51145 L .246 .51552 L p F P
0 g
s
0 1 .086 r
.68144 .46359 m .69288 .44297 L .69752 .45803 L p F P
0 g
s
0 1 .086 r
.69752 .45803 m .68571 .47902 L .68144 .46359 L p F P
0 g
s
1 0 .019 r
.85744 .45058 m .86905 .40716 L .86548 .39236 L p F P
0 g
s
1 0 .019 r
.86905 .40716 m .85744 .45058 L .85698 .46525 L p F P
0 g
s
.864 0 1 r
.81908 .5085 m .79673 .54285 L .78186 .54514 L p F P
0 g
s
1 0 .754 r
.79673 .54285 m .81908 .5085 L .8333 .50118 L p F P
0 g
s
0 .045 1 r
.26991 .31055 m .26602 .34513 L .28425 .34641 L p F P
0 g
s
0 .045 1 r
.28425 .34641 m .28817 .31435 L .26991 .31055 L p F P
0 g
s
0 .407 1 r
.28817 .31435 m .28425 .34641 L .30162 .35076 L p F P
0 g
s
.409 0 1 r
.25155 .30992 m .24774 .34696 L .26602 .34513 L p F P
0 g
s
.409 0 1 r
.26602 .34513 m .26991 .31055 L .25155 .30992 L p F P
0 g
s
0 .407 1 r
.30162 .35076 m .30553 .32113 L .28817 .31435 L p F P
0 g
s
0 .761 1 r
.30553 .32113 m .30162 .35076 L .31738 .35799 L p F P
0 g
s
.887 0 1 r
.2339 .3125 m .23022 .35183 L .24774 .34696 L p F P
0 g
s
.887 0 1 r
.24774 .34696 m .25155 .30992 L .2339 .3125 L p F P
0 g
s
0 1 .02 r
.69231 .39906 m .69446 .41 L p .69588 .40613 L F P
0 g
s
0 1 .092 r
.69525 .41396 m .69723 .40243 L p .69588 .40613 L F P
0 g
s
0 1 .019 r
.69213 .42805 m .69588 .40613 L .69666 .42114 L p F P
0 g
s
0 1 .02 r
.69446 .41 m .69666 .42114 L .69588 .40613 L p F P
0 g
s
0 1 .092 r
.69723 .40243 m .69912 .39145 L .69588 .40613 L p F P
0 g
s
0 .041 1 r
.75841 .31172 m .76331 .34378 L .78157 .34229 L p F P
0 g
s
0 .374 1 r
.76331 .34378 m .75841 .31172 L .74109 .3187 L p F P
0 g
s
0 .374 1 r
.74109 .3187 m .7459 .34832 L .76331 .34378 L p F P
0 g
s
0 1 .078 r
.36304 .48067 m .35059 .45982 L .35522 .44473 L p F P
0 g
s
0 1 .256 r
.35059 .45982 m .36304 .48067 L .35541 .49601 L p F P
0 g
s
.379 0 1 r
.77663 .30771 m .78157 .34229 L .79989 .34392 L p F P
0 g
s
0 .041 1 r
.78157 .34229 m .77663 .30771 L .75841 .31172 L p F P
0 g
s
.416 0 1 r
.26368 .51626 m .2838 .54638 L .26781 .54766 L p F P
0 g
s
.416 0 1 r
.26781 .54766 m .246 .51552 L .26368 .51626 L p F P
0 g
s
1 0 .079 r
.18374 .44046 m .19636 .48235 L .19209 .46867 L p F P
0 g
s
1 0 .079 r
.19209 .46867 m .1792 .42588 L .18374 .44046 L p F P
0 g
s
0 .705 1 r
.7459 .34832 m .74109 .3187 L .72542 .32835 L p F P
0 g
s
0 .705 1 r
.72542 .32835 m .73012 .35573 L .7459 .34832 L p F P
0 g
s
0 1 .279 r
.68571 .47902 m .69752 .45803 L .70588 .47249 L p F P
0 g
s
0 1 .279 r
.70588 .47249 m .6934 .4943 L .68571 .47902 L p F P
0 g
s
.832 0 1 r
.79495 .30687 m .79989 .34392 L .81745 .34861 L p F P
0 g
s
.379 0 1 r
.79989 .34392 m .79495 .30687 L .77663 .30771 L p F P
0 g
s
0 .761 1 r
.31738 .35799 m .32124 .3306 L .30553 .32113 L p F P
0 g
s
0 1 .878 r
.32124 .3306 m .31738 .35799 L .33081 .36779 L p F P
0 g
s
1 0 .729 r
.21776 .3182 m .21423 .35956 L .23022 .35183 L p F P
0 g
s
1 0 .729 r
.23022 .35183 m .2339 .3125 L .21776 .3182 L p F P
0 g
s
.397 0 1 r
.80268 .51273 m .78186 .54514 L .7657 .54402 L p F P
0 g
s
.864 0 1 r
.78186 .54514 m .80268 .51273 L .81908 .5085 L p F P
0 g
s
0 1 .945 r
.73012 .35573 m .72542 .32835 L .71209 .34026 L p F P
0 g
s
0 1 .945 r
.71209 .34026 m .71667 .36569 L .73012 .35573 L p F P
0 g
s
1 0 .019 r
.85698 .46525 m .86857 .42225 L .86905 .40716 L p F P
0 g
s
1 0 .096 r
.86857 .42225 m .85698 .46525 L .85268 .479 L p F P
0 g
s
0 1 .256 r
.35541 .49601 m .34227 .47435 L .35059 .45982 L p F P
0 g
s
0 1 .528 r
.34227 .47435 m .35541 .49601 L .34475 .51047 L p F P
0 g
s
1 0 .789 r
.81257 .30925 m .81745 .34861 L .83348 .35617 L p F P
0 g
s
.832 0 1 r
.81745 .34861 m .81257 .30925 L .79495 .30687 L p F P
0 g
s
0 .046 1 r
.28186 .51364 m .3003 .54173 L .2838 .54638 L p F P
0 g
s
0 .046 1 r
.2838 .54638 m .26368 .51626 L .28186 .51364 L p F P
0 g
s
0 1 .878 r
.33081 .36779 m .3346 .34234 L .32124 .3306 L p F P
0 g
s
0 1 .542 r
.3346 .34234 m .33081 .36779 L .34129 .37974 L p F P
0 g
s
0 1 .566 r
.6934 .4943 m .70588 .47249 L .71758 .48565 L p F P
0 g
s
0 1 .566 r
.71758 .48565 m .70416 .50867 L .6934 .4943 L p F P
0 g
s
1 0 .434 r
.20387 .32681 m .2005 .3698 L .21423 .35956 L p F P
0 g
s
1 0 .434 r
.21423 .35956 m .21776 .3182 L .20387 .32681 L p F P
0 g
s
0 1 .019 r
.69666 .42114 m .69288 .44297 L .69213 .42805 L p F P
0 g
s
0 .043 1 r
.7849 .51366 m .7657 .54402 L .74903 .53952 L p F P
0 g
s
.397 0 1 r
.7657 .54402 m .7849 .51366 L .80268 .51273 L p F P
0 g
s
0 1 .601 r
.71667 .36569 m .71209 .34026 L .7017 .3539 L p F P
0 g
s
0 1 .601 r
.7017 .3539 m .70617 .37777 L .71667 .36569 L p F P
0 g
s
1 0 .211 r
.19219 .45387 m .2043 .49443 L .19636 .48235 L p F P
0 g
s
1 0 .211 r
.19636 .48235 m .18374 .44046 L .19219 .45387 L p F P
0 g
s
0 1 .528 r
.34475 .51047 m .33062 .48762 L .34227 .47435 L p F P
0 g
s
0 1 .862 r
.33062 .48762 m .34475 .51047 L .33156 .52332 L p F P
0 g
s
0 .415 1 r
.29966 .50777 m .31649 .53392 L .3003 .54173 L p F P
0 g
s
0 .415 1 r
.3003 .54173 m .28186 .51364 L .29966 .50777 L p F P
0 g
s
1 0 .484 r
.82868 .31479 m .83348 .35617 L .84723 .36629 L p F P
0 g
s
1 0 .789 r
.83348 .35617 m .82868 .31479 L .81257 .30925 L p F P
0 g
s
0 1 .906 r
.70416 .50867 m .71758 .48565 L .73209 .49685 L p F P
0 g
s
0 1 .906 r
.73209 .49685 m .71747 .5214 L .70416 .50867 L p F P
0 g
s
0 1 .862 r
.33156 .52332 m .31619 .49895 L .33062 .48762 L p F P
0 g
s
0 .775 1 r
.31619 .49895 m .33156 .52332 L .31649 .53392 L p F P
0 g
s
0 .775 1 r
.31649 .53392 m .29966 .50777 L .31619 .49895 L p F P
0 g
s
0 .393 1 r
.7666 .51122 m .74903 .53952 L .73268 .53186 L p F P
0 g
s
0 .043 1 r
.74903 .53952 m .7666 .51122 L .7849 .51366 L p F P
0 g
s
1 0 .249 r
.86401 .43691 m .85268 .479 L .84467 .49118 L p F P
0 g
s
1 0 .096 r
.85268 .479 m .86401 .43691 L .86857 .42225 L p F P
0 g
s
0 1 .542 r
.34129 .37974 m .34501 .35585 L .3346 .34234 L p F P
0 g
s
0 1 .264 r
.34501 .35585 m .34129 .37974 L .34832 .39333 L p F P
0 g
s
0 .738 1 r
.71747 .5214 m .73209 .49685 L .7487 .50552 L p F P
0 g
s
0 .738 1 r
.7487 .50552 m .73268 .53186 L .71747 .5214 L p F P
0 g
s
1 0 .222 r
.1929 .33797 m .18968 .38214 L .2005 .3698 L p F P
0 g
s
1 0 .222 r
.2005 .3698 m .20387 .32681 L .1929 .33797 L p F P
0 g
s
0 .393 1 r
.73268 .53186 m .7487 .50552 L .7666 .51122 L p F P
0 g
s
0 1 .076 r
.35077 .42296 m .35522 .44473 L .35059 .45982 L p F P
0 g
s
0 1 .302 r
.70617 .37777 m .7017 .3539 L .69474 .36868 L p F P
0 g
s
0 1 .302 r
.69474 .36868 m .69912 .39145 L .70617 .37777 L p F P
0 g
s
0 1 .092 r
.69288 .44297 m .69666 .42114 L .70146 .43577 L p F P
0 g
s
0 1 .092 r
.70146 .43577 m .69752 .45803 L .69288 .44297 L p F P
0 g
s
1 0 .417 r
.20417 .46543 m .21559 .50429 L .2043 .49443 L p F P
0 g
s
1 0 .417 r
.2043 .49443 m .19219 .45387 L .20417 .46543 L p F P
0 g
s
1 0 .253 r
.84254 .32326 m .84723 .36629 L .85808 .37853 L p F P
0 g
s
1 0 .484 r
.84723 .36629 m .84254 .32326 L .82868 .31479 L p F P
0 g
s
0 1 .264 r
.34832 .39333 m .35199 .37054 L .34501 .35585 L p F P
0 g
s
1 0 .478 r
.85553 .45043 m .84467 .49118 L .8333 .50118 L p F P
0 g
s
1 0 .249 r
.84467 .49118 m .85553 .45043 L .86401 .43691 L p F P
0 g
s
1 0 .084 r
.1854 .3512 m .18229 .39602 L .18968 .38214 L p F P
0 g
s
1 0 .084 r
.18968 .38214 m .1929 .33797 L .1854 .3512 L p F P
0 g
s
0 1 .076 r
.35059 .45982 m .34596 .43763 L .35077 .42296 L p F P
0 g
s
0 1 .252 r
.34596 .43763 m .35059 .45982 L .34227 .47435 L p F P
0 g
s
0 1 .094 r
.69912 .39145 m .69474 .36868 L .69155 .38397 L p F P
0 g
s
0 1 .094 r
.69155 .38397 m .69588 .40613 L .69912 .39145 L p F P
0 g
s
0 1 .297 r
.69752 .45803 m .70146 .43577 L .71012 .44935 L p F P
0 g
s
0 1 .297 r
.71012 .44935 m .70588 .47249 L .69752 .45803 L p F P
0 g
s
1 0 .708 r
.21914 .47456 m .22971 .51145 L .21559 .50429 L p F P
0 g
s
1 0 .708 r
.21559 .50429 m .20417 .46543 L .21914 .47456 L p F P
0 g
s
1 0 .098 r
.85349 .33432 m .85808 .37853 L .86548 .39236 L p F P
0 g
s
1 0 .253 r
.85808 .37853 m .85349 .33432 L .84254 .32326 L p F P
0 g
s
0 .389 1 r
.30366 .28307 m .28817 .31435 L .30553 .32113 L p F P
0 g
s
0 .389 1 r
.30553 .32113 m .32013 .2923 L .30366 .28307 L p F P
0 g
s
0 .731 1 r
.32013 .2923 m .30553 .32113 L .32124 .3306 L p F P
0 g
s
1 0 .781 r
.8435 .46213 m .8333 .50118 L .81908 .5085 L p F P
0 g
s
1 0 .478 r
.8333 .50118 m .8435 .46213 L .85553 .45043 L p F P
0 g
s
0 .042 1 r
.28629 .27674 m .26991 .31055 L .28817 .31435 L p F P
0 g
s
0 .042 1 r
.28817 .31435 m .30366 .28307 L .28629 .27674 L p F P
0 g
s
0 1 .252 r
.34227 .47435 m .3373 .45128 L .34596 .43763 L p F P
0 g
s
0 1 .521 r
.3373 .45128 m .34227 .47435 L .33062 .48762 L p F P
0 g
s
1 0 .017 r
.18178 .3659 m .17873 .41083 L .18229 .39602 L p F P
0 g
s
1 0 .017 r
.18229 .39602 m .1854 .3512 L .18178 .3659 L p F P
0 g
s
0 .731 1 r
.32124 .3306 m .33499 .304 L .32013 .2923 L p F P
0 g
s
0 1 .914 r
.33499 .304 m .32124 .3306 L .3346 .34234 L p F P
0 g
s
0 .386 1 r
.72559 .29 m .74109 .3187 L .75841 .31172 L p F P
0 g
s
0 .725 1 r
.74109 .3187 m .72559 .29 L .71083 .30189 L p F P
0 g
s
0 .725 1 r
.71083 .30189 m .72542 .32835 L .74109 .3187 L p F P
0 g
s
0 1 .02 r
.69588 .40613 m .69155 .38397 L .69231 .39906 L p F P
0 g
s
0 1 .593 r
.70588 .47249 m .71012 .44935 L .72227 .46118 L p F P
0 g
s
0 1 .593 r
.72227 .46118 m .71758 .48565 L .70588 .47249 L p F P
0 g
s
.906 0 1 r
.23636 .48079 m .246 .51552 L .22971 .51145 L p F P
0 g
s
.906 0 1 r
.22971 .51145 m .21914 .47456 L .23636 .48079 L p F P
0 g
s
.393 0 1 r
.26879 .2736 m .25155 .30992 L .26991 .31055 L p F P
0 g
s
.393 0 1 r
.26991 .31055 m .28629 .27674 L .26879 .2736 L p F P
0 g
s
0 .042 1 r
.74194 .28058 m .75841 .31172 L .77663 .30771 L p F P
0 g
s
0 .386 1 r
.75841 .31172 m .74194 .28058 L .72559 .29 L p F P
0 g
s
0 1 .921 r
.72542 .32835 m .71083 .30189 L .69831 .31572 L p F P
0 g
s
0 1 .921 r
.69831 .31572 m .71209 .34026 L .72542 .32835 L p F P
0 g
s
0 1 .914 r
.3346 .34234 m .34761 .31768 L .33499 .304 L p F P
0 g
s
0 1 .574 r
.34761 .31768 m .3346 .34234 L .34501 .35585 L p F P
0 g
s
1 0 .02 r
.86097 .34749 m .86548 .39236 L .86905 .40716 L p F P
0 g
s
1 0 .098 r
.86548 .39236 m .86097 .34749 L .85349 .33432 L p F P
0 g
s
.39 0 1 r
.75918 .27404 m .77663 .30771 L .79495 .30687 L p F P
0 g
s
0 .042 1 r
.77663 .30771 m .75918 .27404 L .74194 .28058 L p F P
0 g
s
0 1 .521 r
.33062 .48762 m .32516 .46323 L .3373 .45128 L p F P
0 g
s
0 1 .855 r
.32516 .46323 m .33062 .48762 L .31619 .49895 L p F P
0 g
s
.839 0 1 r
.8285 .47144 m .81908 .5085 L .80268 .51273 L p F P
0 g
s
1 0 .781 r
.81908 .5085 m .8285 .47144 L .8435 .46213 L p F P
0 g
s
0 1 .58 r
.71209 .34026 m .69831 .31572 L .68856 .3309 L p F P
0 g
s
0 1 .58 r
.68856 .3309 m .7017 .3539 L .71209 .34026 L p F P
0 g
s
.857 0 1 r
.25192 .27383 m .2339 .3125 L .25155 .30992 L p F P
0 g
s
.857 0 1 r
.25155 .30992 m .26879 .2736 L .25192 .27383 L p F P
0 g
s
.419 0 1 r
.255 .48381 m .26368 .51626 L .246 .51552 L p F P
0 g
s
.419 0 1 r
.246 .51552 m .23636 .48079 L .255 .48381 L p F P
0 g
s
0 1 .936 r
.71758 .48565 m .72227 .46118 L .73736 .47069 L p F P
0 g
s
0 1 .936 r
.73736 .47069 m .73209 .49685 L .71758 .48565 L p F P
0 g
s
0 1 .574 r
.34501 .35585 m .35742 .33273 L .34761 .31768 L p F P
0 g
s
0 1 .284 r
.35742 .33273 m .34501 .35585 L .35199 .37054 L p F P
0 g
s
1 0 .017 r
.18226 .38139 m .1792 .42588 L .17873 .41083 L p F P
0 g
s
1 0 .017 r
.17873 .41083 m .18178 .3659 L .18226 .38139 L p F P
0 g
s
0 1 .855 r
.31619 .49895 m .31009 .47288 L .32516 .46323 L p F P
0 g
s
0 .782 1 r
.31009 .47288 m .31619 .49895 L .29966 .50777 L p F P
0 g
s
.851 0 1 r
.77657 .2707 m .79495 .30687 L .81257 .30925 L p F P
0 g
s
.39 0 1 r
.79495 .30687 m .77657 .2707 L .75918 .27404 L p F P
0 g
s
0 1 .094 r
.6947 .41118 m .69231 .39906 L .69706 .41326 L p F P
0 g
s
0 1 .089 r
.6842 .39159 m .69706 .41326 L .69231 .39906 L p F P
0 g
s
0 1 .288 r
.69223 .4033 m .6993 .41524 L p .69706 .41326 L F P
0 g
s
0 1 .288 r
.6993 .41524 m .70561 .4259 L .69706 .41326 L p F P
0 g
s
0 1 .094 r
.69666 .42114 m .6947 .41118 L p .69706 .41326 L F P
0 g
s
0 1 .094 r
.69706 .41326 m .70146 .43577 L .69666 .42114 L p F P
0 g
s
.383 0 1 r
.81123 .47786 m .80268 .51273 L .7849 .51366 L p F P
0 g
s
.839 0 1 r
.80268 .51273 m .81123 .47786 L .8285 .47144 L p F P
0 g
s
0 .046 1 r
.27413 .48345 m .28186 .51364 L .26368 .51626 L p F P
0 g
s
0 .046 1 r
.26368 .51626 m .255 .48381 L .27413 .48345 L p F P
0 g
s
0 1 .288 r
.7017 .3539 m .68856 .3309 L .68203 .34677 L p F P
0 g
s
0 1 .288 r
.68203 .34677 m .69474 .36868 L .7017 .3539 L p F P
0 g
s
0 .782 1 r
.29966 .50777 m .2928 .47974 L .31009 .47288 L p F P
0 g
s
0 .419 1 r
.2928 .47974 m .29966 .50777 L .28186 .51364 L p F P
0 g
s
0 .712 1 r
.73209 .49685 m .73736 .47069 L .75467 .47739 L p F P
0 g
s
0 .712 1 r
.75467 .47739 m .7487 .50552 L .73209 .49685 L p F P
0 g
s
0 .419 1 r
.28186 .51364 m .27413 .48345 L .2928 .47974 L p F P
0 g
s
1 0 .762 r
.23645 .27745 m .21776 .3182 L .2339 .3125 L p F P
0 g
s
1 0 .762 r
.2339 .3125 m .25192 .27383 L .23645 .27745 L p F P
0 g
s
1 0 .02 r
.86905 .40716 m .86458 .36218 L .86097 .34749 L p F P
0 g
s
1 0 .02 r
.86458 .36218 m .86905 .40716 L .86857 .42225 L p F P
0 g
s
0 .041 1 r
.79254 .48107 m .7849 .51366 L .7666 .51122 L p F P
0 g
s
.383 0 1 r
.7849 .51366 m .79254 .48107 L .81123 .47786 L p F P
0 g
s
0 .378 1 r
.7487 .50552 m .75467 .47739 L .77338 .48091 L p F P
0 g
s
0 .378 1 r
.77338 .48091 m .7666 .51122 L .7487 .50552 L p F P
0 g
s
0 .041 1 r
.7666 .51122 m .77338 .48091 L .79254 .48107 L p F P
0 g
s
0 1 .284 r
.35199 .37054 m .36399 .34852 L .35742 .33273 L p F P
0 g
s
0 1 .088 r
.36399 .34852 m .35199 .37054 L .35518 .38578 L p F P
0 g
s
1 0 .768 r
.79332 .27073 m .81257 .30925 L .82868 .31479 L p F P
0 g
s
.851 0 1 r
.81257 .30925 m .79332 .27073 L .77657 .2707 L p F P
0 g
s
0 1 .264 r
.34964 .4151 m .34596 .43763 L .3373 .45128 L p F P
0 g
s
0 1 .089 r
.69474 .36868 m .68203 .34677 L .67904 .36265 L p F P
0 g
s
0 1 .089 r
.67904 .36265 m .69155 .38397 L .69474 .36868 L p F P
0 g
s
1 0 .084 r
.18687 .39693 m .18374 .44046 L .1792 .42588 L p F P
0 g
s
1 0 .084 r
.1792 .42588 m .18226 .38139 L .18687 .39693 L p F P
0 g
s
0 1 .302 r
.70146 .43577 m .69706 .41326 L .70561 .4259 L p F P
0 g
s
0 1 .302 r
.70561 .4259 m .71012 .44935 L .70146 .43577 L p F P
0 g
s
1 0 .461 r
.22312 .28437 m .20387 .32681 L .21776 .3182 L p F P
0 g
s
1 0 .461 r
.21776 .3182 m .23645 .27745 L .22312 .28437 L p F P
0 g
s
1 0 .098 r
.86409 .37771 m .86857 .42225 L .86401 .43691 L p F P
0 g
s
1 0 .02 r
.86857 .42225 m .86409 .37771 L .86458 .36218 L p F P
0 g
s
0 1 .088 r
.35518 .38578 m .367 .36435 L .36399 .34852 L p F P
0 g
s
1 0 .466 r
.80868 .27419 m .82868 .31479 L .84254 .32326 L p F P
0 g
s
1 0 .768 r
.82868 .31479 m .80868 .27419 L .79332 .27073 L p F P
0 g
s
0 1 .018 r
.69155 .38397 m .67904 .36265 L .67976 .37782 L p F P
0 g
s
0 1 .018 r
.67976 .37782 m .69231 .39906 L .69155 .38397 L p F P
0 g
s
0 1 .264 r
.3373 .45128 m .34105 .42782 L .34964 .4151 L p F P
0 g
s
0 1 .542 r
.34105 .42782 m .3373 .45128 L .32516 .46323 L p F P
0 g
s
1 0 .222 r
.19544 .41177 m .19219 .45387 L .18374 .44046 L p F P
0 g
s
1 0 .222 r
.18374 .44046 m .18687 .39693 L .19544 .41177 L p F P
0 g
s
0 1 .601 r
.71012 .44935 m .70561 .4259 L .71764 .43636 L p F P
0 g
s
0 1 .601 r
.71764 .43636 m .72227 .46118 L .71012 .44935 L p F P
0 g
s
0 .708 1 r
.34514 .26579 m .32013 .2923 L .33499 .304 L p F P
0 g
s
0 .708 1 r
.33499 .304 m .35834 .2796 L .34514 .26579 L p F P
0 g
s
0 1 .941 r
.35834 .2796 m .33499 .304 L .34761 .31768 L p F P
0 g
s
0 .376 1 r
.33047 .25425 m .30366 .28307 L .32013 .2923 L p F P
0 g
s
0 .376 1 r
.32013 .2923 m .34514 .26579 L .33047 .25425 L p F P
0 g
s
1 0 .238 r
.21257 .2943 m .1929 .33797 L .20387 .32681 L p F P
0 g
s
1 0 .238 r
.20387 .32681 m .22312 .28437 L .21257 .2943 L p F P
0 g
s
0 1 .941 r
.34761 .31768 m .36953 .29509 L .35834 .2796 L p F P
0 g
s
0 1 .597 r
.36953 .29509 m .34761 .31768 L .35742 .33273 L p F P
0 g
s
1 0 .253 r
.85948 .39333 m .86401 .43691 L .85553 .45043 L p F P
0 g
s
1 0 .098 r
.86401 .43691 m .85948 .39333 L .86409 .37771 L p F P
0 g
s
0 .772 1 r
.6867 .27773 m .71083 .30189 L .72559 .29 L p F P
0 g
s
0 1 .866 r
.71083 .30189 m .6867 .27773 L .67566 .29336 L p F P
0 g
s
0 1 .866 r
.67566 .29336 m .69831 .31572 L .71083 .30189 L p F P
0 g
s
0 .413 1 r
.69973 .26375 m .72559 .29 L .74194 .28058 L p F P
0 g
s
0 .772 1 r
.72559 .29 m .69973 .26375 L .6867 .27773 L p F P
0 g
s
0 1 .532 r
.69831 .31572 m .67566 .29336 L .66708 .30997 L p F P
0 g
s
0 1 .532 r
.66708 .30997 m .68856 .3309 L .69831 .31572 L p F P
0 g
s
0 .041 1 r
.31498 .2455 m .28629 .27674 L .30366 .28307 L p F P
0 g
s
0 .041 1 r
.30366 .28307 m .33047 .25425 L .31498 .2455 L p F P
0 g
s
1 0 .242 r
.82193 .28096 m .84254 .32326 L .85349 .33432 L p F P
0 g
s
1 0 .466 r
.84254 .32326 m .82193 .28096 L .80868 .27419 L p F P
0 g
s
0 1 .542 r
.32516 .46323 m .32898 .43839 L .34105 .42782 L p F P
0 g
s
0 1 .878 r
.32898 .43839 m .32516 .46323 L .31009 .47288 L p F P
0 g
s
0 1 .597 r
.35742 .33273 m .37822 .31159 L .36953 .29509 L p F P
0 g
s
0 1 .299 r
.37822 .31159 m .35742 .33273 L .36399 .34852 L p F P
0 g
s
1 0 .434 r
.20758 .42515 m .20417 .46543 L .19219 .45387 L p F P
0 g
s
1 0 .434 r
.19219 .45387 m .19544 .41177 L .20758 .42515 L p F P
0 g
s
0 .045 1 r
.71419 .25203 m .74194 .28058 L .75918 .27404 L p F P
0 g
s
0 .413 1 r
.74194 .28058 m .71419 .25203 L .69973 .26375 L p F P
0 g
s
0 1 .089 r
.69231 .39906 m .67976 .37782 L .6842 .39159 L p F P
0 g
s
0 1 .258 r
.68856 .3309 m .66708 .30997 L .66134 .32685 L p F P
0 g
s
0 1 .258 r
.66134 .32685 m .68203 .34677 L .68856 .3309 L p F P
0 g
s
0 1 .945 r
.72227 .46118 m .71764 .43636 L .7326 .4441 L p F P
0 g
s
0 1 .945 r
.7326 .4441 m .73736 .47069 L .72227 .46118 L p F P
0 g
s
.381 0 1 r
.29932 .23996 m .26879 .2736 L .28629 .27674 L p F P
0 g
s
.381 0 1 r
.28629 .27674 m .31498 .2455 L .29932 .23996 L p F P
0 g
s
1 0 .484 r
.85091 .40829 m .85553 .45043 L .8435 .46213 L p F P
0 g
s
1 0 .253 r
.85553 .45043 m .85091 .40829 L .85948 .39333 L p F P
0 g
s
1 0 .091 r
.20535 .30683 m .1854 .3512 L .1929 .33797 L p F P
0 g
s
1 0 .091 r
.1929 .33797 m .21257 .2943 L .20535 .30683 L p F P
0 g
s
0 1 .299 r
.36399 .34852 m .38403 .32839 L .37822 .31159 L p F P
0 g
s
0 1 .093 r
.38403 .32839 m .36399 .34852 L .367 .36435 L p F P
0 g
s
0 1 .878 r
.31009 .47288 m .31398 .44628 L .32898 .43839 L p F P
0 g
s
0 .761 1 r
.31398 .44628 m .31009 .47288 L .2928 .47974 L p F P
0 g
s
.414 0 1 r
.72949 .2431 m .75918 .27404 L .77657 .2707 L p F P
0 g
s
0 .045 1 r
.75918 .27404 m .72949 .2431 L .71419 .25203 L p F P
0 g
s
1 0 .729 r
.22271 .43641 m .21914 .47456 L .20417 .46543 L p F P
0 g
s
1 0 .729 r
.20417 .46543 m .20758 .42515 L .22271 .43641 L p F P
0 g
s
0 1 .079 r
.68203 .34677 m .66134 .32685 L .65871 .34327 L p F P
0 g
s
0 1 .079 r
.65871 .34327 m .67904 .36265 L .68203 .34677 L p F P
0 g
s
0 .705 1 r
.73736 .47069 m .7326 .4441 L .74981 .44871 L p F P
0 g
s
0 .705 1 r
.74981 .44871 m .75467 .47739 L .73736 .47069 L p F P
0 g
s
1 0 .093 r
.83241 .29079 m .85349 .33432 L .86097 .34749 L p F P
0 g
s
1 0 .242 r
.85349 .33432 m .83241 .29079 L .82193 .28096 L p F P
0 g
s
1 0 .789 r
.83878 .42182 m .8435 .46213 L .8285 .47144 L p F P
0 g
s
1 0 .484 r
.8435 .46213 m .83878 .42182 L .85091 .40829 L p F P
0 g
s
.835 0 1 r
.28419 .23793 m .25192 .27383 L .26879 .2736 L p F P
0 g
s
.835 0 1 r
.26879 .2736 m .29932 .23996 L .28419 .23793 L p F P
0 g
s
0 .761 1 r
.2928 .47974 m .29672 .45106 L .31398 .44628 L p F P
0 g
s
0 .407 1 r
.29672 .45106 m .2928 .47974 L .27413 .48345 L p F P
0 g
s
0 1 .288 r
.69206 .40484 m .6842 .39159 L .69223 .4033 L p F P
0 g
s
0 1 .258 r
.6703 .38273 m .69223 .4033 L .6842 .39159 L p F P
0 g
s
0 1 .532 r
.68024 .39053 m .69238 .40192 L p .69223 .4033 L F P
0 g
s
0 1 .532 r
.69238 .40192 m .70352 .41239 L .69223 .4033 L p F P
0 g
s
0 1 .288 r
.69706 .41326 m .69206 .40484 L p .69223 .4033 L F P
0 g
s
.887 0 1 r
.24009 .44498 m .23636 .48079 L .21914 .47456 L p F P
0 g
s
.887 0 1 r
.21914 .47456 m .22271 .43641 L .24009 .44498 L p F P
0 g
s
0 1 .093 r
.367 .36435 m .38669 .34477 L .38403 .32839 L p F P
0 g
s
0 1 .019 r
.38669 .34477 m .367 .36435 L .36627 .37951 L p F P
0 g
s
0 .374 1 r
.75467 .47739 m .74981 .44871 L .76845 .44993 L p F P
0 g
s
0 .374 1 r
.76845 .44993 m .77338 .48091 L .75467 .47739 L p F P
0 g
s
.896 0 1 r
.74494 .23737 m .77657 .2707 L .79332 .27073 L p F P
0 g
s
.414 0 1 r
.77657 .2707 m .74494 .23737 L .72949 .2431 L p F P
0 g
s
0 .407 1 r
.27413 .48345 m .27804 .45248 L .29672 .45106 L p F P
0 g
s
0 .045 1 r
.27804 .45248 m .27413 .48345 L .255 .48381 L p F P
0 g
s
.409 0 1 r
.25884 .45042 m .255 .48381 L .23636 .48079 L p F P
0 g
s
.409 0 1 r
.23636 .48079 m .24009 .44498 L .25884 .45042 L p F P
0 g
s
.832 0 1 r
.82367 .43326 m .8285 .47144 L .81123 .47786 L p F P
0 g
s
1 0 .789 r
.8285 .47144 m .82367 .43326 L .83878 .42182 L p F P
0 g
s
0 .045 1 r
.255 .48381 m .25884 .45042 L .27804 .45248 L p F P
0 g
s
1 0 .018 r
.20186 .3214 m .18178 .3659 L .1854 .3512 L p F P
0 g
s
1 0 .018 r
.1854 .3512 m .20535 .30683 L .20186 .3214 L p F P
0 g
s
0 1 .016 r
.67904 .36265 m .65871 .34327 L .65934 .35851 L p F P
0 g
s
0 1 .016 r
.65934 .35851 m .67976 .37782 L .67904 .36265 L p F P
0 g
s
0 .041 1 r
.77338 .48091 m .76845 .44993 L .7876 .44767 L p F P
0 g
s
0 .041 1 r
.7876 .44767 m .79254 .48107 L .77338 .48091 L p F P
0 g
s
.379 0 1 r
.80632 .44203 m .81123 .47786 L .79254 .48107 L p F P
0 g
s
.832 0 1 r
.81123 .47786 m .80632 .44203 L .82367 .43326 L p F P
0 g
s
.379 0 1 r
.79254 .48107 m .7876 .44767 L .80632 .44203 L p F P
0 g
s
0 1 .574 r
.35369 .40511 m .34105 .42782 L .32898 .43839 L p F P
0 g
s
1 0 .093 r
.86097 .34749 m .83957 .30327 L .83241 .29079 L p F P
0 g
s
1 0 .019 r
.83957 .30327 m .86097 .34749 L .86458 .36218 L p F P
0 g
s
1 0 .786 r
.2703 .23954 m .23645 .27745 L .25192 .27383 L p F P
0 g
s
1 0 .786 r
.25192 .27383 m .28419 .23793 L .2703 .23954 L p F P
0 g
s
0 1 .942 r
.39042 .25878 m .35834 .2796 L .36953 .29509 L p F P
0 g
s
0 1 .942 r
.36953 .29509 m .39953 .27585 L .39042 .25878 L p F P
0 g
s
0 1 .598 r
.39953 .27585 m .36953 .29509 L .37822 .31159 L p F P
0 g
s
0 .708 1 r
.37965 .24312 m .34514 .26579 L .35834 .2796 L p F P
0 g
s
0 .708 1 r
.35834 .2796 m .39042 .25878 L .37965 .24312 L p F P
0 g
s
0 1 .58 r
.70561 .4259 m .69223 .4033 L .70352 .41239 L p F P
0 g
s
0 1 .58 r
.70352 .41239 m .71764 .43636 L .70561 .4259 L p F P
0 g
s
0 1 .791 r
.64503 .27445 m .67566 .29336 L .6867 .27773 L p F P
0 g
s
0 1 .467 r
.67566 .29336 m .64503 .27445 L .63812 .29229 L p F P
0 g
s
0 1 .467 r
.63812 .29229 m .66708 .30997 L .67566 .29336 L p F P
0 g
s
0 .838 1 r
.65394 .25726 m .6867 .27773 L .69973 .26375 L p F P
0 g
s
0 1 .791 r
.6867 .27773 m .65394 .25726 L .64503 .27445 L p F P
0 g
s
0 1 .598 r
.37822 .31159 m .40659 .2936 L .39953 .27585 L p F P
0 g
s
0 1 .3 r
.40659 .2936 m .37822 .31159 L .38403 .32839 L p F P
0 g
s
0 1 .019 r
.36627 .37951 m .38604 .36001 L .38669 .34477 L p F P
0 g
s
0 .375 1 r
.36768 .22955 m .33047 .25425 L .34514 .26579 L p F P
0 g
s
0 .375 1 r
.34514 .26579 m .37965 .24312 L .36768 .22955 L p F P
0 g
s
1 0 .719 r
.75987 .23516 m .79332 .27073 L .80868 .27419 L p F P
0 g
s
.896 0 1 r
.79332 .27073 m .75987 .23516 L .74494 .23737 L p F P
0 g
s
0 1 .22 r
.66708 .30997 m .63812 .29229 L .6335 .31003 L p F P
0 g
s
0 1 .22 r
.6335 .31003 m .66134 .32685 L .66708 .30997 L p F P
0 g
s
0 1 .079 r
.67976 .37782 m .65934 .35851 L .66325 .37188 L p F P
0 g
s
0 1 .079 r
.66325 .37188 m .6842 .39159 L .67976 .37782 L p F P
0 g
s
1 0 .018 r
.20232 .33733 m .18226 .38139 L .18178 .3659 L p F P
0 g
s
1 0 .018 r
.18178 .3659 m .20186 .3214 L .20232 .33733 L p F P
0 g
s
0 .453 1 r
.66447 .24147 m .69973 .26375 L .71419 .25203 L p F P
0 g
s
0 .838 1 r
.69973 .26375 m .66447 .24147 L .65394 .25726 L p F P
0 g
s
0 1 .3 r
.38403 .32839 m .41131 .31128 L .40659 .2936 L p F P
0 g
s
0 1 .094 r
.41131 .31128 m .38403 .32839 L .38669 .34477 L p F P
0 g
s
0 1 .574 r
.32898 .43839 m .3423 .4143 L .35369 .40511 L p F P
0 g
s
0 1 .914 r
.3423 .4143 m .32898 .43839 L .31398 .44628 L p F P
0 g
s
0 .041 1 r
.35499 .21867 m .31498 .2455 L .33047 .25425 L p F P
0 g
s
0 .041 1 r
.33047 .25425 m .36768 .22955 L .35499 .21867 L p F P
0 g
s
1 0 .019 r
.86458 .36218 m .84304 .31782 L .83957 .30327 L p F P
0 g
s
1 0 .019 r
.84304 .31782 m .86458 .36218 L .86409 .37771 L p F P
0 g
s
0 1 .065 r
.66134 .32685 m .6335 .31003 L .63138 .32692 L p F P
0 g
s
0 1 .065 r
.63138 .32692 m .65871 .34327 L .66134 .32685 L p F P
0 g
s
1 0 .481 r
.25829 .24481 m .22312 .28437 L .23645 .27745 L p F P
0 g
s
1 0 .481 r
.23645 .27745 m .2703 .23954 L .25829 .24481 L p F P
0 g
s
0 1 .921 r
.71764 .43636 m .70352 .41239 L .71759 .41836 L p F P
0 g
s
0 1 .921 r
.71759 .41836 m .7326 .4441 L .71764 .43636 L p F P
0 g
s
0 .05 1 r
.67618 .22774 m .71419 .25203 L .72949 .2431 L p F P
0 g
s
0 .453 1 r
.71419 .25203 m .67618 .22774 L .66447 .24147 L p F P
0 g
s
1 0 .426 r
.77358 .23662 m .80868 .27419 L .82193 .28096 L p F P
0 g
s
1 0 .719 r
.80868 .27419 m .77358 .23662 L .75987 .23516 L p F P
0 g
s
1 0 .091 r
.20676 .35385 m .18687 .39693 L .18226 .38139 L p F P
0 g
s
1 0 .091 r
.18226 .38139 m .20232 .33733 L .20676 .35385 L p F P
0 g
s
0 1 .094 r
.38669 .34477 m .41347 .32813 L .41131 .31128 L p F P
0 g
s
0 1 .019 r
.41347 .32813 m .38669 .34477 L .38604 .36001 L p F P
0 g
s
0 1 .258 r
.6842 .39159 m .66325 .37188 L .6703 .38273 L p F P
0 g
s
.38 0 1 r
.34215 .21101 m .29932 .23996 L .31498 .2455 L p F P
0 g
s
.38 0 1 r
.31498 .2455 m .35499 .21867 L .34215 .21101 L p F P
0 g
s
0 1 .013 r
.65871 .34327 m .63138 .32692 L .63188 .34222 L p F P
0 g
s
0 1 .013 r
.63188 .34222 m .65934 .35851 L .65871 .34327 L p F P
0 g
s
0 1 .914 r
.31398 .44628 m .32812 .42042 L .3423 .4143 L p F P
0 g
s
0 .731 1 r
.32812 .42042 m .31398 .44628 L .29672 .45106 L p F P
0 g
s
1 0 .093 r
.84257 .33379 m .86409 .37771 L .85948 .39333 L p F P
0 g
s
1 0 .019 r
.86409 .37771 m .84257 .33379 L .84304 .31782 L p F P
0 g
s
.449 0 1 r
.68858 .21671 m .72949 .2431 L .74494 .23737 L p F P
0 g
s
0 .05 1 r
.72949 .2431 m .68858 .21671 L .67618 .22774 L p F P
0 g
s
0 .725 1 r
.7326 .4441 m .71759 .41836 L .73382 .42089 L p F P
0 g
s
0 .725 1 r
.73382 .42089 m .74981 .44871 L .7326 .4441 L p F P
0 g
s
0 1 .91 r
.42976 .24278 m .39042 .25878 L .39953 .27585 L p F P
0 g
s
0 1 .91 r
.39953 .27585 m .43623 .26108 L .42976 .24278 L p F P
0 g
s
0 1 .57 r
.43623 .26108 m .39953 .27585 L .40659 .2936 L p F P
0 g
s
1 0 .251 r
.24878 .25353 m .21257 .2943 L .22312 .28437 L p F P
0 g
s
1 0 .251 r
.22312 .28437 m .25829 .24481 L .24878 .25353 L p F P
0 g
s
0 1 .57 r
.40659 .2936 m .44124 .27981 L .43623 .26108 L p F P
0 g
s
0 1 .282 r
.44124 .27981 m .40659 .2936 L .41131 .31128 L p F P
0 g
s
0 1 .72 r
.60784 .2601 m .64503 .27445 L .65394 .25726 L p F P
0 g
s
0 1 .409 r
.64503 .27445 m .60784 .2601 L .60302 .27889 L p F P
0 g
s
0 1 .409 r
.60302 .27889 m .63812 .29229 L .64503 .27445 L p F P
0 g
s
1 0 .238 r
.21502 .37015 m .19544 .41177 L .18687 .39693 L p F P
0 g
s
1 0 .238 r
.18687 .39693 m .20676 .35385 L .21502 .37015 L p F P
0 g
s
0 .734 1 r
.4221 .22568 m .37965 .24312 L .39042 .25878 L p F P
0 g
s
0 .734 1 r
.39042 .25878 m .42976 .24278 L .4221 .22568 L p F P
0 g
s
0 1 .186 r
.63812 .29229 m .60302 .27889 L .59979 .2973 L p F P
0 g
s
0 1 .186 r
.59979 .2973 m .6335 .31003 L .63812 .29229 L p F P
0 g
s
0 .902 1 r
.61407 .24171 m .65394 .25726 L .66447 .24147 L p F P
0 g
s
0 1 .72 r
.65394 .25726 m .61407 .24171 L .60784 .2601 L p F P
0 g
s
0 .731 1 r
.29672 .45106 m .31177 .42312 L .32812 .42042 L p F P
0 g
s
0 .389 1 r
.31177 .42312 m .29672 .45106 L .27804 .45248 L p F P
0 g
s
0 1 .019 r
.38604 .36001 m .41295 .34342 L .41347 .32813 L p F P
0 g
s
0 1 .094 r
.41295 .34342 m .38604 .36001 L .38207 .3734 L p F P
0 g
s
1 0 .216 r
.78543 .24175 m .82193 .28096 L .83241 .29079 L p F P
0 g
s
1 0 .426 r
.82193 .28096 m .78543 .24175 L .77358 .23662 L p F P
0 g
s
1 0 .242 r
.83814 .35039 m .85948 .39333 L .85091 .40829 L p F P
0 g
s
1 0 .093 r
.85948 .39333 m .83814 .35039 L .84257 .33379 L p F P
0 g
s
.834 0 1 r
.32972 .20696 m .28419 .23793 L .29932 .23996 L p F P
0 g
s
.834 0 1 r
.29932 .23996 m .34215 .21101 L .32972 .20696 L p F P
0 g
s
0 1 .282 r
.41131 .31128 m .44458 .29817 L .44124 .27981 L p F P
0 g
s
0 1 .087 r
.44458 .29817 m .41131 .31128 L .41347 .32813 L p F P
0 g
s
0 1 .065 r
.65934 .35851 m .63188 .34222 L .63503 .35523 L p F P
0 g
s
0 1 .065 r
.63503 .35523 m .66325 .37188 L .65934 .35851 L p F P
0 g
s
0 1 .532 r
.68606 .39752 m .6703 .38273 L .68024 .39053 L p F P
0 g
s
0 1 .22 r
.64071 .36534 m .6703 .38273 L .66325 .37188 L p F P
0 g
s
0 1 .467 r
.6703 .38273 m .66197 .37783 L p .64872 .37202 L F P
0 g
s
0 1 .467 r
.66197 .37783 m .64071 .36534 L .64872 .37202 L p F P
0 g
s
0 1 .409 r
.61042 .35798 m .64872 .37202 L .64071 .36534 L p F P
0 g
s
0 1 .72 r
.61742 .35975 m .63767 .36718 L p .64872 .37202 L F P
0 g
s
0 1 .72 r
.63767 .36718 m .65874 .37491 L .64872 .37202 L p F P
0 g
s
0 1 .467 r
.64872 .37202 m .68024 .39053 L .6703 .38273 L p F P
0 g
s
0 1 .791 r
.65874 .37491 m .67538 .38469 L p .68024 .39053 L F P
0 g
s
0 1 .791 r
.67538 .38469 m .69266 .39485 L .68024 .39053 L p F P
0 g
s
0 1 .532 r
.69223 .4033 m .68606 .39752 L p .68024 .39053 L F P
0 g
s
0 .391 1 r
.41357 .21052 m .36768 .22955 L .37965 .24312 L p F P
0 g
s
0 .391 1 r
.37965 .24312 m .4221 .22568 L .41357 .21052 L p F P
0 g
s
0 .386 1 r
.74981 .44871 m .73382 .42089 L .75143 .4198 L p F P
0 g
s
0 .386 1 r
.75143 .4198 m .76845 .44993 L .74981 .44871 L p F P
0 g
s
0 1 .054 r
.6335 .31003 m .59979 .2973 L .59831 .31454 L p F P
0 g
s
0 1 .054 r
.59831 .31454 m .63138 .32692 L .6335 .31003 L p F P
0 g
s
1 0 .461 r
.22669 .38541 m .20758 .42515 L .19544 .41177 L p F P
0 g
s
1 0 .461 r
.19544 .41177 m .21502 .37015 L .22669 .38541 L p F P
0 g
s
0 .493 1 r
.62144 .22451 m .66447 .24147 L .67618 .22774 L p F P
0 g
s
0 .902 1 r
.66447 .24147 m .62144 .22451 L .61407 .24171 L p F P
0 g
s
.959 0 1 r
.70114 .20889 m .74494 .23737 L .75987 .23516 L p F P
0 g
s
.449 0 1 r
.74494 .23737 m .70114 .20889 L .68858 .21671 L p F P
0 g
s
0 .389 1 r
.27804 .45248 m .29402 .42222 L .31177 .42312 L p F P
0 g
s
0 .042 1 r
.29402 .42222 m .27804 .45248 L .25884 .45042 L p F P
0 g
s
1 0 .466 r
.82993 .36681 m .85091 .40829 L .83878 .42182 L p F P
0 g
s
1 0 .242 r
.85091 .40829 m .82993 .36681 L .83814 .35039 L p F P
0 g
s
1 0 .097 r
.24226 .26537 m .20535 .30683 L .21257 .2943 L p F P
0 g
s
1 0 .097 r
.21257 .2943 m .24878 .25353 L .24226 .26537 L p F P
0 g
s
1 0 .762 r
.2412 .39885 m .22271 .43641 L .20758 .42515 L p F P
0 g
s
1 0 .762 r
.20758 .42515 m .22669 .38541 L .2412 .39885 L p F P
0 g
s
0 1 .087 r
.41347 .32813 m .44611 .31539 L .44458 .29817 L p F P
0 g
s
0 1 .018 r
.44611 .31539 m .41347 .32813 L .41295 .34342 L p F P
0 g
s
0 .042 1 r
.76845 .44993 m .75143 .4198 L .76958 .4151 L p F P
0 g
s
0 .042 1 r
.76958 .4151 m .7876 .44767 L .76845 .44993 L p F P
0 g
s
0 .043 1 r
.40452 .19797 m .35499 .21867 L .36768 .22955 L p F P
0 g
s
0 .043 1 r
.36768 .22955 m .41357 .21052 L .40452 .19797 L p F P
0 g
s
0 .042 1 r
.25884 .45042 m .27574 .41771 L .29402 .42222 L p F P
0 g
s
.393 0 1 r
.27574 .41771 m .25884 .45042 L .24009 .44498 L p F P
0 g
s
0 1 .011 r
.63138 .32692 m .59831 .31454 L .59866 .32988 L p F P
0 g
s
0 1 .011 r
.59866 .32988 m .63188 .34222 L .63138 .32692 L p F P
0 g
s
.857 0 1 r
.25783 .4098 m .24009 .44498 L .22271 .43641 L p F P
0 g
s
.857 0 1 r
.22271 .43641 m .2412 .39885 L .25783 .4098 L p F P
0 g
s
0 1 .094 r
.38207 .3734 m .40972 .35646 L .41295 .34342 L p F P
0 g
s
0 1 .3 r
.40972 .35646 m .38207 .3734 L .37491 .38432 L p F P
0 g
s
0 1 .941 r
.36483 .39222 m .3423 .4143 L .32812 .42042 L p F P
0 g
s
0 1 .849 r
.47433 .23263 m .42976 .24278 L .43623 .26108 L p F P
0 g
s
0 1 .849 r
.43623 .26108 m .47774 .25172 L .47433 .23263 L p F P
0 g
s
0 1 .516 r
.47774 .25172 m .43623 .26108 L .44124 .27981 L p F P
0 g
s
0 .055 1 r
.62965 .20924 m .67618 .22774 L .68858 .21671 L p F P
0 g
s
0 .493 1 r
.67618 .22774 m .62965 .20924 L .62144 .22451 L p F P
0 g
s
.393 0 1 r
.24009 .44498 m .25783 .4098 L .27574 .41771 L p F P
0 g
s
1 0 .216 r
.83241 .29079 m .79482 .25038 L .78543 .24175 L p F P
0 g
s
1 0 .082 r
.79482 .25038 m .83241 .29079 L .83957 .30327 L p F P
0 g
s
0 1 .516 r
.44124 .27981 m .48039 .27107 L .47774 .25172 L p F P
0 g
s
0 1 .249 r
.48039 .27107 m .44124 .27981 L .44458 .29817 L p F P
0 g
s
1 0 .768 r
.81833 .38222 m .83878 .42182 L .82367 .43326 L p F P
0 g
s
1 0 .466 r
.83878 .42182 m .81833 .38222 L .82993 .36681 L p F P
0 g
s
0 1 .685 r
.56602 .25121 m .60784 .2601 L .61407 .24171 L p F P
0 g
s
0 1 .381 r
.60784 .2601 m .56602 .25121 L .56358 .27059 L p F P
0 g
s
0 1 .381 r
.56358 .27059 m .60302 .27889 L .60784 .2601 L p F P
0 g
s
1 0 .787 r
.31827 .20678 m .2703 .23954 L .28419 .23793 L p F P
0 g
s
1 0 .787 r
.28419 .23793 m .32972 .20696 L .31827 .20678 L p F P
0 g
s
.39 0 1 r
.7876 .44767 m .76958 .4151 L .78737 .40699 L p F P
0 g
s
.39 0 1 r
.78737 .40699 m .80632 .44203 L .7876 .44767 L p F P
0 g
s
0 1 .17 r
.60302 .27889 m .56358 .27059 L .56195 .28942 L p F P
0 g
s
0 1 .17 r
.56195 .28942 m .59979 .2973 L .60302 .27889 L p F P
0 g
s
0 1 .22 r
.66325 .37188 m .63503 .35523 L .64071 .36534 L p F P
0 g
s
0 1 .866 r
.70352 .41239 m .68024 .39053 L .69266 .39485 L p F P
0 g
s
0 1 .866 r
.69266 .39485 m .71759 .41836 L .70352 .41239 L p F P
0 g
s
0 .787 1 r
.47028 .2146 m .4221 .22568 L .42976 .24278 L p F P
0 g
s
0 .787 1 r
.42976 .24278 m .47433 .23263 L .47028 .2146 L p F P
0 g
s
.851 0 1 r
.8039 .39584 m .82367 .43326 L .80632 .44203 L p F P
0 g
s
1 0 .768 r
.82367 .43326 m .8039 .39584 L .81833 .38222 L p F P
0 g
s
.851 0 1 r
.80632 .44203 m .78737 .40699 L .8039 .39584 L p F P
0 g
s
0 .933 1 r
.56916 .23208 m .61407 .24171 L .62144 .22451 L p F P
0 g
s
0 1 .685 r
.61407 .24171 m .56916 .23208 L .56602 .25121 L p F P
0 g
s
0 1 .249 r
.44458 .29817 m .48215 .28987 L .48039 .27107 L p F P
0 g
s
0 1 .075 r
.48215 .28987 m .44458 .29817 L .44611 .31539 L p F P
0 g
s
1 0 .653 r
.7133 .2047 m .75987 .23516 L .77358 .23662 L p F P
0 g
s
.959 0 1 r
.75987 .23516 m .7133 .2047 L .70114 .20889 L p F P
0 g
s
0 1 .049 r
.59979 .2973 m .56195 .28942 L .5612 .30689 L p F P
0 g
s
0 1 .049 r
.5612 .30689 m .59831 .31454 L .59979 .2973 L p F P
0 g
s
0 1 .018 r
.41295 .34342 m .44574 .33073 L .44611 .31539 L p F P
0 g
s
0 1 .087 r
.44574 .33073 m .41295 .34342 L .40972 .35646 L p F P
0 g
s
1 0 .019 r
.2391 .2798 m .20186 .3214 L .20535 .30683 L p F P
0 g
s
1 0 .019 r
.20535 .30683 m .24226 .26537 L .2391 .2798 L p F P
0 g
s
.394 0 1 r
.39535 .18862 m .34215 .21101 L .35499 .21867 L p F P
0 g
s
.394 0 1 r
.35499 .21867 m .40452 .19797 L .39535 .18862 L p F P
0 g
s
0 1 .054 r
.63188 .34222 m .59866 .32988 L .60085 .34262 L p F P
0 g
s
0 1 .054 r
.60085 .34262 m .63503 .35523 L .63188 .34222 L p F P
0 g
s
0 .423 1 r
.46577 .1984 m .41357 .21052 L .4221 .22568 L p F P
0 g
s
0 .423 1 r
.4221 .22568 m .47028 .2146 L .46577 .1984 L p F P
0 g
s
0 1 .451 r
.52183 .24836 m .47774 .25172 L .48039 .27107 L p F P
0 g
s
0 1 .451 r
.48039 .27107 m .52193 .26793 L .52183 .24836 L p F P
0 g
s
0 1 .21 r
.52193 .26793 m .48039 .27107 L .48215 .28987 L p F P
0 g
s
0 1 .771 r
.52169 .22898 m .47433 .23263 L .47774 .25172 L p F P
0 g
s
0 1 .771 r
.47774 .25172 m .52183 .24836 L .52169 .22898 L p F P
0 g
s
0 .512 1 r
.57289 .21399 m .62144 .22451 L .62965 .20924 L p F P
0 g
s
0 .933 1 r
.62144 .22451 m .57289 .21399 L .56916 .23208 L p F P
0 g
s
.482 0 1 r
.63836 .19658 m .68858 .21671 L .70114 .20889 L p F P
0 g
s
0 .055 1 r
.68858 .21671 m .63836 .19658 L .62965 .20924 L p F P
0 g
s
0 1 .398 r
.52193 .26793 m .56358 .27059 L .56602 .25121 L p F P
0 g
s
0 1 .18 r
.56358 .27059 m .52193 .26793 L .522 .28689 L p F P
0 g
s
0 1 .18 r
.522 .28689 m .56195 .28942 L .56358 .27059 L p F P
0 g
s
0 1 .706 r
.52183 .24836 m .56602 .25121 L .56916 .23208 L p F P
0 g
s
0 1 .398 r
.56602 .25121 m .52183 .24836 L .52193 .26793 L p F P
0 g
s
0 1 .941 r
.32812 .42042 m .35224 .39667 L .36483 .39222 L p F P
0 g
s
0 .708 1 r
.35224 .39667 m .32812 .42042 L .31177 .42312 L p F P
0 g
s
0 1 .075 r
.44611 .31539 m .48295 .30733 L .48215 .28987 L p F P
0 g
s
0 1 .015 r
.48295 .30733 m .44611 .31539 L .44574 .33073 L p F P
0 g
s
1 0 .016 r
.80125 .26216 m .83957 .30327 L .84304 .31782 L p F P
0 g
s
1 0 .082 r
.83957 .30327 m .80125 .26216 L .79482 .25038 L p F P
0 g
s
0 1 .01 r
.59831 .31454 m .5612 .30689 L .56138 .32225 L p F P
0 g
s
0 1 .01 r
.56138 .32225 m .59866 .32988 L .59831 .31454 L p F P
0 g
s
0 1 .21 r
.48215 .28987 m .522 .28689 L .52193 .26793 L p F P
0 g
s
0 1 .062 r
.522 .28689 m .48215 .28987 L .48295 .30733 L p F P
0 g
s
0 .772 1 r
.71759 .41836 m .69266 .39485 L .707 .39542 L p F P
0 g
s
0 .772 1 r
.707 .39542 m .73382 .42089 L .71759 .41836 L p F P
0 g
s
0 1 .706 r
.56916 .23208 m .52169 .22898 L .52183 .24836 L p F P
0 g
s
0 .855 1 r
.52152 .21061 m .47028 .2146 L .47433 .23263 L p F P
0 g
s
0 .855 1 r
.47433 .23263 m .52169 .22898 L .52152 .21061 L p F P
0 g
s
0 1 .052 r
.56195 .28942 m .522 .28689 L .52203 .30443 L p F P
0 g
s
0 1 .052 r
.52203 .30443 m .5612 .30689 L .56195 .28942 L p F P
0 g
s
1 0 .482 r
.30837 .21056 m .25829 .24481 L .2703 .23954 L p F P
0 g
s
1 0 .482 r
.2703 .23954 m .31827 .20678 L .30837 .21056 L p F P
0 g
s
0 .914 1 r
.52169 .22898 m .56916 .23208 L .57289 .21399 L p F P
0 g
s
0 1 .062 r
.48295 .30733 m .52203 .30443 L .522 .28689 L p F P
0 g
s
1 0 .373 r
.72449 .20438 m .77358 .23662 L .78543 .24175 L p F P
0 g
s
1 0 .653 r
.77358 .23662 m .72449 .20438 L .7133 .2047 L p F P
0 g
s
0 .914 1 r
.57289 .21399 m .52152 .21061 L .52169 .22898 L p F P
0 g
s
1 0 .019 r
.23952 .29614 m .20232 .33733 L .20186 .3214 L p F P
0 g
s
1 0 .019 r
.20186 .3214 m .2391 .2798 L .23952 .29614 L p F P
0 g
s
0 .046 1 r
.46097 .18477 m .40452 .19797 L .41357 .21052 L p F P
0 g
s
0 .046 1 r
.41357 .21052 m .46577 .1984 L .46097 .18477 L p F P
0 g
s
0 1 .087 r
.40972 .35646 m .44345 .34349 L .44574 .33073 L p F P
0 g
s
0 .058 1 r
.57705 .19774 m .62965 .20924 L .63836 .19658 L p F P
0 g
s
0 .512 1 r
.62965 .20924 m .57705 .19774 L .57289 .21399 L p F P
0 g
s
0 1 .012 r
.52203 .30443 m .48295 .30733 L .48275 .32269 L p F P
0 g
s
0 1 .015 r
.44574 .33073 m .48275 .32269 L .48295 .30733 L p F P
0 g
s
.86 0 1 r
.38645 .18298 m .32972 .20696 L .34215 .21101 L p F P
0 g
s
.86 0 1 r
.34215 .21101 m .39535 .18862 L .38645 .18298 L p F P
0 g
s
0 1 .186 r
.63503 .35523 m .60085 .34262 L .60482 .35215 L p F P
0 g
s
0 1 .186 r
.60482 .35215 m .64071 .36534 L .63503 .35523 L p F P
0 g
s
0 .464 1 r
.52134 .19405 m .46577 .1984 L .47028 .2146 L p F P
0 g
s
0 .464 1 r
.47028 .2146 m .52152 .21061 L .52134 .19405 L p F P
0 g
s
0 1 .01 r
.5612 .30689 m .52203 .30443 L .52202 .3198 L p F P
0 g
s
0 1 .01 r
.52202 .3198 m .56138 .32225 L .5612 .30689 L p F P
0 g
s
0 .708 1 r
.31177 .42312 m .33769 .3974 L .35224 .39667 L p F P
0 g
s
0 .376 1 r
.33769 .3974 m .31177 .42312 L .29402 .42222 L p F P
0 g
s
0 1 .075 r
.48275 .32269 m .44574 .33073 L .44345 .34349 L p F P
0 g
s
0 .5 1 r
.52152 .21061 m .57289 .21399 L .57705 .19774 L p F P
0 g
s
1 0 .016 r
.84304 .31782 m .80436 .27657 L .80125 .26216 L p F P
0 g
s
1 0 .016 r
.80436 .27657 m .84304 .31782 L .84257 .33379 L p F P
0 g
s
0 1 .049 r
.59866 .32988 m .56138 .32225 L .56248 .33482 L p F P
0 g
s
0 1 .049 r
.56248 .33482 m .60085 .34262 L .59866 .32988 L p F P
0 g
s
1 0 .983 r
.64718 .18712 m .70114 .20889 L .7133 .2047 L p F P
0 g
s
.482 0 1 r
.70114 .20889 m .64718 .18712 L .63836 .19658 L p F P
0 g
s
0 1 .012 r
.48275 .32269 m .52202 .3198 L .52203 .30443 L p F P
0 g
s
0 .413 1 r
.73382 .42089 m .707 .39542 L .7226 .39215 L p F P
0 g
s
0 .413 1 r
.7226 .39215 m .75143 .4198 L .73382 .42089 L p F P
0 g
s
0 .5 1 r
.57705 .19774 m .52134 .19405 L .52152 .21061 L p F P
0 g
s
1 0 .252 r
.30051 .21819 m .24878 .25353 L .25829 .24481 L p F P
0 g
s
1 0 .252 r
.25829 .24481 m .30837 .21056 L .30051 .21819 L p F P
0 g
s
1 0 .097 r
.24354 .3136 m .20676 .35385 L .20232 .33733 L p F P
0 g
s
1 0 .097 r
.20232 .33733 m .23952 .29614 L .24354 .3136 L p F P
0 g
s
0 1 .791 r
.68024 .39053 m .64872 .37202 L .65874 .37491 L p F P
0 g
s
.422 0 1 r
.45611 .17434 m .39535 .18862 L .40452 .19797 L p F P
0 g
s
.422 0 1 r
.40452 .19797 m .46097 .18477 L .45611 .17434 L p F P
0 g
s
0 .376 1 r
.29402 .42222 m .32188 .39429 L .33769 .3974 L p F P
0 g
s
0 .041 1 r
.32188 .39429 m .29402 .42222 L .27574 .41771 L p F P
0 g
s
0 1 .062 r
.52202 .3198 m .48275 .32269 L .48155 .33527 L p F P
0 g
s
0 1 .075 r
.44345 .34349 m .48155 .33527 L .48275 .32269 L p F P
0 g
s
1 0 .373 r
.78543 .24175 m .73418 .20804 L .72449 .20438 L p F P
0 g
s
1 0 .184 r
.73418 .20804 m .78543 .24175 L .79482 .25038 L p F P
0 g
s
0 1 .052 r
.56138 .32225 m .52202 .3198 L .52196 .33231 L p F P
0 g
s
0 1 .052 r
.52196 .33231 m .56248 .33482 L .56138 .32225 L p F P
0 g
s
0 .052 1 r
.52114 .18002 m .46097 .18477 L .46577 .1984 L p F P
0 g
s
0 .052 1 r
.46577 .1984 m .52134 .19405 L .52114 .18002 L p F P
0 g
s
1 0 .082 r
.80394 .29295 m .84257 .33379 L .83814 .35039 L p F P
0 g
s
1 0 .016 r
.84257 .33379 m .80394 .29295 L .80436 .27657 L p F P
0 g
s
.498 0 1 r
.58146 .18405 m .63836 .19658 L .64718 .18712 L p F P
0 g
s
0 .058 1 r
.63836 .19658 m .58146 .18405 L .57705 .19774 L p F P
0 g
s
0 .056 1 r
.52134 .19405 m .57705 .19774 L .58146 .18405 L p F P
0 g
s
0 .045 1 r
.75143 .4198 m .7226 .39215 L .73872 .38512 L p F P
0 g
s
0 .045 1 r
.73872 .38512 m .76958 .4151 L .75143 .4198 L p F P
0 g
s
0 1 .062 r
.48155 .33527 m .52196 .33231 L .52202 .3198 L p F P
0 g
s
0 1 .249 r
.48155 .33527 m .44345 .34349 L .43932 .35306 L p F P
0 g
s
1 0 .758 r
.37825 .18136 m .31827 .20678 L .32972 .20696 L p F P
0 g
s
1 0 .758 r
.32972 .20696 m .38645 .18298 L .37825 .18136 L p F P
0 g
s
0 1 .409 r
.64071 .36534 m .60482 .35215 L .61042 .35798 L p F P
0 g
s
0 1 .17 r
.60085 .34262 m .56248 .33482 L .56448 .34399 L p F P
0 g
s
0 1 .17 r
.56448 .34399 m .60482 .35215 L .60085 .34262 L p F P
0 g
s
1 0 .251 r
.25098 .33132 m .21502 .37015 L .20676 .35385 L p F P
0 g
s
1 0 .251 r
.20676 .35385 m .24354 .3136 L .25098 .33132 L p F P
0 g
s
0 .056 1 r
.58146 .18405 m .52114 .18002 L .52134 .19405 L p F P
0 g
s
1 0 .593 r
.65574 .18137 m .7133 .2047 L .72449 .20438 L p F P
0 g
s
1 0 .983 r
.7133 .2047 m .65574 .18137 L .64718 .18712 L p F P
0 g
s
0 .041 1 r
.27574 .41771 m .30554 .38745 L .32188 .39429 L p F P
0 g
s
.381 0 1 r
.30554 .38745 m .27574 .41771 L .25783 .4098 L p F P
0 g
s
0 1 .942 r
.35224 .39667 m .38544 .37639 L .3957 .3734 L p F P
0 g
s
0 .708 1 r
.38544 .37639 m .35224 .39667 L .33769 .3974 L p F P
0 g
s
1 0 .216 r
.79996 .31049 m .83814 .35039 L .82993 .36681 L p F P
0 g
s
1 0 .082 r
.83814 .35039 m .79996 .31049 L .80394 .29295 L p F P
0 g
s
.414 0 1 r
.76958 .4151 m .73872 .38512 L .75456 .37466 L p F P
0 g
s
.414 0 1 r
.75456 .37466 m .78737 .40699 L .76958 .4151 L p F P
0 g
s
1 0 .481 r
.2615 .34838 m .22669 .38541 L .21502 .37015 L p F P
0 g
s
1 0 .481 r
.21502 .37015 m .25098 .33132 L .2615 .34838 L p F P
0 g
s
1 0 .097 r
.29512 .22939 m .24226 .26537 L .24878 .25353 L p F P
0 g
s
1 0 .097 r
.24878 .25353 m .30051 .21819 L .29512 .22939 L p F P
0 g
s
0 .838 1 r
.69266 .39485 m .65874 .37491 L .67034 .37377 L p F P
0 g
s
0 .838 1 r
.67034 .37377 m .707 .39542 L .69266 .39485 L p F P
0 g
s
.381 0 1 r
.25783 .4098 m .2895 .37717 L .30554 .38745 L p F P
0 g
s
.835 0 1 r
.2895 .37717 m .25783 .4098 L .2412 .39885 L p F P
0 g
s
0 1 .21 r
.52196 .33231 m .48155 .33527 L .47937 .34446 L p F P
0 g
s
0 1 .249 r
.43932 .35306 m .47937 .34446 L .48155 .33527 L p F P
0 g
s
1 0 .786 r
.27456 .36393 m .2412 .39885 L .22669 .38541 L p F P
0 g
s
1 0 .786 r
.22669 .38541 m .2615 .34838 L .27456 .36393 L p F P
0 g
s
0 1 .18 r
.56248 .33482 m .52196 .33231 L .52187 .34137 L p F P
0 g
s
0 1 .18 r
.52187 .34137 m .56448 .34399 L .56248 .33482 L p F P
0 g
s
.835 0 1 r
.2412 .39885 m .27456 .36393 L .2895 .37717 L p F P
0 g
s
.458 0 1 r
.52094 .16919 m .45611 .17434 L .46097 .18477 L p F P
0 g
s
.458 0 1 r
.46097 .18477 m .52114 .18002 L .52094 .16919 L p F P
0 g
s
.911 0 1 r
.45139 .16765 m .38645 .18298 L .39535 .18862 L p F P
0 g
s
.911 0 1 r
.39535 .18862 m .45611 .17434 L .45139 .16765 L p F P
0 g
s
1 0 .068 r
.74186 .2156 m .79482 .25038 L .80125 .26216 L p F P
0 g
s
1 0 .184 r
.79482 .25038 m .74186 .2156 L .73418 .20804 L p F P
0 g
s
1 0 .426 r
.7926 .32831 m .82993 .36681 L .81833 .38222 L p F P
0 g
s
1 0 .216 r
.82993 .36681 m .7926 .32831 L .79996 .31049 L p F P
0 g
s
.498 0 1 r
.64718 .18712 m .58593 .17356 L .58146 .18405 L p F P
0 g
s
.488 0 1 r
.52114 .18002 m .58146 .18405 L .58593 .17356 L p F P
0 g
s
.896 0 1 r
.78737 .40699 m .75456 .37466 L .76931 .36123 L p F P
0 g
s
.896 0 1 r
.76931 .36123 m .8039 .39584 L .78737 .40699 L p F P
0 g
s
1 0 .955 r
.58593 .17356 m .64718 .18712 L .65574 .18137 L p F P
0 g
s
0 1 .21 r
.47937 .34446 m .52187 .34137 L .52196 .33231 L p F P
0 g
s
1 0 .719 r
.78221 .34552 m .81833 .38222 L .8039 .39584 L p F P
0 g
s
1 0 .426 r
.81833 .38222 m .78221 .34552 L .7926 .32831 L p F P
0 g
s
1 0 .719 r
.8039 .39584 m .76931 .36123 L .78221 .34552 L p F P
0 g
s
.488 0 1 r
.58593 .17356 m .52094 .16919 L .52114 .18002 L p F P
0 g
s
1 0 .458 r
.37114 .18394 m .30837 .21056 L .31827 .20678 L p F P
0 g
s
1 0 .458 r
.31827 .20678 m .37825 .18136 L .37114 .18394 L p F P
0 g
s
0 1 .72 r
.64872 .37202 m .61042 .35798 L .61742 .35975 L p F P
0 g
s
0 1 .381 r
.60482 .35215 m .56448 .34399 L .5673 .34928 L p F P
0 g
s
0 1 .381 r
.5673 .34928 m .61042 .35798 L .60482 .35215 L p F P
0 g
s
1 0 .327 r
.66363 .17965 m .72449 .20438 L .73418 .20804 L p F P
0 g
s
1 0 .593 r
.72449 .20438 m .66363 .17965 L .65574 .18137 L p F P
0 g
s
0 .708 1 r
.33769 .3974 m .37357 .37538 L .38544 .37639 L p F P
0 g
s
0 .375 1 r
.37357 .37538 m .33769 .3974 L .32188 .39429 L p F P
0 g
s
1 0 .019 r
.29251 .24368 m .2391 .2798 L .24226 .26537 L p F P
0 g
s
1 0 .019 r
.24226 .26537 m .29512 .22939 L .29251 .24368 L p F P
0 g
s
0 .453 1 r
.707 .39542 m .67034 .37377 L .68299 .36859 L p F P
0 g
s
0 .453 1 r
.68299 .36859 m .7226 .39215 L .707 .39542 L p F P
0 g
s
1 0 .013 r
.74713 .22675 m .80125 .26216 L .80436 .27657 L p F P
0 g
s
1 0 .068 r
.80125 .26216 m .74713 .22675 L .74186 .2156 L p F P
0 g
s
.975 0 1 r
.52074 .16213 m .45139 .16765 L .45611 .17434 L p F P
0 g
s
.975 0 1 r
.45611 .17434 m .52094 .16919 L .52074 .16213 L p F P
0 g
s
1 0 .703 r
.44703 .1651 m .37825 .18136 L .38645 .18298 L p F P
0 g
s
1 0 .703 r
.38645 .18298 m .45139 .16765 L .44703 .1651 L p F P
0 g
s
1 0 .955 r
.65574 .18137 m .59027 .16682 L .58593 .17356 L p F P
0 g
s
1 0 .972 r
.52094 .16919 m .58593 .17356 L .59027 .16682 L p F P
0 g
s
1 0 .564 r
.59027 .16682 m .65574 .18137 L .66363 .17965 L p F P
0 g
s
0 .734 1 r
.4262 .3608 m .38544 .37639 L .37357 .37538 L p F P
0 g
s
0 .375 1 r
.32188 .39429 m .36063 .37034 L .37357 .37538 L p F P
0 g
s
0 .041 1 r
.36063 .37034 m .32188 .39429 L .30554 .38745 L p F P
0 g
s
1 0 .237 r
.3655 .1907 m .30051 .21819 L .30837 .21056 L p F P
0 g
s
1 0 .237 r
.30837 .21056 m .37114 .18394 L .3655 .1907 L p F P
0 g
s
0 .902 1 r
.65874 .37491 m .61742 .35975 L .62555 .35729 L p F P
0 g
s
0 .902 1 r
.62555 .35729 m .67034 .37377 L .65874 .37491 L p F P
0 g
s
1 0 .972 r
.59027 .16682 m .52074 .16213 L .52094 .16919 L p F P
0 g
s
1 0 .019 r
.29285 .26038 m .23952 .29614 L .2391 .2798 L p F P
0 g
s
1 0 .019 r
.2391 .2798 m .29251 .24368 L .29285 .26038 L p F P
0 g
s
0 .914 1 r
.52139 .34377 m .5437 .34514 L p .57084 .35035 L F P
0 g
s
0 1 .685 r
.60755 .3574 m .5673 .34928 L .57084 .35035 L p F P
0 g
s
0 .914 1 r
.5437 .34514 m .57495 .34706 L .57084 .35035 L p F P
0 g
s
0 1 .685 r
.61042 .35798 m .60755 .3574 L p .57084 .35035 L F P
0 g
s
0 1 .685 r
.57084 .35035 m .61742 .35975 L .61042 .35798 L p F P
0 g
s
0 .05 1 r
.7226 .39215 m .68299 .36859 L .69608 .35953 L p F P
0 g
s
0 .05 1 r
.69608 .35953 m .73872 .38512 L .7226 .39215 L p F P
0 g
s
1 0 .327 r
.73418 .20804 m .67046 .18215 L .66363 .17965 L p F P
0 g
s
1 0 .156 r
.67046 .18215 m .73418 .20804 L .74186 .2156 L p F P
0 g
s
1 0 .013 r
.80436 .27657 m .74968 .24103 L .74713 .22675 L p F P
0 g
s
1 0 .013 r
.74968 .24103 m .80436 .27657 L .80394 .29295 L p F P
0 g
s
0 .041 1 r
.30554 .38745 m .34725 .36143 L .36063 .37034 L p F P
0 g
s
.38 0 1 r
.34725 .36143 m .30554 .38745 L .2895 .37717 L p F P
0 g
s
1 0 .097 r
.29617 .27869 m .24354 .3136 L .23952 .29614 L p F P
0 g
s
1 0 .097 r
.23952 .29614 m .29285 .26038 L .29617 .27869 L p F P
0 g
s
.449 0 1 r
.73872 .38512 m .69608 .35953 L .70897 .34699 L p F P
0 g
s
.449 0 1 r
.70897 .34699 m .75456 .37466 L .73872 .38512 L p F P
0 g
s
1 0 .637 r
.52056 .15923 m .44703 .1651 L .45139 .16765 L p F P
0 g
s
1 0 .637 r
.45139 .16765 m .52074 .16213 L .52056 .15923 L p F P
0 g
s
1 0 .413 r
.44325 .1669 m .37114 .18394 L .37825 .18136 L p F P
0 g
s
1 0 .413 r
.37825 .18136 m .44703 .1651 L .44325 .1669 L p F P
0 g
s
1 0 .564 r
.66363 .17965 m .59428 .16421 L .59027 .16682 L p F P
0 g
s
1 0 .582 r
.52074 .16213 m .59027 .16682 L .59428 .16421 L p F P
0 g
s
1 0 .068 r
.74933 .25776 m .80394 .29295 L .79996 .31049 L p F P
0 g
s
1 0 .013 r
.80394 .29295 m .74933 .25776 L .74968 .24103 L p F P
0 g
s
0 .734 1 r
.37357 .37538 m .41776 .35843 L .4262 .3608 L p F P
0 g
s
0 .391 1 r
.41776 .35843 m .37357 .37538 L .36063 .37034 L p F P
0 g
s
1 0 .305 r
.59428 .16421 m .66363 .17965 L .67046 .18215 L p F P
0 g
s
1 0 .091 r
.36162 .20139 m .29512 .22939 L .30051 .21819 L p F P
0 g
s
1 0 .091 r
.30051 .21819 m .3655 .1907 L .36162 .20139 L p F P
0 g
s
0 .493 1 r
.67034 .37377 m .62555 .35729 L .63442 .35062 L p F P
0 g
s
0 .493 1 r
.63442 .35062 m .68299 .36859 L .67034 .37377 L p F P
0 g
s
.38 0 1 r
.2895 .37717 m .33407 .34905 L .34725 .36143 L p F P
0 g
s
.834 0 1 r
.33407 .34905 m .2895 .37717 L .27456 .36393 L p F P
0 g
s
1 0 .252 r
.30233 .29767 m .25098 .33132 L .24354 .3136 L p F P
0 g
s
1 0 .252 r
.24354 .3136 m .29617 .27869 L .30233 .29767 L p F P
0 g
s
1 0 .582 r
.59428 .16421 m .52056 .15923 L .52074 .16213 L p F P
0 g
s
1 0 .056 r
.67589 .18885 m .74186 .2156 L .74713 .22675 L p F P
0 g
s
1 0 .156 r
.74186 .2156 m .67589 .18885 L .67046 .18215 L p F P
0 g
s
0 .933 1 r
.61742 .35975 m .57084 .35035 L .57495 .34706 L p F P
0 g
s
0 .933 1 r
.57495 .34706 m .62555 .35729 L .61742 .35975 L p F P
0 g
s
.959 0 1 r
.75456 .37466 m .70897 .34699 L .72099 .33156 L p F P
0 g
s
.959 0 1 r
.72099 .33156 m .76931 .36123 L .75456 .37466 L p F P
0 g
s
1 0 .184 r
.74607 .27612 m .79996 .31049 L .7926 .32831 L p F P
0 g
s
1 0 .068 r
.79996 .31049 m .74607 .27612 L .74933 .25776 L p F P
0 g
s
.834 0 1 r
.27456 .36393 m .32178 .33377 L .33407 .34905 L p F P
0 g
s
1 0 .787 r
.32178 .33377 m .27456 .36393 L .2615 .34838 L p F P
0 g
s
1 0 .482 r
.31101 .31635 m .2615 .34838 L .25098 .33132 L p F P
0 g
s
1 0 .482 r
.25098 .33132 m .30233 .29767 L .31101 .31635 L p F P
0 g
s
1 0 .787 r
.2615 .34838 m .31101 .31635 L .32178 .33377 L p F P
0 g
s
1 0 .653 r
.76931 .36123 m .72099 .33156 L .73153 .314 L p F P
0 g
s
1 0 .653 r
.73153 .314 m .78221 .34552 L .76931 .36123 L p F P
0 g
s
1 0 .373 r
.74004 .29519 m .7926 .32831 L .78221 .34552 L p F P
0 g
s
1 0 .184 r
.7926 .32831 m .74004 .29519 L .74607 .27612 L p F P
0 g
s
1 0 .373 r
.78221 .34552 m .73153 .314 L .74004 .29519 L p F P
0 g
s
0 .391 1 r
.36063 .37034 m .40854 .35186 L .41776 .35843 L p F P
0 g
s
0 .043 1 r
.40854 .35186 m .36063 .37034 L .34725 .36143 L p F P
0 g
s
0 .787 1 r
.41776 .35843 m .46796 .34765 L .47243 .35089 L p F P
0 g
s
1 0 .018 r
.35974 .21555 m .29251 .24368 L .29512 .22939 L p F P
0 g
s
1 0 .018 r
.29512 .22939 m .36162 .20139 L .35974 .21555 L p F P
0 g
s
1 0 .209 r
.44025 .17308 m .3655 .1907 L .37114 .18394 L p F P
0 g
s
1 0 .209 r
.37114 .18394 m .44325 .1669 L .44025 .17308 L p F P
0 g
s
1 0 .36 r
.5204 .16075 m .44325 .1669 L .44703 .1651 L p F P
0 g
s
1 0 .36 r
.44703 .1651 m .52056 .15923 L .5204 .16075 L p F P
0 g
s
0 .055 1 r
.68299 .36859 m .63442 .35062 L .64361 .33998 L p F P
0 g
s
0 .055 1 r
.64361 .33998 m .69608 .35953 L .68299 .36859 L p F P
0 g
s
1 0 .305 r
.67046 .18215 m .59775 .16597 L .59428 .16421 L p F P
0 g
s
1 0 .318 r
.52056 .15923 m .59428 .16421 L .59775 .16597 L p F P
0 g
s
1 0 .143 r
.59775 .16597 m .67046 .18215 L .67589 .18885 L p F P
0 g
s
1 0 .011 r
.67962 .1995 m .74713 .22675 L .74968 .24103 L p F P
0 g
s
1 0 .056 r
.74713 .22675 m .67962 .1995 L .67589 .18885 L p F P
0 g
s
0 .855 1 r
.46796 .34765 m .52139 .34377 L .52158 .34733 L p F P
0 g
s
0 .423 1 r
.46796 .34765 m .41776 .35843 L .40854 .35186 L p F P
0 g
s
0 .512 1 r
.62555 .35729 m .57495 .34706 L .57944 .33945 L p F P
0 g
s
0 .512 1 r
.57944 .33945 m .63442 .35062 L .62555 .35729 L p F P
0 g
s
1 0 .318 r
.59775 .16597 m .5204 .16075 L .52056 .15923 L p F P
0 g
s
0 .043 1 r
.34725 .36143 m .39898 .34133 L .40854 .35186 L p F P
0 g
s
.394 0 1 r
.39898 .34133 m .34725 .36143 L .33407 .34905 L p F P
0 g
s
1 0 .018 r
.35999 .23254 m .29285 .26038 L .29251 .24368 L p F P
0 g
s
1 0 .018 r
.29251 .24368 m .35974 .21555 L .35999 .23254 L p F P
0 g
s
.482 0 1 r
.69608 .35953 m .64361 .33998 L .65268 .32582 L p F P
0 g
s
.482 0 1 r
.65268 .32582 m .70897 .34699 L .69608 .35953 L p F P
0 g
s
1 0 .011 r
.74968 .24103 m .68142 .21366 L .67962 .1995 L p F P
0 g
s
1 0 .011 r
.68142 .21366 m .74968 .24103 L .74933 .25776 L p F P
0 g
s
1 0 .079 r
.43818 .18343 m .36162 .20139 L .3655 .1907 L p F P
0 g
s
1 0 .079 r
.3655 .1907 m .44025 .17308 L .43818 .18343 L p F P
0 g
s
0 .464 1 r
.52139 .34377 m .46796 .34765 L .46308 .34009 L p F P
0 g
s
0 .423 1 r
.40854 .35186 m .46308 .34009 L .46796 .34765 L p F P
0 g
s
1 0 .051 r
.60051 .17212 m .67589 .18885 L .67962 .1995 L p F P
0 g
s
1 0 .143 r
.67589 .18885 m .60051 .17212 L .59775 .16597 L p F P
0 g
s
0 .5 1 r
.57495 .34706 m .52139 .34377 L .52119 .33586 L p F P
0 g
s
0 .5 1 r
.52119 .33586 m .57944 .33945 L .57495 .34706 L p F P
0 g
s
1 0 .176 r
.52027 .16672 m .44025 .17308 L .44325 .1669 L p F P
0 g
s
1 0 .176 r
.44325 .1669 m .5204 .16075 L .52027 .16672 L p F P
0 g
s
1 0 .151 r
.5204 .16075 m .59775 .16597 L .60051 .17212 L p F P
0 g
s
0 .046 1 r
.46308 .34009 m .40854 .35186 L .39898 .34133 L p F P
0 g
s
.394 0 1 r
.33407 .34905 m .38956 .32728 L .39898 .34133 L p F P
0 g
s
.86 0 1 r
.38956 .32728 m .33407 .34905 L .32178 .33377 L p F P
0 g
s
1 0 .091 r
.36237 .25151 m .29617 .27869 L .29285 .26038 L p F P
0 g
s
1 0 .091 r
.29285 .26038 m .35999 .23254 L .36237 .25151 L p F P
0 g
s
0 .058 1 r
.63442 .35062 m .57944 .33945 L .5841 .3278 L p F P
0 g
s
0 .058 1 r
.5841 .3278 m .64361 .33998 L .63442 .35062 L p F P
0 g
s
0 .464 1 r
.46308 .34009 m .52119 .33586 L .52139 .34377 L p F P
0 g
s
1 0 .983 r
.70897 .34699 m .65268 .32582 L .66115 .30881 L p F P
0 g
s
1 0 .983 r
.66115 .30881 m .72099 .33156 L .70897 .34699 L p F P
0 g
s
1 0 .056 r
.68117 .23067 m .74933 .25776 L .74607 .27612 L p F P
0 g
s
1 0 .011 r
.74933 .25776 m .68117 .23067 L .68142 .21366 L p F P
0 g
s
1 0 .151 r
.60051 .17212 m .52027 .16672 L .5204 .16075 L p F P
0 g
s
.86 0 1 r
.32178 .33377 m .38076 .31038 L .38956 .32728 L p F P
0 g
s
1 0 .758 r
.38076 .31038 m .32178 .33377 L .31101 .31635 L p F P
0 g
s
1 0 .237 r
.3668 .27149 m .30233 .29767 L .29617 .27869 L p F P
0 g
s
1 0 .237 r
.29617 .27869 m .36237 .25151 L .3668 .27149 L p F P
0 g
s
1 0 .593 r
.72099 .33156 m .66115 .30881 L .66859 .28979 L p F P
0 g
s
1 0 .593 r
.66859 .28979 m .73153 .314 L .72099 .33156 L p F P
0 g
s
1 0 .015 r
.43718 .19752 m .35974 .21555 L .36162 .20139 L p F P
0 g
s
1 0 .015 r
.36162 .20139 m .43818 .18343 L .43718 .19752 L p F P
0 g
s
1 0 .156 r
.67887 .24968 m .74607 .27612 L .74004 .29519 L p F P
0 g
s
1 0 .056 r
.74607 .27612 m .67887 .24968 L .68117 .23067 L p F P
0 g
s
1 0 .758 r
.31101 .31635 m .37303 .29146 L .38076 .31038 L p F P
0 g
s
1 0 .458 r
.37303 .29146 m .31101 .31635 L .30233 .29767 L p F P
0 g
s
1 0 .458 r
.30233 .29767 m .3668 .27149 L .37303 .29146 L p F P
0 g
s
1 0 .01 r
.60241 .18245 m .67962 .1995 L .68142 .21366 L p F P
0 g
s
1 0 .051 r
.67962 .1995 m .60241 .18245 L .60051 .17212 L p F P
0 g
s
1 0 .327 r
.73153 .314 m .66859 .28979 L .6746 .26973 L p F P
0 g
s
1 0 .327 r
.6746 .26973 m .74004 .29519 L .73153 .314 L p F P
0 g
s
1 0 .156 r
.74004 .29519 m .6746 .26973 L .67887 .24968 L p F P
0 g
s
0 .052 1 r
.52119 .33586 m .46308 .34009 L .45802 .3285 L p F P
0 g
s
0 .046 1 r
.39898 .34133 m .45802 .3285 L .46308 .34009 L p F P
0 g
s
.422 0 1 r
.45802 .3285 m .39898 .34133 L .38956 .32728 L p F P
0 g
s
0 .056 1 r
.57944 .33945 m .52119 .33586 L .52098 .32388 L p F P
0 g
s
0 .056 1 r
.52098 .32388 m .5841 .3278 L .57944 .33945 L p F P
0 g
s
1 0 .065 r
.52018 .17695 m .43818 .18343 L .44025 .17308 L p F P
0 g
s
1 0 .065 r
.44025 .17308 m .52027 .16672 L .52018 .17695 L p F P
0 g
s
.498 0 1 r
.64361 .33998 m .5841 .3278 L .5887 .31262 L p F P
0 g
s
.498 0 1 r
.5887 .31262 m .65268 .32582 L .64361 .33998 L p F P
0 g
s
1 0 .054 r
.52027 .16672 m .60051 .17212 L .60241 .18245 L p F P
0 g
s
0 .052 1 r
.45802 .3285 m .52098 .32388 L .52119 .33586 L p F P
0 g
s
1 0 .054 r
.60241 .18245 m .52018 .17695 L .52027 .16672 L p F P
0 g
s
1 0 .015 r
.43731 .21469 m .35999 .23254 L .35974 .21555 L p F P
0 g
s
1 0 .015 r
.35974 .21555 m .43718 .19752 L .43731 .21469 L p F P
0 g
s
1 0 .01 r
.68142 .21366 m .60332 .19653 L .60241 .18245 L p F P
0 g
s
1 0 .01 r
.60332 .19653 m .68142 .21366 L .68117 .23067 L p F P
0 g
s
.422 0 1 r
.38956 .32728 m .45302 .31338 L .45802 .3285 L p F P
0 g
s
.911 0 1 r
.45302 .31338 m .38956 .32728 L .38076 .31038 L p F P
0 g
s
1 0 .955 r
.65268 .32582 m .5887 .31262 L .593 .29461 L p F P
0 g
s
1 0 .955 r
.593 .29461 m .66115 .30881 L .65268 .32582 L p F P
0 g
s
.458 0 1 r
.52098 .32388 m .45802 .3285 L .45302 .31338 L p F P
0 g
s
1 0 .013 r
.52013 .191 m .43718 .19752 L .43818 .18343 L p F P
0 g
s
1 0 .013 r
.43818 .18343 m .52018 .17695 L .52013 .191 L p F P
0 g
s
.488 0 1 r
.5841 .3278 m .52098 .32388 L .52077 .30836 L p F P
0 g
s
.488 0 1 r
.52077 .30836 m .5887 .31262 L .5841 .3278 L p F P
0 g
s
1 0 .01 r
.52018 .17695 m .60241 .18245 L .60332 .19653 L p F P
0 g
s
1 0 .079 r
.43858 .23409 m .36237 .25151 L .35999 .23254 L p F P
0 g
s
1 0 .079 r
.35999 .23254 m .43731 .21469 L .43858 .23409 L p F P
0 g
s
1 0 .051 r
.60319 .21371 m .68117 .23067 L .67887 .24968 L p F P
0 g
s
1 0 .01 r
.68117 .23067 m .60319 .21371 L .60332 .19653 L p F P
0 g
s
.911 0 1 r
.38076 .31038 m .44835 .29542 L .45302 .31338 L p F P
0 g
s
1 0 .703 r
.44835 .29542 m .38076 .31038 L .37303 .29146 L p F P
0 g
s
.458 0 1 r
.45302 .31338 m .52077 .30836 L .52098 .32388 L p F P
0 g
s
1 0 .564 r
.66115 .30881 m .593 .29461 L .59679 .27466 L p F P
0 g
s
1 0 .564 r
.59679 .27466 m .66859 .28979 L .66115 .30881 L p F P
0 g
s
1 0 .01 r
.60332 .19653 m .52013 .191 L .52018 .17695 L p F P
0 g
s
1 0 .209 r
.44093 .25473 m .3668 .27149 L .36237 .25151 L p F P
0 g
s
1 0 .209 r
.36237 .25151 m .43858 .23409 L .44093 .25473 L p F P
0 g
s
1 0 .703 r
.37303 .29146 m .44424 .27553 L .44835 .29542 L p F P
0 g
s
1 0 .413 r
.44424 .27553 m .37303 .29146 L .3668 .27149 L p F P
0 g
s
1 0 .143 r
.60202 .23313 m .67887 .24968 L .6746 .26973 L p F P
0 g
s
1 0 .051 r
.67887 .24968 m .60202 .23313 L .60319 .21371 L p F P
0 g
s
1 0 .413 r
.3668 .27149 m .44093 .25473 L .44424 .27553 L p F P
0 g
s
1 0 .305 r
.66859 .28979 m .59679 .27466 L .59984 .25381 L p F P
0 g
s
1 0 .305 r
.59984 .25381 m .6746 .26973 L .66859 .28979 L p F P
0 g
s
.975 0 1 r
.52077 .30836 m .45302 .31338 L .44835 .29542 L p F P
0 g
s
1 0 .013 r
.52014 .20824 m .43731 .21469 L .43718 .19752 L p F P
0 g
s
1 0 .013 r
.43718 .19752 m .52013 .191 L .52014 .20824 L p F P
0 g
s
1 0 .143 r
.6746 .26973 m .59984 .25381 L .60202 .23313 L p F P
0 g
s
1 0 .972 r
.5887 .31262 m .52077 .30836 L .52058 .29003 L p F P
0 g
s
1 0 .972 r
.52058 .29003 m .593 .29461 L .5887 .31262 L p F P
0 g
s
1 0 .01 r
.52013 .191 m .60332 .19653 L .60319 .21371 L p F P
0 g
s
.975 0 1 r
.44835 .29542 m .52058 .29003 L .52077 .30836 L p F P
0 g
s
1 0 .01 r
.60319 .21371 m .52014 .20824 L .52013 .191 L p F P
0 g
s
1 0 .637 r
.52058 .29003 m .44835 .29542 L .44424 .27553 L p F P
0 g
s
1 0 .065 r
.52018 .22779 m .43858 .23409 L .43731 .21469 L p F P
0 g
s
1 0 .065 r
.43731 .21469 m .52014 .20824 L .52018 .22779 L p F P
0 g
s
1 0 .582 r
.593 .29461 m .52058 .29003 L .52041 .26978 L p F P
0 g
s
1 0 .582 r
.52041 .26978 m .59679 .27466 L .593 .29461 L p F P
0 g
s
1 0 .054 r
.52014 .20824 m .60319 .21371 L .60202 .23313 L p F P
0 g
s
1 0 .637 r
.44424 .27553 m .52041 .26978 L .52058 .29003 L p F P
0 g
s
1 0 .36 r
.52041 .26978 m .44424 .27553 L .44093 .25473 L p F P
0 g
s
1 0 .176 r
.52028 .24867 m .44093 .25473 L .43858 .23409 L p F P
0 g
s
1 0 .176 r
.43858 .23409 m .52018 .22779 L .52028 .24867 L p F P
0 g
s
1 0 .318 r
.59679 .27466 m .52041 .26978 L .52028 .24867 L p F P
0 g
s
1 0 .318 r
.52028 .24867 m .59984 .25381 L .59679 .27466 L p F P
0 g
s
1 0 .151 r
.52018 .22779 m .60202 .23313 L .59984 .25381 L p F P
0 g
s
1 0 .054 r
.60202 .23313 m .52018 .22779 L .52014 .20824 L p F P
0 g
s
1 0 .36 r
.44093 .25473 m .52028 .24867 L .52041 .26978 L p F P
0 g
s
1 0 .151 r
.59984 .25381 m .52028 .24867 L .52018 .22779 L p F P
0 g
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 143.125},
  ImageMargins->{{253, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {-0.307424, 1.17467}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000Sb000`400?l00000o`00003ooooooolQ
ooooo`00oooooolQooooo`00T?oooolAo`0007oooooo0025ooooo`_o00001@3o02d00ol00000o`0V
0?l09P040?l09Q7o0000Loooool007gooooo2?l0000:0?l0;@go00002`3o02H:o`0006oooooo001i
ooooo`Co00000P3o03D00ol00000o`0]0?l0;@020?l0;@_o00001P3o01000ol00000o`0=0?l03@04
0?l03@_o0000103o02H00ol00000o`0T0?l09007o`0006_ooooo001dooooo`Go00000`3o03D8o`00
0140o`0@00?o00000?l03@3o00d03`3o00d9o`000080o`0T1ol0001Wooooo`00Koooool5o`0000<0
o`0e1Ol000020?l05003o`00003o0100o`0@00h0o`0@3Ol0000@0?l03@04o`00003o00d0o`0=0?l0
3@Go00000P3o02@6o`0006?ooooo001[ooooo`Go00000`3o03D4o`0000H0o`0D00?o00000?l0403o
01000`3o010<o`0000H0o`0300?o00000?l00P3o0080103o008;o`0000D0o`0=00?o00000?l03@3o
00d01P3o00d5o`0000030?l09?l0003o000000?o0000H?ooool006Wooooo0ol000030?l0=@Co0000
203o01@8o`000180o`0300?o00000?l00P3o00803`3o0088o`0000/0o`0=2Ol0001Mooooo`00Iooo
ool8o`0000L0o`0D1Ol000020?l00`03o`00003o00<0o`0301D0o`0300?o00000?l00P3o0080503o
00800ol00000o`020?l00P05o`0000/0o`0=1_l0001Kooooo`00I?ooool6o`0000P0o`0D1?l00007
0?l00`03o`00003o00<0o`0300l0o`033Ol0000@0?l00P03o`00003o0080o`0200D0o`021?l00009
0?l03@03o`00003o00ko000000Co0000F?ooool006;ooooo0_l000001@3o03co0000o`00003o01Oo
000000D0o`0D1?l0000;0?l00`03o`00003o00<0o`0300<0o`033?l000060?l00`03o`00003o0080
o`0200@0o`023?l000050?l00P03o`00003o0080o`0200P0o`021?l000050?l03@03o`00003o00h0
o`0>0080o`0>1?l0001Fooooo`00H?ooool5o`000080o`0G00?o00000?l05?l000001?l0000=0?l0
0`So00004P3o00<00ol00000o`020?l00P0@0?l00PSo0000303o0085o`0000030?l03Ol00000o`0>
00@0o`0>1Ol0001Cooooo`00G_ooool4o`0000@0o`0G0ol0000=0?l00`Go00000P3o00<00ol00000
o`030?l00`0E0?l00`03o`00003o0080o`0201D0o`0200?o00000?l00P3o00801Ol0000<0?l00P?o
00001P3o00h5o`00057ooooo001Kooooo`Go00000`3o01L3o`0000030?l01?l00000o`0300T0o`03
1?l000070?l00`03o`00003o00<0o`0301D0o`0300?o00000?l00P3o00805@3o00800ol00000o`02
0?l00P050?l00PCo00002@3o00800ol00000o`02o`000002o`0000H0o`0>1Ol0001>ooooo`00FOoo
ool2o`0000030?l0??l0003o000000<0o`0G0_l000040?l01003o`00003o00<0o`0300@0o`031?l0
000;0?l00`03o`00003o00<0o`0300l0o`033Ol0000A0?l00P03o`00003o0080o`0200T0o`021?l0
00050?l00P03o`00003o0080o`020080o`020ol000050?l03P;o000000<0o`0Wo`000?l00000C?oo
ool005Oooooo1Ol000030?l05`;o00001P3o00@00ol00000o`03o`000004o`0000l0o`0300?o0000
0?l00`3o00<00`3o00<<o`0000H0o`0@00?o00000?l03@3o00d0103o00d<o`0000D0o`0200?o0000
0?l00P3o00803@3o0085o`0000030?l00_l00000o`0200D0o`020ol000040?l03PCo0000Boooool0
05Kooooo0ol000030?l05`?o00001`3o00@3o`000180o`032?l0000B0?l04003o`00003o00d0o`0=
0100o`0=2Ol0000A0?l00P?o0000203o0083o`0000@0o`0>0ol00019ooooo`00E?ooool3o`0000<0
o`0G0_l000070?l010?o000000<0o`04o`00003o00<03@3o00<5o`000080o`0D00?o00000?l0403o
01005@3o01000ol00000o`0=0?l03@0E0?l03@04o`00003o00d0o`0=0?l03@Go00003@3o00800ol0
0000o`02o`000002o`0000P0o`020ol000000`3o00ko00000?l04@02o`0004Sooooo001Cooooo`;o
000000<0o`0Ho`00003o01L00_l000070?l010;o0000103o00@00ol00000o`030?l00`080?l00`Co
00001`3o01@00ol00000o`0@0?l0400E0?l04003o`00003o00d0o`0=01D0o`0=00?o00000?l03@3o
00d01P3o00d6o`0000L0o`0200?o00000?l00P3o00800P3o0083o`0000P0o`020ol00000103o017o
0000o`000?l00016ooooo`00D_ooool2o`0000040?l06?l0003o0000o`0000L0o`040_l000060?l0
1003o`00003o00<0o`0300@0o`031?l0000;0?l05003o`00003o0100o`0@01D0o`0@00?o00000?l0
3@3o00d0503o00d00ol00000o`0=0?l03@0=0?l03@Go00000P3o00800ol00000o`020?l00P050?l0
0P?o0000203o0082o`0000030?l04Ol0003o000004Gooooo001@ooooo`;o000000<0o`0Ho`000?l0
00001`3o00@3o`0000P0o`0400?o00000?l00ol000001?l0000?0?l05003o`00003o0100o`0@00T0
o`0@6Ol0000:0?l03@03o`00003o00d0o`0=0180o`0=1?l000090?l00P?o00001@3o00801?l00000
o`03o`00003o0143o`0004?ooooo001?ooooo`;o000000@0o`0Ho`00003o00Co00001@3o00@2o`00
00X0o`040ol0000B0?l050ko0000303o02d00ol00000o`0V0?l09P0:0?l09Pgo0000503o00d00ol0
0000o`0>o`000002o`0000T0o`020ol000020?l00P04o`00003o00<0o`03o`000080o`0A0_l00012
ooooo`00COooool2o`0000030?l06?l0003o00000080o`0400Co00000?l0103o00@0o`040_l00009
0?l010?o000000<0o`0Go`00003o01@03P3o01@4o`000080o`0e00?o00000?l0;@3o02d05@3o02d0
0ol00000o`0V0?l09P0D0?l09P03o`00003o02@0o`0T00Go00003`3o00d00ol00000o`0>0?l03P02
0?l03P;o00002P3o0084o`000080o`030_l00000103o017o0000o`000?l00010ooooo`00C?ooool2
o`0000030?l06?l00000o`0400<0o`041?l000090?l010;o0000103o01L00ol00000o`0D0?l05008
0?l050Go00001P3o03D00ol00000o`0]0?l0;@0E0?l0;@03o`00003o02H0o`0V01@0o`0V00?o0000
0?l0903o02@01@3o02@4o`0000/0o`0=00?o00000?l03P3o00h0103o00h2o`0000/0o`020_l00003
0?l00`03o`00003o0140o`0A00;o0000?oooool004_ooooo00Co00000?l06?l0003o0000103o00@2
o`0000X0o`040_l000070?l05`03o`00003o01@0o`0D00<0o`0D1?l0000;0?l0=@03o`00003o02d0
o`0]01D0o`0]00?o00000?l09P3o02H0503o02H00ol00000o`0T0?l090090?l090Co00001P3o00d0
0ol00000o`0>0?l03P070?l03P?o0000203o00800ol00000o`03o`0000030?l00`;o000000<0o`0A
o`000?l00000?_ooool004Wooooo0_l000000`3o01So00000?l010040?l01003o`00003o00Co0000
00L0o`040ol000090?l05`03o`00003o01Co000000?o0000403o03D00ol00000o`0]0?l0;@0D0?l0
;@03o`00003o02H0o`0V01@0o`0V00?o00000?l0903o02@03@3o02@5o`0000030?l03Ol00000o`0>
00/0o`0>0_l000060?l00P04o`00003o00<0o`03o`0000@0o`0300Co00000?l04@3o017o0000?Ooo
ool004Sooooo00Co00000?l06?l0003o0000103o00@2o`000080o`0400?o00000?l0103o00@00`3o
00@2o`0000/0o`0G0ol0000D0?l0=@03o`00003o02d0o`0]00T0o`0]6?l0000:0?l09P03o`00003o
02@0o`0T0180o`0T0ol0000=0?l03P;o00000`3o00800ol00000o`030?l00`020?l00`;o00000`3o
00<01?l00000o`0A0?l04Ol0000looooo`00Aoooool00ol00000o`0Ho`0000050?l01003o`00003o
00@0o`040080o`0400Co00000?l0103o00@0o`040_l0000:0?l05`?o000000<0o`0lo`00003o03D0
4P3o03D>o`0000/0o`1L00?o00000?l0D@3o05402P3o054=o`0001<0o`0T00?o00000?l09ol00000
0_l0000<0?l03PCo00001P3o00<01?l00000o`030?l00`3o00<3o`0003cooooo0017ooooo`;o0000
103o00@2o`0000D0o`041?l0000:0?l05`;o0000103o03`00ol00000o`0e0?l0=@0=0?l0=@Co0000
0P3o06T00ol00000o`1L0?l0G00D0?l0G003o`00003o0540o`1A01@0o`1A00?o00000?l0CP3o04h0
1?l0000?0?l09003o`00003o02L0o`0W0080o`0W0_l0000=0?l03P;o00001P3o00<2o`0000<0o`03
0_l0000kooooo`00A_ooool00ol00000o`040?l010030?l01003o`00003o00@0o`0400@0o`040_l0
000;0?l05`;o00001P3o03`00ol00000o`0e0?l0=@080?l0=@Go00001P3o06T00ol00000o`1L0?l0
G00D0?l0G003o`00003o0540o`1A01@0o`1A00?o00000?l0CP3o04h0103o04h5o`0000X0o`0T00?o
00000?l09`3o02L0103o02L3o`0000X0o`0>00?o00000?l04Ol000001`3o00<01?l00000o`030?l0
0`3o00<2o`0003[ooooo0015ooooo`03o`00003o00@0o`0400<0o`0400?o00000?l0103o00@0103o
00@00ol00000o`0Ho`0000080?l05`?o00002@3o03`00ol00000o`0e0?l0=@030?l0=@Co00002`3o
06T00ol00000o`1L0?l0G00D0?l0G003o`00003o0540o`1A01@0o`1A00?o00000?l0CP3o04h02@3o
04h4o`0000D0o`0T00?o00000?l09`3o02L0203o02L2o`0000P0o`0>00?o00000?l04@3o01400_l0
00060?l00`04o`00003o00<0o`030?l00`;o0000>Oooool004Cooooo0_l000030?l010;o00001@3o
00@2o`000080o`0H00?o00000?l05`3o01L0103o01L2o`0000`0o`0l00?o00000?l0=Ol000000ol0
000@0?l0J@03o`00003o05`0o`1L01<0o`1L00?o00000?l0D@3o05404`3o05400ol00000o`1>0?l0
CP0>0?l0CPCo000000<0o`0To`00003o02L02`3o02L3o`0000D0o`0>00?o00000?l04@3o01400P3o
0142o`0000D0o`030_l00000103o00?o0000o`000?l0000hooooo`00@oooool3o`000080o`0400?o
00000?l0103o00@00`3o00@2o`0000D0o`0H00Co00000?l05`3o01L0o`0G0_l0000=0?l0?0?o0000
503o06T00ol00000o`1L0?l0G0080?l0G0[o000000<0o`1Lo`000?l000002_l0000:0?l0D@03o`00
003o04h0o`1>0180o`1>0ol0000>0?l09`;o00000`3o00h00ol00000o`0A0?l04@040?l04@03o`00
003o00<0o`0300@0o`030_l000000`3o00Co0000o`00000gooooo`00@_ooool3o`0000030?l01?l0
003o000000D0o`0400?o00000?l0603o01P01@3o01P4o`0000`0o`0l0ol000000`3o07Go00000?l0
J@0D0?l0J@_o00002`3o0:<00ol00000o`2D0?l0U0090?l0U0Wo000000<0o`1Ao`000?l000000_l0
000B0?l0CP03o`00003o05?o000000;o00003@3o02L4o`0000L0o`0A0_l000050?l00`;o000000<0
o`04o`000?l00000=_ooool004;ooooo00Co00000?l01?l0003o00001@3o00@2o`0000L0o`0H0_l0
000=0?l0?0;o00001@3o07D00ol00000o`1Y0?l0J@0<0?l0J@Co00000P3o0;<00ol00000o`2S0?l0
X`0C0?l0X`03o`00003o09@0o`2D01<0o`2D00Co00000?l0T03o0900o`2@1Ol0000<0?l0CP03o`00
003o05<0o`1C00<0o`1C0ol0000=0?l09`;o0000203o01400ol00000o`030?l00`030?l00`03o`00
003o00@0o`0400;o0000=Oooool0047ooooo00Co00000?l0103o00Co00001@3o00@00ol00000o`0H
0?l060060?l06003o`00003o043o000000/0o`0l0_l000070?l0M@03o`00003o06T0o`1Y00P0o`1Y
1?l000060?l0/`03o`00003o0:<0o`2S01<0o`2S00?o00000?l0U03o09@04`3o09@00ol00000o`2@
0?l0T0060?l0T0Go00001`3o04h00ol00000o`1C0?l0D`060?l0D`?o00002P3o02L01?l00000o`0_
o`000?l000070?l04@;o00000`3o00<2o`000080o`040_l0000dooooo`00@?ooool01Ol00000o`04
0?l0103o00Co000000<0o`040_l000070?l060;o00000P3o04000ol00000o`0l0?l0?0060?l0?0?o
00002@3o07D00ol00000o`1Y0?l0J@040?l0J@Co00002P3o0;<00ol00000o`2S0?l0X`0C0?l0X`03
o`00003o09@0o`2D01<0o`2D00?o00000?l0T03o09002`3o0904o`0000<0o`1>00?o00000?l0D`3o
05<02@3o05<2o`0000L0o`0W00?o00000?l0;`3o02l00P3o02l00ol00000o`0A0?l04@060?l04@;o
000000@0o`03o`00003o00Co00000P3o00@2o`0003?ooooo000oooooo`;o00000P3o00@2o`000003
0?l01?l0003o000000P0o`0H00?o00000?l0@03o04000P3o04000ol00000o`0l0?l0?0040?l0?0;o
00003@3o07D00ol00000o`1Yo`000003o`0000l0o`2c00?o00000?l0X`3o0:<03@3o0:<3o`000080
o`2S1_l0000?0?l0U003o`00003o0900o`2@0140o`2@0ol0000=0?l0D`?o0000103o02L00ol00000
o`0_0?l0;`030?l0;`;o0000203o0142o`000080o`0400?o00000?l0103o00@00_l0000booooo`00
?_ooool2o`000080o`0400Co00000?l01?l0003o0000203o01P2o`0000H0o`1000Co00000?l0?03o
03`0o`0l0_l0000?0?l0M@;o00004`3o0;<00ol00000o`2S0?l0X`020?l0X`_o00001@3i0?l00ol0
0000o`3h0?l0n0030?l0n0_o0000103o09@00ol00000o`2@0?l0T00B0?l0T003o`00003o09Oo0000
00;o00003@3o05<3o`0000030?l09ol00000o`0_00H0o`0_0_l000070?l04@05o`00003o00@0o`04
0?l01?l000000P3o00@2o`00037ooooo000mooooo`;o00000P3o00@01?l00000o`040?l01?l00008
0?l06003o`00003o0400o`1000H0o`101?l0000=0?l0M@?o000000<0o`32o`00003o0;<04`3o0;<5
o`000100n@3o00?o00000?l0n03o0?P03P3o0?P7o`000140o`2@00?o00000?l0U`3o09L00`3o09L2
o`0000h0o`1C0_l000090?l0;`03o`00003o0140o`0A00@0o`0A00?o00000?l0103o00@00P3o00@0
1?l00000o`040?l01?l0000aooooo`00?Oooool01?l00000o`040?l01?l000030?l01003o`00003o
01P0o`0H00@0o`0H0_l000080?l0@0;o00003P3o07D2o`0000D0o`3200?o00000?l0/`3o0;<02P3o
0;<5o`000080j@3o00?o00000?T0o`3i0?l04P3i0?l00ol00000o`3h0?l0n00B0?l0n003o`00003o
0?@0o`3d00Go0000303o09000ol00000o`2G0?l0U`050?l0U`?o00002`3o05<01?l00000o`1Oo`00
0?l000080?l0;`;o0000103o0142o`0000@0o`0400Co00000?l0103o00Co0000<?ooool003cooooo
00Co00000?l0103o00Co00000`3o00@00ol00000o`0Ho`0000040?l06003o`00003o0400o`1000L0
o`1000?o00000?l0Nol000002`3o07D3o`0000L0o`3200?o00000?l0/`3o0;<01@3o0;<5o`0000P0
j@3o00?o00000?T0o`3i0?l04@3i0?l00ol00000o`3h0?l0n00A0?l0n003o`00003o0?@0o`3d00H0
o`3d1Ol000070?l0T003o`00003o09L0o`2G00P0o`2G0ol000070?l0D`03o`00003o05l0o`1O0080
o`1O00?o00000?l0;`3o02l01`3o02l2o`0000050?l04Ol00000o`0D0?l05?l00000103o00@01?l0
0000o`040?l01?l0000_ooooo`00>oooool01?l00000o`040?l01?l000030?l01004o`00003o01P0
o`0Ho`000080o`0H0_l000080?l0@0;o00000`3o07/00ol00000o`1e0?l0M@050?l0M@?o00002P3o
0<800ol00000o`2c0?l0/`05o`0000d0j@3o00?o00000?T0o`3i0?l04@3i0?l00ol00000o`3h0?l0
n00A0?l0n003o`00003o0?@0o`3d00/0o`3d1?l000020?l0T003o`00003o09L0o`2G00`0o`2G0_l0
00040?l0D`03o`00003o05l0o`1O00@0o`1O0_l000090?l0;`;o00000`3o01@00ol00000o`040?l0
10020?l01003o`00003o00Co000002oooooo000kooooo`03o`00003o00Co000000<0o`0400Oo0000
0?l0603o01P0o`0Ho`00003o01So000000T0o`1000?o00000?l0N`3o07/0103o07/00ol00000o`1e
0?l0M@020?l0M@;o00003P3o0<82o`000180j@3o00?o00000?T0o`3i0?l0203i0?l7o`000080n@3o
2ol000090?l0n003o`00003o0?@0o`3d0100o`3d0ol0000?0?l0U`;o00000P3o05<00ol00000o`1O
0?l0G`060?l0G`;o0000203o02l00ol00000o`0D0?l050020?l05003o`00003o00@0o`040080o`04
0ol0000^ooooo`00>_ooool3o`0000<0o`0400?o00000?l0603o01P00`3o01P00ol00000o`100?l0
@0060?l0@0;o00001`3o07/00ol00000o`1eo`000002o`0000`0o`320ol000000`3L0?oo00000>T0
o`0C0>T0o`[o00002@1e0?l00ol00000O03o07`0o`0807`0o`_o00004P3o0?@00ol00000o`3ko`00
0002o`0000l0o`2G0_l0000:0?l0G`03o`00003o02l0o`0_00D0o`0_00?o00000?l0503o01@00`3o
01@00ol00000o`040?l010020?l010;o0000;_ooool003[ooooo0_l000030?l01003o`00003o01P0
o`0H00@0o`0H00?o00000?l0@03o0400103o0402o`0000T0o`1k0_l0000=0?l0`P;o00001@3L0?l0
0ol00000j@3o0>T0o`0:0>T0o`Go00000P1/0?l00ol00000M@3o07D0o`0@07D0o`03o`00001l0?l0
O03o0100O03o00?o000007l0o`1o0?l01Ol0000<0?l0m003o`00003o0?/0o`3k00<0o`3k0ol0000<
0?l0U`04o`00003o0:Oo0000o`0000T0o`1O0_l000040?l0;`03o`00003o03Oo000000D0o`0D00?o
00000?l0103o00@00P3o00@2o`0002gooooo000iooooo`;o0000103o00@00ol00000o`0H0?l06003
0?l06003o`00003o043o000000@0o`1000?o00000?l0N`3o07/0203o07/00ol00000o`39o`00000:
0?l0`P?o00001`3L0?l00ol00000j@3o0>T0o`050>T0o`Go00001`1/0?l00ol00000M@3o07D0o`0@
07D0o`03o`00001l0?l0O03o0100O03o00?o000007l0o`1o0?l01@1o0?l5o`0000L0o`3d00?o0000
0?l0n`3o0?/01P3o0?/3o`0000P0o`2G00?o00000?l0Y`3o0:L00P3o0:L00ol00000o`1O0?l0G`08
0?l0G`;o00000P3o02l01?l00000o`0g0?l0=ol000050?l05004o`00003o00@0o`040?l010;o0000
;Oooool003Wooooo0_l000030?l01003o`00003o01P0o`0H00<0o`0H00Co00000?l0@03o043o0000
0P3o0402o`0000T0o`1k0_l000030?l0b@03o`00003o0<80o`3200D0o`320_l0000:0=`0o`03o`00
003Y0?l0j@3o00Go00003@1/0?l00ol00000M@3o07D0o`0;07D0o`;o00000P1e0?l:o`0000P0O03o
00?o000007l0o`1o0?l02`1o0?l4o`0000<0o`3d00?o00000?l0n`3o0?/02@3o0?/3o`0000@0o`2G
00?o00000?l0Y`3o0:L0103o0:L2o`0000X0o`1O00?o00000?l0;ol000000`3o03L00ol00000o`0D
0?l050030?l05003o`00003o00@0o`0400?o0000;?ooool003Sooooo0ol000020?l01003o`00003o
01P0o`0H00<0o`0H00Oo00000?l0@03o0400o`10o`00003o043o000000X0o`1k00?o00000?l0b@3o
0<T0103o0<T00ol00000o`320?l0`P020?l0`P;o00003@3L0?l2o`000180K03o00?o000007D0o`1e
0?l00P1e0?l9o`0000@000go00?o0000000>o`003_l01`003_l7o`00000407`0ool0003o0000o`00
0100O`3o0ol0000>0?l0n`;o00000P3o09L00ol00000o`2W0?l0Y`060?l0Y`;o00002@3o05l00ol0
0000o`0g0?l0=`030?l0=`03o`00003o01@0o`0D00<0o`0D00?o00000?l01?l000000_l0000/oooo
o`00>?ooool3o`0000030?l01?l00000o`0H00@0o`0H00?o00000?l0@03o04000`3o04000ol00000
o`1k0?l0N`070?l0N`;o00001`3o0<T00ol00000o`32o`000002o`0000/0g03o0ol000000`1T0?oo
000006`0o`0B06`0o`Go00003@003Ol00ol0000000ko000>o`0?000>o`03o`0000003_l000ko00Co
00003@1o0?l00ol00000N`3oo`000002o`0000h0o`3k0_l0000:0?l0Y`03o`00003o05l0o`1O00H0
o`1O0_l000050?l0=`03o`00003o01@0o`0D00<0o`0D0_l000000`3o00Co0000ooooo`0[ooooo`00
>?ooool01?l00000o`04o`000?l000050?l06003o`00003o0400o`1000<0o`100_l000070?l0N`;o
00002P3o0<T00ol00000g03o0=`0o`090=`0o`?o00001@1T0?l00ol00000K03o06`0o`0706`0o`Ko
00000`002ol00ol0000000go000=o`0?000=o`03o`0000003_l000ko00l000ko00?o0000000>o`00
3_l010003_l5o`0000L0O`3o00?o000007/0o`1k0?l00`1k0?l3o`0000/0o`3k00?o00000?D0ool0
00002P3o0:L2o`0000D0o`1O00Co00000?l0K@3o06go00001@3o03L00ol00000o`0D0?l050030?l0
5004o`00003o00Co0000o`0002_ooooo000gooooo`;o000000<0o`04o`00003o01P0103o01P00ol0
0000o`100?l0@0030?l0@004o`00003o07/0o`1ko`0000D0o`1k00?o00000?l0b@3o0<T0203o0<T0
0ol00000e@3oo`0000090=`0o`;o00002@1T0?l01?l00000K03o06`0o`1/0?l5o`0000X000_o00?o
0000000=o`003Ol01P003Ol5o`0000<000go2_l00007000>o`03o`0000003_l000ko00X000ko0ol0
000307l0o`03o`00001k0?l0N`3o00L0N`3o0_l000080?l0n`04o`00003e0?l0m@3o0?D0o`;o0000
2P3o0:L2o`000080o`1O00?o00000?l0K@3o06d00P3o06d00ol00000o`0g0?l0=`030?l0=`03o`00
003o01@0o`0D0080o`0D00Co00000?l0103o00Co0000:oooool003Oooooo00Co00000?l0103o00Co
0000103o01P00ol00000o`100?l0@0030?l0@003o`00003o07/0o`1k0080o`1k00?o00000?l0N`3o
07/00_l000090?l0b@;o00000`3E0?l00ol00000g03o0=`0o`030=`0o`?o0000301T0?l3o`0000l0
00_o2Ol00008001fo`03o`000000Ool007oo00L007oo1_l000000`003_oo0000o`000002o`0000d0
00ko1?l0000:07/0o`?o0000103o0?/00ol00000m@3o0?D0o`040?D0o`03o`00003o0:L0o`2W00T0
o`2W00?o00000?l0Gol000001@3o06d00ol00000o`0g0?l0=`030?l0=`04o`00003o01@0o`0D0?l0
50;o000000<0o`04o`000?l00000:_ooool003Kooooo0_l000000`3o00Co0000o`0000030?l06003
o`00003o0400o`1000<0o`1000?o00000?l0N`3o07/00`3o07/00ol00000o`1ko`00000:0?l0b@03
o`00003E0?l0e@3o00@0e@3o00?o00000=`0ool000000_l0000;06@0o`?o00000P002ol00ol00000
00_o000;o`07000;o`Go00000`00K?l00ol0000007Ko001fo`0=001fo`Wo00001`00Ool00ol00000
08?o0023o`020023o`Go00002@003_l00ol0000000ko000>o`03o`0000X0N`3o0_l000020?l0n`03
o`00003e0?l0m@3o00D0m@3o0_l0000:0?l0Y`03o`00003o06d0o`1]00D0o`1]00?o00000?l0=`3o
03L00`3o03L01_l00000o`0Do`00003o01Oo00000?l010;o0000:_ooool003Kooooo0_l000001P3o
00Co00000?l05ol00000o`0Ho`0000D0o`1000?o00000?l0N`3o07/01@3o07/00ol00000o`390?l0
b@070?l0b@;o0000203E0?l00ol00000I03o06@0o`0:06@0o`;o00001P002ol01?l0000000_o000;
o`002ol5o`0000T006co2?l00007003Jo`Go00001000jOl5o`000003001oool0003o000000;o0000
1`00Pol5o`0000<000ko00?o0000000>o`003_l010003_l3o`0000T0N`3o0ol000090?D0o`;o0000
203o0:L00ol00000o`1]0?l0K@060?l0K@03o`00003o03L0o`0g00<0o`0g0_l000020?l05`04o`00
003o00Co0000o`0002Wooooo000eooooo`;o000000@0o`04o`00003o01L0o`0G0_l000050?l0@003
o`00003o07/0o`1k00H0o`1k00?o00000?l0b@3o0<T01@3o0<T2o`0000P0e@3o00Co00000640o`1Q
0?oo0000201T0?l3o`0000T000_o0ol00007001/o`Go00000`00bOl8o`0000kooooo1?l00002003Y
o`Co000000<00>koo`000?l000000ol000070023o`Co00002@003_l3o`0000D0N`3o00Go00000780
o`1b0?l0LP3oo`00000:0?D0o`03o`00003o0:L0o`2W00@0o`2W00?o00000?l0^?l00000203o06d0
0ol00000o`0g0?l0=`030?l0=`05o`00003o01L0o`0Go`00003o00@00_l0000Yooooo`00=Oooool2
o`0000050?l01?l00000o`0G0?l05ol000001@3o04000ol00000o`1k0?l0N`060?l0N`03o`00003o
0<Wo000000D0o`3900?o00000=D0o`3E0?l01P3E0?l2o`0000@0H@3o00?o000006@0o`1T0?l00`1T
0?l2o`0000T000_o0_l00002001To`04o`000000K?l006co001/o`Go00001000bOl2o`000003o`3o
fOoooooooooo01oooooo00<00?n_o`000?l000000_l000001000k_oo0000o`000?l000040023o`04
o`000000O_l007ko001no`?o00002@003_l2o`000080N`3o00?o00000780o`1b0?l00`1b0?l2o`00
00T0m@3o00?o00000?l0Y`3o0:L00P3o0:L01Ol00000o`2h0?l0^03o0;So000000P0o`1]00?o0000
0?l0=`3o03L00P3o03L01ol00000o`0G0?l05`3o01Oo00000?l01?l00000:Oooool003Gooooo00?o
00000?l01?l000000`3o01L00ol00000o`100?l0@0020?l0@003o`00003o07/0o`1k00H0o`1k00Go
00000?l0b@3o0<T0o`39o`0000020?l0b@;o0000203E0?l00ol00000H@3o0640o`050640o`03o`00
001T0?oo000000;o000020002ol2o`0000H006Co0ol000000`00bOoo0000o`000003o`000003o`3o
fOoooooooooo02Wooooo0`00ojl00ol000000>koo`000004o`0000D007ko0ol00008000>o`?o0000
1`1b0?l2o`0000T0m@3o0P3o0:L00ol00000o`2h0?l0^0030?l0^003o`00003o06d0o`1]00H0o`1]
00Ko00000?l0=`3o03Oo00000?l0?Ol000020?l05`04o`00003o00Co0000o`0002Sooooo000doooo
o`;o000000L0o`04o`00003o01L0o`0Go`00003o03co00000080o`1000?o00000?l0N`3o07/01P3o
07/00ol00000o`390?l0b@020?l0b@03o`00003o0<Wo000000P0e@3o0_l000090640o`03o`000000
2ol000_o00L000_o0_l00006001To`03o`000000^ol00;_o00800;_o0_l000000ol0omWooooooooo
o`0booooo`Co000000@00>Koo`000?l0003o00001@00O_l2o`0000D000ko00Go0000000<o`003?l0
00coo`0000080780o`03o`00003e0?l0m@3o00L0m@3o00?o00000?l0^03o0;P01@3o0;P00ol00000
o`1]0?l0K@060?l0K@05o`00003o03Oo00000?l0?Ol000000P3o01L01?l00000o`040?l01?l0000X
ooooo`00=?ooool01?l00000o`040?l01?l000020?l05`05o`00003o03co00000?l0@?l00000203o
07/00ol00000o`390?l0b@040?l0b@03o`00003E0?l0e@3o00H0e@3o00?o00000640o`1Q0?l01`1Q
0?l01Ol0000000[o000:o`002_oo000000@000_o0ol00004001To`;o00001@00^ol00ol0003ooooo
ooooo`0iooooo`?o00000P00i_l3o`0000@007ko0_l00002000>o`03o`0000003?l000co00<000co
0_l000070780o`;o00001P3e0?l00ol00000i@3oo`0000070?l0^003o`00003o06d0o`1]00H0o`1]
00Go00000?l0?@3o03d0o`0mo`0000020?l05`03o`00003o00Co000002Sooooo000dooooo`03o`00
003o00Co00000080o`0G00Go00000?l0?03o03`0o`0lo`0000080?l0N`03o`00003o0<T0o`3900D0
o`3900Co00000=D0ool0003o00000`3E0?l2o`0000P0H@3o00?o0000000:o`002_l010002_l01?l0
000000_oo`000?l00005001To`;o00000`00^ol2o`000003o`3oj?oooooooooo03gooooo0ol00003
003Vo`?o00000`00O_l3o`0000L000co00?o00000780o`1b0?l01P1b0?l00ol00000m@3o0?D0o`02
0?D0o`05o`00003U0?l0i@3o0>D0ool000001`3o0;P00ol00000o`1]0?l0K@050?l0K@05o`00003o
03d0o`0m0?l0?Ol000000P3o01L00ol00000o`04o`00000Xooooo`00=?ooool00ol00000o`04o`00
00020?l05`05o`00003o03`0o`0l0?l0??l000001`3o07/00ol00000o`390?l0b@050?l0b@03o`00
003E0?l0e@3o0080e@3o00?o00000=D0ool00000201Q0?l2o`0000P000[o00?o0000001Tool00000
0P00I?l3o`0000800;_o0_l000000ol0onSoooooooooo`13ooooo`03o`000000i_l00>Ko00800>Ko
1?l00003001co`;o00001P003?l2o`0000P0LP3o0P3e0?l00ol00000i@3o0>D0o`030>D0o`03o`00
003o0;P0o`2h00D0o`2h00?o00000?l0K@3o06d00`3o06d00ol00000o`1go`0000030?l0?@03o`00
003o01L0o`0G00;o0000:?ooool003Cooooo0_l000020?l05`07o`00003o03`0o`0l0?l0??l00000
o`1fo`0000050?l0N`03o`00003o0<T0o`3900D0o`3900?o00000=D0o`3E0?l0103E0?l00ol00000
H@3o0640o`050640o`;o000020002_l00ol0000005oo001Oo`02001Oo`;o000000@00;_oo`000?l0
003o0000C?ooool2o`0000@00=Ko00?o0000001co`00Lol00P00Lol00ol0000000co000<o`05000<
o`03o`00001b0?l0LP3o00D0LP3o0_l000070>D0o`03o`00003o0;P0o`2h00D0o`2h00Go00000?l0
K@3o06d0o`1]o`0000020?l0M`05o`00003o03d0o`0m0?l0?Ol000000P3o01L3o`0002Oooooo000d
ooooo`;o00000P3o01L01Ol00000o`0l0?l0?03o03co00000080o`1f00Go00000?l0N`3o07/0o`1k
o`0000070?l0b@03o`00003E0?l0e@3o00D0e@3o00?o00000640ool00000101Q0?l00ol0000000[o
000:o`05000:o`;o00001P00Gol3002eo`03003olOl0003ooooo04gooooo0ol00003003Fo`;o0000
0`00Lol2o`0000H000co00?o00000780o`1b0?l00P1b0?l2o`000080J@3o00?o00000>D0o`3U0?l0
1@3U0?l00ol00000o`2h0?l0^0050?l0^003o`00003o06go000000@0o`1g00Go00000?l0?@3o03d0
o`0mo`0000020?l05`;o00009oooool003Cooooo00Co00000?l05`3o01Oo0000103o03`01ol00000
o`1f0?l0MP3o07Ko00000?l0Nol000001`3o0<T00ol00000e@3o0=D0o`050=D0o`06o`00001Q0?l0
H@3o0640ool00000H@3o0_l00007000:o`03o`000000Gol005oo00<005oo00?o0000002eo`00]Ol0
0_l000000`00oo7oooooooooo`1Aooooo`03o`000000e_l00=Ko00800=Ko00?o0000001co`00Lol0
0P00Lol2o`0000H000co0P1b0?l00ol00000J@3o06T0o`0306T0o`03o`00003U0?l0i@3o00D0i@3o
00?o00000?l0^03o0;P01@3o0;P00ol00000o`1g0?l0M`030?l0M`05o`00003o03d0o`0m0?l0?Ol0
00000P3o01L2o`0002Oooooo000dooooo`04o`00003o01L0o`0Go`0000<0o`0l00?o00000?l0MP3o
07H00`3o07H00ol00000o`390?l0b@050?l0b@03o`00003E0?l0e@3o00D0e@3o00?o00000640o`1Q
0?l00`1Q0?l00ol0000000[o000:o`05000:o`;o00001000Gol01ol000000;Go002eo`00]Ooo0000
003olOl00000EOooool2o`0000<00=Ko00?o0000001co`00Lol00`00Lol00ol0000000co000<o`03
000<o`?o00001P1Y0?l00ol00000i@3o0>D0o`050>D0o`03o`00003o0;P0o`2h00<0o`2h0_l00006
0?l0M`06o`00003o03d0o`0m0?l0?Ol00000o`0G0_l0000Wooooo`00<oooool2o`0000030?l05ol0
0000o`0l00<0o`0l00?o00000?l0MP3o07H00`3o07H2o`0000D0o`3900?o00000=D0o`3E0?l01@3E
0?l00ol00000H@3o0640o`040640o`03o`0000002_oo000000;o000000<000[oo`000?l000001000
Gol2o`0000800;Go0ol0001Hooooo`;o00000`00e_l00ol0000007?o001co`03001co`03o`000000
3?l000co00;o00000`002ol00ol00000J@3o06T0o`0406T0o`03o`00003U0?l0i@3o00D0i@3o00Go
00000?l0^03o0;P0o`2ho`0000020?l0a003o`00003o07L0o`1g00<0o`1g00Co00000?l0?@3o03d0
o`0m1?l0000Wooooo`00<oooool4o`0000<0o`0l00?o00000?l0MP3o07H00`3o07H01?l00000o`33
0?l0`ol000030?l0b@03o`00003E0?l0e@3o00D0e@3o00?o00000640o`1Q0?l0101Q0?l00ol00000
00[o000:o`03000:o`03o`000000Gooo0000008005oo0_l00003002eo`03o`000000oo7o000005[o
oooo00?o0000003og@00e_l00`00e_l4001co`?o00001P002ol00ol00000J@3o06T0o`0406T0o`03
o`00003U0?l0i@3o00D0i@3o00?o00000?l0^?l000000`3o0<@00ol00000o`1g0?l0M`040?l0M`07
o`00003o03d0o`0m0?l0?Ol00000o`0Io`00000Wooooo`00<oooool3o`0000@0o`0l00?o00000?l0
MP3o07H00`3o07H01ol00000o`330?l0``3o0<?o00000?l0bOl000001`3E0?l00ol00000H@3o0640
o`040640o`03o`0000002_l000[o00<000[o00Co0000001Po`00H?l0063o2Ol0001Looooo`03o`00
0000omgo000000Ko00000`00JOl00ol0000000_o000;o`04000;o`03o`00001Y0?l0J@3o00@0J@3o
00?o00000>D0o`3U0?l0103U0?l2o`0000D0o`3400?o00000?l0M`3o07L00`3o07L01ol00000o`0m
0?l0?@3o03go00000?l06Ol000009oooool003?ooooo0ol000030?l0?003o`00003o07H0o`1f00<0
o`1f00?o00000?l0``3o0<<00`3o0<<2o`0000H0e@3o00?o00000640o`1Q0?l0101Q0?l00ol00000
00[o000:o`03000:o`03o`000000H?l0063o00<0063o00Oo0000002eo`00]Ol00;Goo`000000oo3o
000005kooooo00Co0000003og@00omgo00000`00aOl00ol0000006Wo001Yo`02001Yo`03o`000000
2ol000_o00@000_o00?o000006T0o`1Y0?l0101Y0?l01?l00000i@3o0>D0o`3U0?l2o`0000030=T0
ool00000o`3400@0o`3400?o00000?l0M`3o07L0103o07L01Ol00000o`0mo`000?l00000o`0I00;o
00009_ooool003?ooooo1?l000020?l0?003o`00003o07H0o`1f00<0o`1f00?o00000?l0``3o0<<0
0`3o0<<01?l00000f`3oo`000?l000030=D0o`03o`00001Q0?l0H@3o00@0H@3o00?o0000000:o`00
2_l00`002_l00ol00000063o001Po`03001Po`06o`000000]Ol00;Go002eool000000?o`0_l0001N
ooooo`;o00000P00omd01Ol000000<Go0035o`00aOoo000000@006Wo00?o0000000;o`002ol01000
2ol00ol00000J@3o06T0o`0406T0o`80i@3o00?o00000=T0o`3I0?l00P3I0?l00ol00000o`340?l0
a0030?l0a003o`00003o07L0o`1g00<0o`1g00Go00000?l0?Ol0003o00000?l06@02o`0002Kooooo
000cooooo`07o`00003o01Go00000?l0>?l00000o`0lo`0000040?l0MP03o`00003o0<<0o`3300<0
o`3300?o00000=/0o`3K0?l00P3K0?l00ol00000e@3oo`0000060640o`03o`0000002_l000[o00<0
00[o00?o0000001Po`00H?l00`00H?l01_l000000;Go002eo`00]Ooo0000003ol0;o0000H?ooool2
o`0000800?oM00Go00000035o`00aOl00<Goo`000004001Yo`03o`0000002ol000_o00@000_o00?o
000006T0o`1Y0?l00`1Y0?l2o`0000D0f@3o00?o00000?l0a03o0<@0103o0<@00ol00000o`1g0?l0
M`030?l0M`04o`00003o043o00000?l06@;o00009_ooool003?ooooo00?o00000?l05Ol000000P3o
03P00ol00000o`1f0?l0MP020?l0MP03o`00003o0<<0o`3300@0o`3300?o00000=/0o`3K0?l00`3K
0?l2o`0000D0H@3o00?o0000000:o`002_l00`002_l00ol00000063o001Po`03001Po`09o`000000
]Ol00;Go002eool000000?o`o`000000oi;o0000063ooooo0_l00003003og@05o`000000aOl00<Go
0035ool000001000JOl00ol0000000_o000;o`04000;o`80J@3o0ol000000`1S0?oo00000=T0o`05
0=T0o`03o`00003o0<@0o`3400<0o`3400?o00000?l0M`3o07L00P3o07L2o`0000030?l0@?l00000
o`0I00;o00009_ooool003?ooooo00?o00000?l05Ol000000P3o03P00ol00000o`1f0?l0MP020?l0
MP03o`00003o0<<0o`3300<0o`3300?o00000=/0o`3K0?l0103K0?l00ol00000I03oo`000002o`00
00030640ool0000000[o00@000[o00?o0000001Po`00H?l00`00H?l01?l000000;Go002eo`00]Ol3
o`000003003oT_l0003o0000067ooooo1Ol000040035o`03o`000000JOl006Wo008006Wo00?o0000
000;o`002ol00`002ol2o`0000D0H`3o00?o00000=T0o`3I0?l00`3I0?l00ol00000o`340?l0a004
0?l0a008o`00003o07L0o`1go`00003o07_o00000?l0@?l000020?l06@03o`000?oooooooooo02Co
oooo000cooooo`03o`00003o01Go00000080o`0h0_l000020?l0MP03o`00003o0<<0o`3300@0o`33
00?o00000=/0o`3K0?l00`3K0?l00ol00000I03o06@0o`0306@0o`Co00000P002_l00ol00000063o
001Po`03001Po`04o`000000]Ol00;Go002eo`;o000000<00?oYo`000?l000000_l0001Pooooo`Co
00000P00on/5o`0000D006Wo0P002ol3o`000003000:ool00000H`3o00D0H`3o00?o00000=T0o`3I
0?l00`3I0?l00ol00000o`340?l0a0030?l0a003o`00003o07Oo00000080o`1k00Ko00000?l0@03o
043o00000?l06Ol0000Vooooo`00<oooool2o`0000<0o`0h00Go00000?l0Kol00000o`1fo`000005
0?l0``03o`00003K0?l0f`3o00@0f`3o00?o000006@0o`1T0?l00`1T0?l01?l0000000[o000:o`00
2_l5o`000080063o00?o0000002eool000000_l00003003oj@03003oT_l0003o000000;o0000Gooo
ool5o`0000800?o[00Co0000002io`00^Ol00;Wo1ol00005000:o`03o`00001S0?l0H`3o00<0H`3o
00?o00000=T0o`3I0?l0103I0?l00ol00000o`340?l0a0030?l0a005o`00003o07/0o`1k0?l0Nol0
00000P3o04000ol00000o`0Io`00000Vooooo`00<oooool2o`0000<0o`0h00?o00000?l0K`3o06l0
0_l000050?l0``03o`00003K0?l0f`3o00<0f`3o00?o000006@0o`1T0?l00`1T0?l00ol0000000[o
000:o`03000:o`04o`000000Hol006?o001So`Co00000P00^ol00ol000000?oY003oj@02o`000003
003o@ol0003o000000;o0000GOooool4o`000003003oCOl0003o000000800?o[00Go0000002io`00
^Ol00;Woo`000004001Ro`03o`0000002_l000[o00<000[o00?o000006<0o`1S0?l0101S0?l00ol0
0000f@3o0=T0o`030=T0o`03o`00003o0<@0o`340080o`340_l000030?l0N`06o`00003o0400o`10
o`00003o01Wo00009_ooool003?ooooo0_l000030?l0>005o`00003o06l0o`1_o`00003o0;X00_l0
00020?l0``03o`00003K0?l0f`3o00@0f`3o00?o000006@0o`1T0?l00`1T0?l00ol0000000[o000:
o`02000:o`03o`000000Hol006?o00<006?o00Go0000002ko`00^ol00;_oo`000002003oj@;o0000
00@00?m3o`000?l0003o0?l40_l0001Looooo`Go000000<00?m=o`000?l000000`00on/01Ol00000
0;Wo002io`00^Ooo000000@006;o00?o0000000:o`002_l00`002_l00ol00000H`3o06<0o`0306<0
o`03o`00003I0?l0f@3o00@0f@3o00Ko00000?l0a03o0<Co00000?l0bOl000030?l0N`03o`00003o
0400o`1000?o00009_ooool003?ooooo0_l000030?l0>004o`00003o06l0o`1_o`0000<0o`2j00?o
00000?l0`ol000001@3K0?l00ol00000I03o06@0o`0306@0o`03o`0000002_l000[o00<000[o00?o
0000001So`00Hol00P00Hol00ol000000;_o002ko`02002ko`03o`000000onWo000000;o000000<0
0?m3o`000?l000001?l0001Jooooo`So000000D00?nIo`000000on/00?o[o`000004002io`03o`00
0000H_l006;o008006;o00?o0000000:o`002_l00P002_l00ol00000H`3o06<0o`0406<0o`03o`00
003I0?l0f@3o00<0f@3o00?o00000?l0a?l000000P3o0<T00ol00000o`1k0?l0N`020?l0N`04o`00
003o043o0000o`0002Oooooo000dooooo`04o`00003o03P0o`0ho`0000<0o`1_00?o00000?l0^P3o
0;X00P3o0;X2o`0000D0f`3o00?o000006@0o`1T0?l00P1T0?l00ol0000000[o000:o`03000:o`03
o`000000Hol006?o00<006?o00Go0000002ko`00^ol00;_oo`000002003oj@06o`000000oh[o0000
003o@ol000000?lC1Ol0001Gooooo`;o000000@00?m2o`000?l0003o00000P00oaL2o`0000800?nI
0_l000000`00on_o0000002io`02002io`03o`000000H_l006;o008006;o00?o0000000:o`002_l0
0`002_l00ol00000H`3o06<0o`0406<0o`03o`00003I0?l0f@3o0080f@3o0_l000030?l0b@03o`00
003o07/0o`1k0080o`1k00Co00000?l0@?l0003o00009oooool003Cooooo00Co00000?l0>03o03So
00000`3o06l00ol00000o`2j0?l0^P020?l0^P04o`00003S0?oo0000o`000080f`3o00?o000006@0
o`1T0?l00`1T0?l00ol0000000[o000:o`02000:o`03o`000000Hol006?o00<006?o00Ko0000002k
o`00^ol00;_oo`000000onT2o`0000800?n:00Co0000003o@ol000000?lC1ol0001Dooooo`;o0000
00<00?m2o`000?l000000_l00002003o5`06o`000000odgo0000003oVOl000000?oa0_l00004002i
o`03o`000000H_l006;o008006;o00?o0000000:o`002_l00P002_l00ol00000H`3o06<0o`0406<0
o`03o`00003I0?oo000000;o000000<0e03oo`00003o0<T00P3o0<T00ol00000o`1k0?l0N`020?l0
N`04o`00003o043o0000o`0002Oooooo000dooooo`04o`00003o03P0o`0ho`0000<0o`1_00?o0000
0?l0^P3o0;X00P3o0;X01ol00000h`3o0><0o`3S0?oo00000=/0ool00000101T0?l00ol0000000[o
000:o`03000:o`03o`000000Hol006?o00<006?o00Co0000002ko`00^ol00;_o0_l000001000on3o
0000003oR_l00002003o@`07o`000000oa<00?lCo`000000o`Co0000003o5P03o`00057ooooo0ol0
00001P00od;o0000003o5?l000000?l4o`0000800?lG0ol000000`00oiWo0000003ol@02003ol@05
o`000000^Ol00;Wo002iool000001000H_l00ol0000000[o000:o`03000:o`03o`00001S0?l0H`3o
00<0H`3o0_l000040=@0o`05o`00003o0<T0o`390?l0bOl00000103o07/00ol00000o`10o`00000X
ooooo`00=?ooool2o`0000030?l0>?l00000o`1_0080o`1_00?o00000?l0^P3o0;X00P3o0;X00ol0
0000h`3o0><0o`020><0o`Co00000P1T0?l00ol0000000[o000:o`02000:o`03o`000000Hol006?o
00<006?o00?o0000002ko`00^ol00_l00003003oh004o`000000oh[o0000003o@`;o00000P00oa<0
1Ol000000?l4o`000?l000000?lF00Co0000COooool3o`000004003o@?l0003o0000003o50;o0000
00@00?l4o`000000oaL00?lG0ol00002003oV@04o`000000oo400?oa003ol@Go00001000H_l00ol0
000000[o000:o`02000:o`03o`00001S0?l0H`3o00?o000000<0H@3oo`00003D0?l00`3D0?l00ol0
0000o`390?l0b@020?l0b@04o`00003o07/0o`1k0?l0N`?o0000:?ooool003Gooooo0ol000020?l0
K`03o`00003o0;X0o`2j00<0o`2j00?o00000><0o`3S0?l00P3S0?l01?l00000J03o06P0o`1X0?l5
o`00008000[o00?o0000001So`00Hol00`00Hol3o`0000030032ool000000?oP00800?oP00Ko0000
003oR_l0003o0000003o@?l00002003o4`04o`000000o`@00?l4o`0000800?lF00?o0000003oCol0
00000_l0001:ooooo`?o000000<00?m0o`000?l000000P00oa@01?l000000?l4o`000000oaH2o`00
00800?m<00Co0000003oV@00oiWo00000`00oo401?l000000;Co002do`00]?l=o`0000@0H@3o00?o
00000=@0o`3D0?l00P3D0?l00ol00000o`390?l0b@020?l0b@04o`00003o07/0o`1k0?l0N`?o0000
:?ooool003Gooooo00?o00000?l0=_l000000P3o06l00ol00000o`2j0?l0^P030?l0^P03o`00003S
0?l0h`3o0080h`3o00?o000006P0o`1X0?l00P1X0?l01?l0000000_o000;o`002ol8o`0000@00<;o
00Co0000003oh000on3o00000P00ohX01?l000000?m0003o@000od02o`000003003o4ol000000?l4
00;o00000P00oaH00ol000000?m?o`000002o`0004Oooooo0ol00003003o@003o`000000oa@00?lD
00;o000000<00?l4o`000000oaH00_l00002003oC0;o000000<00?nIo`000000oo400P00oo400ol0
00000;Co002do`02002do`03o`000000Gol005oo008005oo00?o0000000:o`002_l00P002_l00ol0
0000H@3o0640o`030640o`03o`00003D0?l0e03o0080e03o00?o00000?l0b@3o0<T00P3o0<T00ol0
0000o`1k0?l0N`03o`0002Wooooo000eooooo`03o`00003o03Ko00000080o`1_00?o00000?l0^P3o
0;X00P3o0;X00ol00000h`3o0><0o`020><0o`03o`00001X0?l0J03o00<0J03o00?o0000000;o`00
2ol00P002ol00ol0000006So001Xo`03001Xo`03o`000000`_l00<;o00800<;o00Go0000003oh000
on3o0000003oRP02o`0000<00?m00_l000001P00oa?o0000003o1?l000000?l4o`0000800?lF0_l0
00000`00odoo0000o`000002o`0004;ooooo0_l000001000ohSo0000003o@000od02o`0000800?lD
00Co0000003o1?l0003o00000P00oaH2o`0000800?m<00Co0000003oUol0003o00000`00oo400ol0
00000;Co002do`02002do`03o`000000Gol005oo008005oo00?o0000000:o`002_l00P002_l00ol0
0000H@3o0640o`030640o`03o`00003D0?l0e03o00<0e03o00So00000?l0b@3o0<T0o`39o`00003o
07_o00000?l0NP;o0000:Oooool003Kooooo0ol000000`3o06oo00000?l0^P030?l0^P03o`00003S
0?l0h`3o0080h`3o00?o000006P0o`1X0?l00`1X0?l00ol0000000_o000;o`02000;o`03o`000000
J?l006So00<006So00?o00000032o`00`_l00P00`_l00ol000000?oP003oh002o`0000800?n500Co
0000003o@000od3o00000`00oa<2o`0000800?l400Go0000003o5_l000000?lIo`000002003oC`Co
0000?Oooool3o`000004003oR?l0003o0000003o@0;o000000@00?lCo`000000oaCo00000P00o`@2
o`0000<00?lF00Co0000003oC000odco00000P00oiL2o`0000<00?oa00Go0000002do`00]?l00;Co
o`000004001Oo`03o`0000002_l000[o00<000[o00?o00000640o`1Q0?l00P1Q0?l00ol00000e03o
0=@0o`030=@0o`04o`00003o0<T0o`390?l0b@;o000000@0o`1jo`00003o03oo0000:Oooool003Ko
oooo00?o00000?l0=_l000000_l000040?l0^P03o`00003S0?l0h`3o0080h`3o00?o000006P0o`1X
0?l00`1X0?l00ol0000000_o000;o`02000;o`03o`000000J?l006So00<006So00Go00000032o`00
`_l00<;oo`000002003oh0;o00000`00ohD01?l000000?m0003o@?l00003003o4`;o00000`00o`@2
o`0000800?lI0_l000000`00odoo0000o`000004o`0003Sooooo0_l00002003oR0;o000000<00?m2
o`000?l000000`00oa<2o`0000<00?l400?o0000003o5P00oaH00P00oaH00ol000000?m<o`000004
003oU`;o00000P00oo401Ol000000;Co002do`00]?oo000000@005oo00?o0000000:o`002_l00`00
2_l00ol00000H@3o0640o`030640o`03o`00003D0?l0e03o0080e03o00?o00000?l0b@3o0<T00_l0
00020?l0NP;o0000:_ooool003Kooooo00Co00000?l0=_l00000o`1Z0_l000030?l0^P03o`00003S
0?l0h`3o0080h`3o00?o000006P0o`1X0?l00`1X0?l00ol0000000_o000;o`02000;o`03o`000000
J?l006So00<006So00Wo00000032o`00`_l00<;oo`000000on3o0000003of_l000000`00ohD01Ol0
00000?m0o`000000od7o000000<00?lC00?o0000003o1000o`@00P00o`@2o`0000<00?lI0_l00002
003oF0Ko0000<_ooool3o`000004003oR?l0003o0000o`0000800?m20_l00003003o4`;o00001000
o`@01_l000000?lF003o5P00oaKo0000003oA`;o00001000oiL00ol000000?o_o`000002o`0000@0
0;Co00?o0000001Oo`00Gol00P00Gol00ol0000000[o000:o`02000:o`03o`00001Q0?l0H@3o00<0
H@3o00?o00000=@0o`3D0?l00P3D0?l3o`0000040?l0aol00000o`1j0?l0NP;o0000:_ooool003Oo
oooo0_l000000`3o06[o00000?l0]@04o`0000@0h`3o00?o000006P0o`1X0?l00P1X0?l00ol00000
00_o000;o`02000;o`03o`000000J?l006So00<006So00?o00000032o`00`_l00P00`_l2o`000080
0?oJ00?o0000003oQ@00ohD00P00ohD2o`0000800?m100?o0000003o4`00oa<00_l00004003o10;o
00000`00oaT2o`0000@00?mH1ol0000[ooooo`?o00000P00oi<2o`0000<00?m20_l00004003o4`03
o`000000o`Co000000<00?l40_l00002003o5P03o`000000odL00?m700;o00001000oiL01?l00000
0?o_003ok`00onl2o`0000<00;Co00?o0000001Oo`00Gol00P00Gol00ol0000000[o000:o`02000:
o`03o`00001Q0?l0H@3o00<0H@3o00Co00000=@0o`3D0?l0e03o0_l000030?l0a`03o`00003o07X0
o`1j00;o0000:_ooool003Oooooo0_l000000`3o06[o00000?l0]@030?l0]@;o00000P3S0?l00ol0
0000J03o06P0o`0306P0o`03o`0000002ol000_o008000_o00?o0000001Xo`00J?l00`00J?l01?l0
00000<;o0032o`00`_l2o`0000<00?oJ00?o0000003oQ@00ohD00P00ohD01Ol000000?m1003o@@00
od7o000000800?lC00?o0000003o5_l000000`00o`@01?l000000?l5o`000?l00002003o6@?o0000
1@00oeP7o`0002Gooooo0ol00002003oT`?o00000`00od82o`000004003o5?l000000?lC003o4`;o
00000P00o`@01?l000000?l4003o1?l00002003o5003o`000000oaKo000000<00?m700Go0000003o
U`00oiL00?nGo`000004003ok`03o`000000]_oo000000?o00001000Gol00ol0000000[o000:o`02
000:o`03o`00001Q0?l0H@3o00<0H@3o1?l000000`3F0?oo00000?l0a`020?l0a`05o`00003o07[o
00000?l0?ol00000:_ooool003Oooooo00Go00000?l0=_l00000o`1Zo`0000030?l0]@03o`00003W
0?oo000000;o00001@1X0?l00ol0000000_o000;o`02000;o`03o`000000J?l006So00<006So1?l0
00000`00b?oo0000003ofP03003ofP03o`000000ohD00?n500;o00001000od42o`0000<00?lF00Co
0000003o1000o`Co00000`00o`D00ol000000?lIo`000002003o70?o00000P00oeP00ol000000?mM
003oG@03o`000003003o/_l0003o000000Ko00005_ooool7o`0000800?nC0ol00002003oB@04o`00
0000od;o0000o`0000<00?lD00?o0000003o4ol000001000o`@00ol000000?l4o`000003003o50;o
00001000odL01Ol000000?nG003oU`00oiOo000000@00?o_00?o0000002fo`00]_l00P00]_l4o`00
0003001Oool0000000[o00@000[o00?o00000640o`1Q0?l00ol000040=H0o`04o`00003o0<L0o`37
o`000080o`1j0_l0000[ooooo`00>?ooool2o`0000030?l0J_l00000o`2e0080o`2e00Co00000>L0
o`3W0?l0i`3o1?l0000206P0o`03o`0000002ol000_o008000_o00?o0000001Xo`00J?l01?l00004
0038o`03o`000000omX00?oJ00800?oJ00?o0000003oQOl000000P00ohL00ol000000?m1003o@@02
003o@@03o`000000oaH00?lF00800?lF0_l00005003o1@?o00001000oa`4o`0000@00?mM1?l00003
003o/a[o00000`00oj44o`0000@00?m90ol00005003o50;o00001@00o`@2o`0000@00?lD00?o0000
003oA`00odL00P00odL00ol000000?n@o`000002003oU`03o`000000onl00?o_00800?o_00?o0000
002fo`00]_l00P00]_l01?l00000063o001Po`00H?l:o`000080HP3o00Go00000=H0o`3F0?l0eP3o
o`0000030?l0a`03o`00003o07X0o`1j00;o0000:oooool003Sooooo0_l000000`3o06[o00000?l0
]@030?l0]@04o`00003W0?l0i`3oo`0000<0J`3o2_l00003001[o`03o`000000b?l00<So00800<So
00?o0000003ofP00omX00P00omX2o`0000<00?n700?o0000003o@@00od400P00od42o`0000@00?lF
0_l00006003o1@;o00001P00oa`3o`0000D00?mM1ol00002003o/a3o00000P00oj47o`0000D00?m9
0ol00006003o50;o00001@00o`@2o`0000@00?lD0_l00003003oA`04o`000000oi000?n@003oT0;o
00001@00onl00ol000000;Ko002fo`02002fo`03o`000000H?l0063o0080063o00?o0000000:o`00
2_l00`002_l00ol00000HP3o0680o`020680o`05o`00003F0?l0eP3o0=H0ool000000`3o0<L00ol0
0000o`1j0?l0NP02o`0002_ooooo000hooooo`;o00000P3o06X01Ol00000o`2e0?l0]@3o0;Go0000
0080i`3o00?o000006/0o`1[0?l00`1[0?l00ol0000000_o000;o`02000;o`03o`000000Jol006_o
00<006_o00?o00000038o`00b?l00`00b?l00ol000000?oJ003ofP02o`0000D00?n700Co0000003o
@@00od7o00000P00odL01_l000000?lF003o5P00oaKo0000003o6@;o00001000o`D01?l000000?l5
o`000?l00004003o7003o`000000oah00?lN00?o00000P00oed00ol000000?mN003oGP04003oGQCo
00001@00oe800ol000000?m9o`000004o`0000800?lF00Co0000003o5000oa@00?lD0ol000000`00
o`Co0000003o1002003o10;o000000<00?lCo`000000oa@00P00oa@01?l000000?m2003o@_l00002
003oA`03o`000000oi000?n@00800?n@0_l00003003ok`03o`000000]_l00;Ko00800;Ko00?o0000
001Po`00H?l00`00H?l00ol0000000[o000:o`03000:o`05o`00001R0?l0HP3o0680ool00000103F
0?l01_l00000o`370?l0a`3o0<Oo00000?l0NP;o0000;?ooool003Wooooo0_l000000`3o06[o0000
0?l0]@020?l0]@05o`00003W0?l0i`3o0>L0ool00000101[0?l00ol0000000_o000;o`02000;o`03
o`000000Jol006_o00@006_o00?o00000038o`00b?l00P00b?l01Ol000000?oJo`000000omco0000
00H00?n700?o0000003o@Ol000000`00odL01?l000000?lF003o5_l00003003o6@05o`000000o`D0
0?l5003o1Ol000000`00o`D2o`0000800?lL00?o0000003o7P00oah00`00oah4o`0000T00?mN00?o
0000003oFP00oeX02000oeX00ol000000?mB003oDP04003oDPGo00001P00oaH00ol000000?lDo`00
0002o`0000@00?l400Co0000003o1000o`Co00000`00oa<01?l000000?lD003o5?l00003003o@P03
o`000000odOo000000D00?n@00Ko0000003oiol0003o0000003okol00004002fo`03o`000000H?l0
063o0080063o00?o0000000:o`002_l00`002_l00ol00000HP3o0680o`020680o`05o`00003F0?l0
eP3o0=H0ool00000103o0<L00ol00000o`1jo`00000]ooooo`00>_ooool00ol00000o`1Zo`000004
0?l0]@04o`00003W0?l0i`3oo`0000D0J`3o00?o0000000;o`002ol00P002ol00ol0000006_o001[
o`03001[o`03o`000000b?l00<So00800<So0_l00003003og003o`000000ohL00?n700<00?n700?o
0000003o@Ol000001000odL2o`0000D00?lI0ol00006003o1@?o00002000oah6o`0000@00?mN00?o
0000003oFP00oeX01`00oeX00ol000000?mB003oDP05o`0000800?lI00?o0000003o5P00oaH01@00
oaH3o`0000L00?l40ol00005003o4`;o00001@00od800ol000000?n@003oT003003oT003o`000000
onL00?oW00800?oW0_l00004002fo`03o`000000H?l0063o0080063o00?o0000000:o`002_l00`00
2_l00ol00000HP3o0680o`020680o`05o`00003F0?l0eP3o0=H0ool000000`3o0<L01?l00000o`1j
o`000?l0000]ooooo`00>_ooool3o`0000@0o`2e00Co00000>L0o`3W0?oo00001@1[0?l00ol00000
00_o000;o`02000;o`03o`000000Jol006_o00<006_o00Co00000038o`00b?l00<So0_l00005003o
g003o`000000ohL00?n700<00?n700?o0000003oA`00odL01000odL2o`0000H00?lI0_l00007003o
1@?o00001P00oah00ol000000?lN003o7P03003o7Q7o00001`00oaT00ol000000?lF003o5P02003o
5P?o000000<00?l4o`000000o`@01P00o`@2o`0000H00?lC0_l00006003o@P;o00001000oi000ol0
00000?oW003oi`03003oi`;o00000`00]_l00ol00000063o001Po`02001Po`03o`0000002_l000[o
00<000[o00?o00000680o`1R0?l00P1R0?l01Ol00000eP3o0=H0o`3F0?oo000000<0o`370_l00000
0`3o07Coooooooooo`0/ooooo`00>oooool3o`0000<0o`2e00Go00000>L0o`3W0?l0i`3oo`000004
06/0o`03o`0000002ol000_o008000_o00?o0000001[o`00Jol00`00Jol01_l000000<So0038ool0
00000<Koo`0000H00?oL00?o0000003oQ`00ohL00P00ohL2o`0000D00?m700?o0000003oCol00000
1@00oaT01?l000000?lLo`000?l00005003o1@03o`000000o`H00?l600Go000000<00?lNo`000000
oah02000oah00ol000000?lL003o7007003o7003o`000000oaT00?lI00L00?lI00?o0000003o5_l0
00000_l00004003o1003o`000000o`@00?l400<00?l40_l000000`00oaCo0000003o4`04003o4`03
o`000000od3o000000D00?m200Co0000003oR000ohSo00000P00oi000ol000000?oW003oi`04003o
i`03o`000000_?oo000000;o00001@00H?l00ol0000000[o000:o`03000:o`03o`00001R0?l0HP3o
0080HP3o00Go00000=H0o`3F0?l0eP3oo`0000020?l0a`;o000000<0o`1dooooooooool0;Oooool0
03cooooo0ol000020?l0]@05o`00003W0?l0i`3o0>L0ool00000101[0?l00ol0000000_o000;o`02
000;o`03o`000000Jol006_o00@006_o0_l000030036o`03o`000000om`00?oL00<00?oL00Go0000
003oQ`00ohL00?n7o`000002003oT005o`000000odL00?m7003oAol000000`00odl2o`0000<00?lI
00Co0000003o7000oa`00?lL0ol00002003o1@03o`000000o`H00?l600D00?l61ol00004003o7P03
o`000000oa`00?lL00L00?lL00?o0000003o6@00oaT00P00oaT7o`0000L00?l400?o0000003o1000
o`@00ol00003003o5004o`000000oa<00?lC003o4`;o00000`00od001Ol000000?m2003o@P00od;o
000000@00?n800?o0000003oT?l000001@00onL00ol000000;co002lo`02002lo`;o00001000H?l0
0ol0000000[o000:o`03000:o`05o`00001R0?l0HP3o0680ool000000`3F0?l4o`0000030?l0`Ol0
003o000002oooooo000mooooo`03o`00003o0;Oo000000?o00000P3W0?l00ol00000J`3o06/0o`02
06/0o`03o`0000002ol000_o008000_o00?o0000001[o`00Jol00`00Jol2o`0000D00<Ko00?o0000
003og000om`00`00om`00ol000000?n7o`000004003oT004o`000000odL00?m7o`0000D00?m?0_l0
00000`00oaWo0000003o7005003o70?o00002000o`H00ol000000?l6003o1P03003o1Q?o00001@00
o`D00ol000000?l4003o1006003o10?o00001`00oa@00ol000000?lCo`000005003o@004o`000000
od800?m2o`0000D00?n80_l00005003oi`03o`000000_?l00;co00<00;co00?o0000001Tool00000
0ol00005000:o`03o`00001R0?l0HP3o0080HP3o00?o00000=H0ool000000_l000040?l0`@03o`00
0?oooooooooo02kooooo000mooooo`;o00000`3o0;L3o`0000030>L0ool00000J`3o00<0J`3o00?o
0000000;o`002ol00P002ol00ol0000006_oo`000002o`000003001Zool000000<Ko00D00<Ko00?o
0000003og000om`00P00om`2o`0000H00?n@00?o0000003oAol000001`00odl2o`0000P00?lL0ol0
0006003o1P03o`000000o`H00?l600L00?l600?o0000003o1P00o`H01`00o`H00ol000000?l5003o
1@07003o1@03o`000000o`@00?l400@00?l40ol00009003o50;o00001P00od000ol000000?m2o`00
0005003oR003o`000000omko000000@00?oW00?o0000002lo`00_?l00`00_?l00ol0000006Co001T
o`03001To`Co00000P002_l00ol00000HP3o0680o`04o`000080g@3o00Ko00000?l0`@3o0<40o`31
0?l0M?l0000`ooooo`00?_ooool2o`000080o`2g00?o00000>H0o`3V0?l03Ol00005001Zo`03o`00
0000a_l00<Ko00<00<Ko00Go0000003og000om`00?oLo`000002003oi`03o`000000oi000?n@00@0
0?n@0_l00008003oC`;o00001`00oa`00ol000000?lN003o7P05o`000003003o1_l000000?l600P0
0?l600?o0000003o1P00o`H01`00o`H00ol000000?l5003o1@07003o1@03o`000000o`Co000000Co
00000P00oaH00ol000000?lD003o5006003o50;o00001`00od02o`0000D00?n800Go0000003ogP00
omh00?oNo`000003003oi`03o`000000_?l00;co00<00;co00?o0000001To`00I?l00`00I?l01?l0
000000_o000;o`002ol5o`000080I@3o00Co00000=d0o`3M0?l0g@3o0`3o0<42o`00037ooooo000o
ooooo`;o00000P3o0;L01?l00000iP3o0>H0ool0000406X0o`03o`0000002ol000_o008000_o00?o
0000001Zo`00J_l01000J_l00ol000000<Ko0036o`040036o`03o`000000omco000000@00?oW00?o
0000003oT000oi000`00oi000ol000000?nMo`000007003oC`03o`000000oeSo000000;o00001000
oa`00ol000000?lN003o7P05003o7POo00001000o`H00ol000000?l6003o1P07003o1P03o`000000
o`D00?l500800?l51ol00007003o5P03o`000000oa@00?lD00<00?lD0ol000000`00od;o0000003o
@004003o@0;o000000<00?n5o`000000ohP00`00ohP00ol000000?oN003ogP03003ogP03o`000000
onOo000000D00;co00?o0000001To`00I?l00`00I?l00ol0000000_o000;o`04000;o`05o`00001U
0?l0I@3o06D0ool000000`3M0?l30?l0`@;o0000<_ooool003oooooo00?o00000?l0K?l000000P3o
0;L01?l00000iP3o0>H0ool0000406X0o`03o`0000002ol000_o008000_o00?o0000001Zo`00J_l0
1000J_l00ol000000<Ko0036o`030036o`;o00001P00onL01Ol000000?n@003oT000oi3o000000<0
0?nM0_l00004003oC`03o`000000oeP00?mH00<00?mH1?l00009003o7P03o`000000oah00?lN00<0
0?lN4ol00005003o6@03o`000000oaH00?lF00L00?lF00?o0000003o5?l000000_l00004003o@P04
o`000000od000?m0003o@0;o00001000ohD01?l000000?n8003oR?l00007003ogP;o00001@00_?l0
0ol0000006Co001To`02001To`03o`0000002ol000_o00@000_o00Go000006D0o`1U0?l0I@3oo`00
00030=d0o`06o`00003o0<40o`31o`00003o07Co0000<_ooool0043ooooo0_l000020?l0]`05o`00
003V0?l0iP3o0>H0ool00000101Z0?l00ol0000000_o000;o`02000;o`03o`000000J_l006[o00@0
06[o00?o00000036o`00a_l00_l000000`00_Ooo0000003oi`06003oi`04o`000000oi000?n@o`00
00D00?nM0_l00002003oC`03o`000000oeP00?mH00H00?mH0ol00007003o7P03o`000000oah00?lN
00L00?lN00?o0000003o7000oa`01`00oa`00ol000000?lI003o6@07003o6@03o`000000oaH00?lF
00H00?lF0ol00008003o@P?o00001P00ohD00ol000000?n8o`000007003ogP03o`000000a?l00<Co
00;o00000P00_?l00ol0000006Co001To`03001To`03o`0000002ol000_o00<000_o00?o000006D0
o`1U0?l00P1U0?l01?l00000g@3o0=d0ool000020?l0`@03o`00003o07Co000003?ooooo0011oooo
o`;o00000P3o0;L01?l00000iP3o0>H0ool0000406X0o`03o`0000002ol000_o00<000_o00?o0000
001Zo`00J_l00`00J_l00ol000000<Koo`000004002mo`03o`000000onL00?oW00D00?oW00?o0000
003oT?l000001`00oid00ol000000?m?o`000008003oF003o`000000oed00?mM00?o00001000oah0
0ol000000?lN003o7P07003o7P03o`000000oa`00?lL00L00?lL00?o0000003o6@00oaT02000oaT0
0ol000000?lF003o5P02003o5P?o000000<00?m9o`000000od801`00od82o`0000P00?n50_l00007
003ogP03o`000000a?l00<Co00<00<Co00?o0000002lool000001000I?l00ol0000000_o000;o`03
000;o`03o`00001U0?l0I@3o0080I@3o00Go00000=d0o`3M0?l0g@3oo`0000020?l0`@;o0000=?oo
ool004;ooooo0_l000000`3o0;Oo00000>H0o`020>H0o`03o`00001Z0?l0JP3o0080JP3o00?o0000
000;o`002ol00P002ol00ol0000006[o001Zo`03001Zo`?o00001@00_Ol00ol000000?oW003oi`05
003oi`;o00002000oid3o`0000L00?mH00?o0000003oG@00oed00`00oed3o`000003003o7_l00000
0?lN00P00?lN00?o0000003o7000oa`01`00oa`00ol000000?lI003o6@08003o6@03o`000000oaKo
000000;o00001000odT00ol000000?m2003o@P04003o@P;o000000<00?n8o`000000ohD01P00ohD0
1?l000000?oJ003of_l00005003ogP03o`000000a?l00<Co00D00<Co0_l00004001To`03o`000000
2ol000_o00<000_o00?o000006D0o`1U0?l00P1U0?l01?l00000g@3o0=d0ool000020?l0`@03o`00
0?oooooooooo03Cooooo0014ooooo`03o`00003o0;Oo000000<0iP3o00?o000006X0o`1Z0?l00P1Z
0?l00ol0000000_o000;o`02000;o`05o`000000J_l006[o001Zool000000`00I?l00ol000000;go
002mo`03002mo`03o`000000onL00?oW00<00?oW00?o0000003omP00ooH00_l00006003oW@03o`00
0000ojX00?nZ00?o00000`00oeP00ol000000?mM003oG@07003oG@Oo00001000oah00ol000000?lL
003o7007003o7003o`000000oaT00?lI00<00?lI1ol00008003oB@03o`000000od800?m200?o0000
1000ohP00ol000000?n5003oQ@02003oQ@;o00001000omX01Ol000000?oN003ogP00omko000000L0
0<Co00?o0000001Yo`00JOl00_l000000`00I?oo0000000;o`04000;o`03o`00001U0?l0I@3o0080
I@3o00Go00000=d0o`3M0?oo00000?l0`@02o`0003Oooooo0015ooooo`?o00000P3V0?l00ol00000
JP3o06X0o`0206X0o`03o`0000002ol000_o00<000_o00?o0000001Zool000001@00I?l00ol00000
0;go002mo`03002mo`05o`000000onL00?oW003oiol000001@00ooH2o`0000<00?nM00?o0000003o
ZP00ojX01000ojX4o`0000X00?mM00?o0000003oGP00oeh00`00oehDo`0000D00?mB00?o0000003o
B@00odT01`00odT3o`0000L00?n800?o0000003oQ@00ohD00_l00007003ofP03o`000000omko0000
00L00<Co00?o0000001Yo`00JOl00`00JOl4o`00008000_o00?o000006D0o`1U0?l00P1U0?l01?l0
0000g@3o0=d0o`3M0?l2o`0000030?l0KOoooooooooo03Kooooo0016ooooo`;o00000`3V0?l00ol0
0000JP3o06X0o`0206X0o`04o`0000002ol000_o000;o`Co00001P00I?l00ol000000;go002mo`03
002mo`03o`000000onOo000000P00?of0_l000000`00oigo0000003oZP08003oZP?o00002000oed0
0ol000000?mN003oGP07003oGP03o`000000oeX00?mJ00L00?mJ00?o0000003oDP00oe802000oe80
0ol000000?m9003oB@05003oB@?o00002@00ohP00ol000000?n5o`00000:003ofP03o`000000a?l0
0<Co00D00<Co00?o0000001Yo`00JOl00`00JOl00ol0000000_o000;o`02000;o`Go00000P1U0?l4
o`0000030?l0^03o06gooooo03Sooooo0017ooooo`go000010002ol00ol0000006Co001To`04001T
o`03o`000000_Ol00;go00<00;go0_l0000:003omP;o00002@00ojX00ol000000?nb003o/P03o`00
00@00?mM00?o0000003oGP00oeh02000oeh00ol000000?mJ003oFP07003oFP03o`000000oe800?mB
00P00?mB00?o0000003oB@00odT00P00odT3o`0000800?nC00?o0000003oR000ohP01`00ohP2o`00
00P00?oJ0_l000020038o`03o`000000a?l00<Co00<00<Co00?o0000001Yo`00JOl00`00JOl00ol0
000000_o000;o`03000;o`03o`00001Y0?l0J@3o0080J@3o0ol00000103T0?l0o`2h0?l0^03o06dj
ooooo`00BOooool2o`0000<0g@3o00?o000006D0o`1U0?l00P1U0?l00ol0000000_o000;o`03000;
o`03o`000000I?l006Co00@006Co00Go0000002mo`00_Ol00;goo`000002002`o`;o00002000ooH0
0ol000000?_oo`000002o`0000H00?nZ00?o0000003o/P00ok800`00ok83o`000003003oGOl00000
0?mN00T00?mN00?o0000003oFP00oeX02000oeX00ol000000?mB003oDP07003oDP03o`000000odWo
000000;o00001P00oi<00ol000000?n8003oR004003oR0;o000000<00?oNo`000000omX01@00omX2
o`0000D00<So00Go00000034o`00a?l00<Coo`000005001Yo`03o`0000002ol000_o00<000_o00?o
000006T0o`1Y0?l00`1Y0?l30>@0o`80o`2h??ooool004[ooooo0_l000030=d0o`03o`00001U0?l0
I@3o0080I@3o00?o0000000;o`002ol00`002ol00ol0000006Co001To`04001To`03o`000000_Ooo
000000D00;3o0_l00005003omP03o`000000nol00?_o00<00?_o0_l00003003oZP03o`000000ok80
0?nb00L00?nb2?l00004003oGP03o`000000oeX00?mJ00P00?mJ00?o0000003oDP00oe800P00oe87
o`0000T00?nC00Co0000003oR000ohP00?n80ol00004003ogP03o`000000omX00?oJ00800?oJ00?o
00000038o`00b?l01P00b?l00ol000000<Coo`000005001Yo`03o`0000002ol000_o00<000_o00?o
000006T0o`1Y0?l00P1Y0?l01_l00000i03o0>@0ool00000o`2ho`0003gooooo001;ooooo`;o0000
0`3M0?l00ol00000I@3o06D0o`0206D0o`03o`0000002ol000_o00<000_o00?o0000001To`00I?l0
0`00I?l3o`0000L00;3o00Go0000003omP00ooH00?ofo`000008003ko`Co00002P00ok800ol00000
0?nc003o/`04003o/aCo00001@00oj400ol000000?nC003oT`08003oT`04o`000000ohSo0000o`00
00P00?oN00Co0000003of_l0003o00002P00b?l2o`0000@006Wo00?o0000000;o`002ol00`002ol0
0ol00000J@3o06T0o`0206T0o`06o`00003T0?l0i03oo`00003o0;So0000?_ooool004cooooo0ol0
00020=d0o`;o00000`1U0?l00ol0000000_o000;o`03000;o`05o`000000I?l006Co001Tool00000
0`00GOl00ol000000;3o002`o`05002`o`;o000000<00?ofo`000000nol02P00nol3o`0000P00?nb
00?o0000003o/`00ok<02000ok<00ol000000?n]003o[@08003o[@03o`000000oj400?nQ00L00?nQ
00?o0000003oT`00oi<01`00oi<3o`0000/00?oN00?o00000038o`00b?l01`00b?l2o`0000<006_o
0_l000000`00JOoo0000000;o`04000;o`03o`00001Y0?l0J@3o0080J@3o00Ko00000>@0o`3T0?oo
00000?l0^?l0000oooooo`00COooool00ol00000o`30o`0000030=d0o`05o`00001U0?l0I@3o06D0
ool000001@002ol00ol0000006Coo`000005001Mo`;o00001`00/?l2o`0000/00?_o00?o0000003c
o`00lol00ol00004003o/P03o`000000ok<00?nc00T00?nc00?o0000003o[@00ojd02000ojd00ol0
00000?nQ003oX@08003oX@03o`000000oi<00?nC00800?nC1?l00002003ojP03o`000000omh00?oN
00H00?oN0_l000000`00a?oo00000038o`060038o`;o00001`00Jol2o`0000@000_o00?o000006T0
o`1Y0?l00P1Y0?l01_l00000i03o0>@0ool00000o`2ho`00043ooooo001>ooooo`03o`00003o0<3o
000000<0g@3o00Go000006D0o`1U0?l0I@3oo`000004000;o`?o00001`00GOl00ol000000;3o002`
o`04002`o`03o`000000YOoo000000;o00001`00nol00ol000000??o003co`04003co`?o000000<0
0?nbo`000000ok<02P00ok<00ol000000?n]003o[@08003o[@03o`000000oj400?nQ00P00?nQ00?o
0000003oTol000000_l00007003ojP03o`000000omh00?oN00<00?oN0_l000040034o`03o`000000
b?l00<So00800<So0_l00007001[o`04o`0000002ol000_o000;o`;o000000<000_oo`00001Y0?l0
0`1Y0?l00ol00000i03o0>@0o`03o`00047ooooo001?ooooo`?o00000`3M0?l01_l00000I@3o06D0
o`1U0?oo0000000;o`;o00000`002_l2o`0000H005go0_l00003002`o`03o`000000YOl00:Go00<0
0:Go0ol00004003ko`03o`000000lol00??o00L00??o2?l00005003o/`03o`000000ojd00?n]00P0
0?n]00?o0000003oX@00oj400`00oj47o`0000X00?oZ00Co0000003ogP00omh00?oN0_l000070034
o`04o`000000b?oo0000o`0000L006_o00?o0000000;o`002ol01@002ol3o`000080J@3o00?o0000
0>@0o`3T0?l00_l00013ooooo`00DOooool;o`0000H000[o00?o0000001Mo`00GOl01@00GOl00ol0
00000;3oo`000009002Uo`?o000000<00?_oo`000000lol02@00lol00ol000000?;o003bo`04003b
oaKo00001@00ooX00ol000000?oZ003ojP09003ojP04o`000000omko0000o`0000X00<Co00?o0000
001[o`00Jol01@00Jol2o`0000H000_o00?o000006/0o`1[0?l00P1[0?l6o`0004Cooooo001Boooo
o`Co00000P3A0?l2o`000080G`3o0_l00005000:o`;o00001P00GOl2o`0000`00:Go0ol00009003c
o`03o`000000l_l00?;o00T00?;o00?o0000003io`00nOl02000nOl00ol000000?oj003onP09003o
nP03o`000000onX00?oZ00H00?oZ00Co0000003ojP00on[o00002@00a?l2o`0000<006Wo00Co0000
001[o`00Jol006_o0_l00005000;o`;o00001P1[0?l30>P0o`030?l0]?oooooooooo04Cooooo001D
ooooo`Co00000P3A0?l01?l00000G`3o05l0o`1O0?l2o`0000D000[o0_l00003001Mo`03o`000000
Eol005Oo00?o00002@00YOl00ol0000009ko002No`04o`0000@00??o00?o0000003bo`00l_l02P00
l_l00ol000000?Wo003io`08003io`03o`000000ooX00?oj00T00?oj00Co0000003ojP00onX00?oZ
1Ol00003002jo`03o`000000a?l00<Co00@00<Co0ol00006001Yo`03o`000000Jooo000000H000_o
00?o000006/0o`1[0?l00`1[0?l01Ol00000j03o0>P0o`3X0?l0o`2d04Sooooo001Fooooo`05o`00
003o0<ko0000o`00003A0?l00_l0000305l0o`03o`0000002_l000[o00@000[o00?o0000001Mool0
00001P00Eol3o`0000D00:Go00?o0000002No`00W_l01@00W_l3o`000003003cool000000?;o00X0
0?;o00?o0000003io`00nOl02@00nOl00ol000000?oj003onP07003onP;o000000@00?ojo`000?l0
003o00002@00^_l01?l000000<Co0034o`00a?l2o`0000X006Wo00?o0000000;o`002ol00`002ol2
o`0000@0J`3o0_l000020>P0o`;o0000BOooool005Oooooo0_l00000103o0<ko00000=40o`3A0?l2
o`000080G`3o0_l00004000:o`Co00002000Eol3o`000003002Uool0000009ko00X009ko2?l00005
003bo`03o`000000nOl00?Wo00T00?Wo00?o0000003onP00ooX01ol00003002]o`03o`000000^_l0
0;[o00T00;[o00Co00000034ool0003o00002000JOl3o`0000<000_o00Co0000000;ool0003o0000
101[0?l2o`0000040>P0ool0003o0000o`0004_ooooo001Iooooo`Co00000P3A0?l01?l00000G`3o
05l0o`1O0?l2o`000003000:ool0000000Wo00<000Wo0ol00008001Go`?o00002`00W_l00ol00000
09go002Mo`04002MoaCo00002P00[Ol00ol000000;[o002jo`0:002jo`03o`000000JOl006Wo00H0
06Wo0_l00007000;o`03o`00001[0?l0J`3o00<0J`3o00?o00000>P0o`3X0?l00_l0001=ooooo`00
Foooool01Ol00000o`3>o`000?l00000d@3o00;o00000P1O0?l3o`0000L000Wo0ol00005001Go`03
o`000000Dol005?o00Go00001P00W_l00ol0000009go002Mo`09002Mo`03o`000000Xol00:?o00T0
0:?o00?o0000002]o`00[Ol02`00[Ol00ol000000;[o002jo`03002jo`Co00000`00Hol00ol00000
06Wo001Yo`03001Yo`;o00001`002ol01_l00000J@3o06T0o`1Y0?oo000006/0o`;o000000@0j03o
o`000?l0003o0000C_ooool005cooooo2?l0000305T0o`?o00001`002Ol3o`000003001Gool00000
05?o00L005?o1?l000000`00W_oo0000002Mo`0;002Mo`03o`000000Xol00:?o00T00:?o00?o0000
002]o`00[Ol02`00[Ol00ol000000;[oo`000003o`0000P006?o00?o0000001Yool000000_l00006
000;o`;o00001P1Y0?l5o`00053ooooo001Oooooo`So00000`1I0?l3o`0000L000Wo0ol0000;001C
o`Wo00001@00WOl00ol000000:?o002So`0:002So`03o`000000[Ol00:go00@00:go1Ol000000`00
[Ooo0000o`00000=001So`03o`0000002ol000_o00@000_o0ol0000606T0o`04o`00003T0?l0i03o
o`0005?ooooo001Rooooo`Co000000@0aP3oo`000?l0003o00000`1I0?l2o`0000D000Wo00?o0000
0008o`002?l01Ol00007001Co`03o`000000D_l005;o00D005;o4Ol000000`00Xooo0000o`000005
o`0000H005_o00?o0000001So`00Hol01@00Hol5o`00008000[o00?o0000000;o`002ol00P002ol2
o`0000D0J@3o0_l000020>@0o`03o`00003o0;Sooooo05Cooooo001Uooooo`?o00000P360?l2o`00
00<0F@3o0ol000000`002Ooo00000008o`070008o`Co00000P00Dol00ol0000005;o001Bo`0;001B
o`03o`000000EOl005Go00X005Go00?o0000001Ko`00Fol02`00Fol00ol0000006?o001So`04o`00
00P000[o00Co0000000;ool0003o0000101Y0?l2o`000080i03o0_l0001Hooooo`00J?ooool3o`00
00040<H0ool0003o0000o`000080F@3o1?l0000;0008o`Ko00002P00D_l00ol0000005Go001Eo`0:
001Eo`03o`000000Fol005_o00`005_o0_l0000=000:o`04o`00001Y0?oo000006T0o`?o000000@0
i03oo`000?l0003o0000F_ooool006_ooooo0_l000000`360?oo0000o`000002o`0000<0E@3o1Ol0
00070008o`03o`0000002?l000So008000So1ol00002001Bo`03o`000000EOl005Go00`005Go00Co
0000001Ko`00Fol005_o1ol000030009o`03o`0000002_l000[o00D000[o1Ol0000506@0o`03o`00
003T0?l0i03o00;o000000<0o`2hooooooooool0F_ooool006gooooo0ol000020;l0o`Co0000101E
0?l5o`0000030008ool0000000So00/000So4?l000000`00EOoo0000o`000002o`0000/000Wo00?o
0000000:ool000001?l0000606@0o`;o0000103J0?l00ol0003oooooooooo`1Mooooo`00L?ooool4
o`000080_`3o0ol0000605D0o`Ko00002P002?l00ol0000000Wo0009o`0<0009o`03o`0000002Ol0
00Wo00`000Wo0_l0000606@0o`?o00001@3J0?mSooooo`00M?ooool4o`0000030;l0ool0003o0000
00;o00000P1E0?l00ol00000E@3o05D0o`0305D0o`Oo00000`002?l00ol0000000Wo0009o`0<0009
o`04o`0000002Ol000Wo0009o`Oo00001@1M0?l00ol00000I03o06@0o`04o`000080fP3o00?o0000
ooooooooool0I_ooool007Sooooo1?l000000`2o0?oo0000o`000004o`0000T0E@3o4Ol000000`00
2Ooo0000o`000002o`0000d0G@3o0_l000000`3J0?oo0000ooooo`1/ooooo`00O?ooool6o`000003
0;h0ool0003o000000Ko0000101E0?l00ol00000F03o05P0o`0<05P0o`03o`00001M0?l0G@3o0080
G@3o2?l000000`3>0?l0o`3Aooooo`1booooo`00P_oooolJo`0000<0F03o1?l000000`3o0=7ooooo
ooooo`1jooooo`00Roooool<o`0008Wooooo003oooooob7ooooo003oooooob7ooooo0000\
\>"],
  ImageRangeCache->{{{0, 287}, {186.125, -25}} -> {-0.000675567, 0.0167658, \
0.00332567, 0.00332567}}],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell["\<\
This notebook  contains several miniprograms  for studying the \
differential geometry of surfaces in  Euclidean space. It also loads up the \
programs written by Alfred Gray, including the definitions for dozens of \
surfaces. To study a specific surace, you may either define it directly, or \
find its parametrization from the list of preprogramed curves.\
\>", "Text"],

Cell[CellGroupData[{

Cell["How to define a parametrized surface?", "Subsection"],

Cell["\<\
To use the programs in this notebook, you first need  to define the \
curve you wish to study. The general format is\
\>", "Text"],

Cell[BoxData[
    \(s[u_, v_] := {\ x[u, v]\ \ \ , \ \ y[u, v], \ z[u, v]\ }\)], "Input"],

Cell["The Following cell for, instance,", "Text"],

Cell[BoxData[
    \(s[u_, v_] := {u, v, u\^3 - 3\ u\ v\^2}\)], "Input"],

Cell["\<\
defines the \"monkey saddle\". You may also use any of the \
predefined parametrizations contained in this notebook.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["How to find a parametrization?", "Subsection"],

Cell["\<\
 If you do not know the coordinate functions for the curve which \
you wish to study, but  know the name of the curve, then the chances are that \
the formula for it is already included in the Gray's package CURVES which is \
loaded below. To check that this is the case, just type in the name followed \
by \"?\". For instance:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?monkeysaddle\)\)], "Input"],

Cell[BoxData[
    \("{u,v}->monkeysaddle[u,v] is a parametrization of a monkey saddle. \
{u,v}->monkeysaddle[n][u,v] is a parametrization of a monkey saddle for a \
monkey with n-2 tails.  To plot try monkeysaddle[-1.1,1.1,-1.1,1.1]."\)], \
"Print",
  CellTags->"Info3288980037-1384274"]
}, Open  ]],

Cell["\<\
So the monkey saddle is already in the package. To see the formula \
for it, just type:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(monkeysaddle[u, v]\)], "Input"],

Cell[BoxData[
    \({u, v, u\^3 - 3\ u\ v\^2}\)], "Output"]
}, Open  ]],

Cell["To define our surface, we may then simple set:", "Text"],

Cell[BoxData[
    \(s[u_, v_] := {u, v, u\^3 - 3\ u\ v\^2}\)], "Input"],

Cell["\<\
The complete list of preprogramed surfaces is available in a \
following section. Also, to see the list you may simply type \"curves\" at \
any time.\
\>", "Text"],

Cell[BoxData[
    \(surfs\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples of  parametrizations", "Subsection"],

Cell["Here are some other examples of standard curves:", "Text"],

Cell[BoxData[{
    \(\(s[u_, v_] := \(torus[3, 1]\)[u, v];\)\), "\[IndentingNewLine]", 
    \(u\_i = 0; u\_f = 2  Pi;\), "\[IndentingNewLine]", 
    \(v\_i = 0; v\_f = 2  Pi;\)}], "Input"],

Cell[BoxData[{
    \(\(s[u_, v_] := {u, v, u\ ^2 + v^2};\)\), "\n", 
    \(u\_i = \(-1\); u\_f = 1;\), "\n", 
    \(v\_i = \(-1\); v\_f = 1;\)}], "Input"],

Cell[BoxData[{
    \(\(s[u_, v_] := monkeysaddle[u, v];\)\), "\n", 
    \(u\_i = \(-1\); u\_f = 1;\), "\n", 
    \(v\_i = \(-1\); v\_f = 1;\)}], "Input"],

Cell[BoxData[{
    \(\(s[u_, v_] := 
        monkeysaddle[u\ Cos[v], \ u\ Sin[v]];\)\), "\[IndentingNewLine]", 
    \(u\_i = 0; u\_f = 1;\), "\n", 
    \(v\_i = 0; v\_f = 2  Pi;\)}], "Input"],

Cell[BoxData[{
    \(\(s[u_, v_] := {u, v, Sin[u]\ Sin[v]};\)\), "\n", 
    \(u\_i := \(-Pi\); u\_f := Pi;\), "\n", 
    \(v\_i := \(-Pi\); v\_f := Pi;\)}], "Input"],

Cell[BoxData[{
    \(\(s[u_, v_] := \(ellipsoid[1, 1, 3]\)[u, v];\)\), "\n", 
    \(u\_i := \(-Pi\); u\_f := Pi;\), "\n", 
    \(v\_i := \(-Pi\)/2; v\_f := Pi/2;\)}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["General Initialization", "Subsection"],

Cell[BoxData[
    \(Off[General::spell1]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Off[ParametricPlot::ppcom]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Off[$MaxExtraPrecision::meprec]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(Off[Graphics::gptn]\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Colors`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Shapes`\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(<< Graphics`Arrow`\)], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Gray's Packages", "Subsection"],

Cell[CellGroupData[{

Cell[TextData[{
  "\"PLTPROGS\" (Plotting Enhancements for ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ")"
}], "Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["\<\
(*:Sat May 23 21:47:33 MET DST 1998*)

(*:Title: PLTPROGS.m *)

(*:Author: Alfred Gray *)

(* Copyright 1994-1998 by Alfred Gray *)

(*:Package Version: 1.0 *)

(*:Mathematica Versions: 2.2, 3.0 *)

(*:Summary: 
This package consists of several plotting enhancements 
useful for plotting curves and surfaces.
*)

(*:Keywords:
borderedpolygon, centerlines, checkerboard, dip, elrot, 
filledcurve, graphics2dtosurfrev, lathe, linetolines, 
nomesh, orth4d, paramcurveplot1, paramcurveplot2, 
plotpatch2d, polygonholes, primitiveplot3d, selectcolgraphics3d,
 selectgraphics3d, ShowInNotebook, surfacecurveplot, stereo4d, 
 wireframe, WriteAcroLines, WriteAcroPoints, Write2COLMESH, 
 Write3DCMESH, Write3DCNMESH, Write3DMESH
*)

BeginPackage[\"PLTPROGS`\"]

     pltprogs:=Print[Select[Names[\"PLTPROGS`*\"],#!=\"pltprogs\"&]]

(* Miscellaneous Plotting Programs *)

     barycenter::usage=\"barycenter[Polygon[{pt1,...,ptn}]] subdivides a \
polygon using its barycenter.\"

     borderedpolygon::usage=\"borderedpolygon[intsty,borsty,versty,pts] \
creates from the list pts a polygonal region whose vertices are the elements \
of pts. The directives constituting intsty are applied to the interior, the \
directives constituting borsty are applied to the boundary, and the \
directives constituting versty are applied to the vertices.\"

     centerlines::usage=\"centerlines[...] has the same syntax as \
ParametricPlot3D[...]. It plots a parametric patch in R^3, but adds lines \
connecting the center of each quadrilateral to its vertices. \
centerlines[graphic] adds lines connecting the center of each quadrilateral \
to its vertices.\"

     checkerboard::usage=\"checkerboard[...] has the same syntax as \
ParametricPlot3D[...]. It plots a parametric patch in R^3 in a checker board \
fashion.  checkerboard[graphic] gives a checkerboard pattern to a graphic.\"

    dip::usage=\"DisplayFunction->dip[ins] inserts a Graphics3D primitive at \
the beginning of a Graphics3D list when the list is displayed. For example, \
DisplayFunction->dip[EdgeForm[]] displays polygons with no edges.\"

    elrot::usage=\"elrot[p,q][theta][aa_List] is the elementary rotation by \
an angle theta of pth and qth elements of the list aa.\"

    filledcurve::usage=\"filledcurve parametrically plots a plane curve and \
fills it in. It has the same syntax as ParametricPlot.  filledcurve[graphic] \
fills in a graphic.\"

    graphics2dtosurfrev::usage=\"graphics2dtosurfrev[r,n][list] constructs a \
surface of revolution of radius r from a Graphics list of lines. Each circle \
of latitude is approximated by a regular polygon with n vertices.\"

    lathe::usage=\"lathe[dots] creates a surface of revolution with no edges \
from a list of points in the plane.\"

    linetolines::usage=\"linetolines[Line[{pt1,...,ptn}]] converts a broken \
line segment Line[{pt1,...,ptn}] into a list of line segments connecting \
consecutive pairs of the points pt1,...,ptn.\"

    nomesh::usage=\"nomesh[graphic] converts a graphic to a graphic with no \
edges.\"

    orth4d::usage=\"orth4d[surf,{u,umin,umax},{v,vmin,vmax},opts] uses \
GraphicsArray to plot a surface in R^4 via the four orthogonal projections \
from R^4 to R^3.\"

    paramcurveplot1::usage=\"paramcurveplot1 has the same syntax as \
ParametricPlot3D, except that a PlotPoints specification is obligatory. It \
plots the parameter lines u->x[u,v0] of a parametric patch surface:U->R^3.\"

    paramcurveplot2::usage=\"paramcurveplot2 has the same syntax as
ParametricPlot3D, except that a PlotPoints specification is obligatory. It \
plots the parameter lines v->x[u0,v] of a parametric patch surface:U->R^3.\"

    plotpatch2d::usage=\"plotpatch2d has the same syntax as ParametricPlot. \
It plots the images of horizontal and vertical lines under the function \
f:U->R^2. plotpatch2d has the same functionality as Maeder's CartesianMap and \
PolarMap, but draws curved instead of straight lines.\"

    polygonholes::usage=\"polygonholes[fac][...] has the same syntax as \
ParametricPlot3D[...]. It plots a parametric patch in R^3 with holes in each \
polygon, where fac is the ratio of the size of each hole to that of the \
original polygon containing it.  polygonholes[fac][graphic]  puts a hole in \
each polygon, where fac is the ratio of the size of each hole to that of the \
original polygon containing it.\"

    selectgraphics3d::usage=\"selectgraphics3d[graphics3dobj,bound,opts] \
selects from a list of polygons those whose vertices have their coordinates \
bounded by bound, and then displays the results.\"

    selectcolgraphics3d::usage=\"selectcolgraphics3d[graphics3dobj,bound,opts]\
 selects from a list of colored polygons those whose vertices have their \
coordinates bounded by bound, and then displays the results.\"

    stereo4d::usage=\"stereo4d[{a,b,c,d},surf,{u,umin,umax},{v,vmin,vmax},\
opts] uses GraphicsArray to plot a surface in R^4 via the four stereographic \
projections from R^4 to R^3 with respect to the point {a,b,c,d} in R^4.\"

    ShowInNotebook::usage=\"ShowInNotebook[graphics,nbopts] displays a \
graphic in a separate notebook.\"

    surfacecurveplot::usage=\"surfacecurveplot[surface,{u,u0,u1},{v,v0,v1}, \
PlotLines->{ulines,vlines},PlotPoints->{upoints,vpoints},opts] plots both the \
u- and v-parameter curves of a patch x:U->R^3. The number of curves is \
specified with PlotLines, and the resolution of the lines is specified with \
PlotPoints.\"

    wireframe::usage=\"wireframe[...] has the same syntax as \
ParametricPlot3D[...]. It plots a wireframe of a parametric patch in R^3.  \
wirframe[graphic] converts a solid graphic into a wireframe graphic.\"

(* Mathematica to Acrospin Programs *)

primitiveplot3d::usage=\"primitiveplot3d[{fx,fy,fz},{t,tmin,tmax}]
produces a list of points of a space curve parametrized by a variable
t which runs from tmin to tmax. \
primitiveplot3d[{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}] produces a list of \
points by polygons of a surface parametrized by
t and u.\"

WriteAcroLines::usage=\"WriteAcroLines[{color},file,{fx,fy,fz},
{t,tmin,tmax}] outputs to a file in acrospin line format the
parametric plot of a space curve. \
WriteAcroLines[{color1,color2},file,{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}] \
outputs to a file in acrospin line format the parametric plot of a surface.\"

WriteAcroPoints::usage=\"WriteAcroPoints[{color},file,{fx,fy,fz},
{t,tmin,tmax}] outputs to a file in acrospin point format the
parametric plot of a space curve.
WriteAcroPoints[{color},file,{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}]
outputs to a file in acrospin point format the parametric plot of a \
surface.\"

(* Mathematica to Geomview Programs *)

Write3DMESH::usage=\"Write3DMESH[file,expression,{u,umin,umax},{v,vmin,vmax},
PlotPoints->{udiv,vdiv},opts] outputs to a file in mesh format the
parametric plot of a surface.\"

Write3DCMESH::usage=\"Write3DCMESH[file,{expression,color},
{u,umin,umax},{v,vmin,vmax},PlotPoints->{udiv,vdiv},opts] outputs to a file
in mesh format the parametric plot of expression colored by color.\"

Write3DCNMESH::usage=\"Write3DCNMESH[file,{expression,unitn,color},
{u,umin,umax},{v,vmin,vmax},
PlotPoints->{udiv,vdiv},opts] outputs to a file in mesh format the
parametric plot of expression colored by color with normal information unitn.\
\"

Write2COLMESH::usage=\"Write2COLMESH[{color1,color2},file,expression,
{u,umin,umax},{v,vmin,vmax},
PlotPoints->{udiv,vdiv},opts] outputs to a file in mesh format the parametric \
plot of a surface with one side color1 and the other color2.\"

Begin[\"`Private`\"]

(* Miscellaneous Plotting Programs *)

  barycenter[Polygon[pts_]]:=
        Module[{ptstmp},
        ptstm=Append[pts,First[pts]];
\tTable[Polygon[{ptstm[[i]],ptstm[[i + 1]],
        Plus@@pts/Length[ptstm]}],{i,Length[ptstm] - 1}]]

  borderedpolygon[intsty_,borsty_,versty_,pts_]:=
        {Flatten[{intsty,Polygon[pts]}],
         Flatten[{borsty,Line[Append[pts,First[pts]]]}],
         Flatten[{versty,Point/@pts}]}

    centerlines[surface_,{u_,u0_,u1_},{v_,v0_,v1_},opts___]:=
        Module[{plottmp,grtmp},
                plottmp = ParametricPlot3D[
                surface//Evaluate,{u,u0,u1},{v,v0,v1},
                DisplayFunction->Identity,opts];
                grtmp = plottmp /.
     (Polygon[pts_]:>
     {Polygon[Append[pts[[{1,2}]],Plus@@pts/4]],
      Polygon[Append[pts[[{2,3}]],Plus@@pts/4]],
      Polygon[Append[pts[[{3,4}]],Plus@@pts/4]],
      Polygon[Append[pts[[{4,1}]],Plus@@pts/4]]});
        Show[grtmp,DisplayFunction->$DisplayFunction]]

    centerlines[graphic_]:=Show[graphic /. (Polygon[pts_]:>
     {Polygon[Append[pts[[{1,2}]],Plus@@pts/4]],
      Polygon[Append[pts[[{2,3}]],Plus@@pts/4]],
      Polygon[Append[pts[[{3,4}]],Plus@@pts/4]],
      Polygon[Append[pts[[{4,1}]],Plus@@pts/4]]})]

    checkerboard[surface_,{u_,u0_,u1_},{v_,v0_,v1_},opts___]:=
        Module[{plottmp,grtmp},
                plottmp = ParametricPlot3D[
                surface,{u,u0,u1},{v,v0,v1},
                DisplayFunction->Identity,opts];
                grtmp = plottmp /.(Polygon[pts_]:> 
                Polygon[(pts + RotateRight[pts])/2]);
        Show[grtmp,DisplayFunction->$DisplayFunction]]

    checkerboard[graphic_]:=Show[graphic /. (Polygon[pts_]:>
        Polygon[(pts + RotateRight[pts])/2])]

    dip[ins_][g_]:= $DisplayFunction[Insert[g,ins,{1,1}]]

    elrot[p_,q_][theta_][aa_List]:=ReplacePart[ReplacePart[
        aa,aa[[p]]*Cos[theta] + aa[[q]]*Sin[theta],p],
        -aa[[p]]*Sin[theta] + aa[[q]]*Cos[theta],q]

    filledcurve[curve_,{u_,u0_,u1_},opts___]:=
        Module[{plottmp,grtmp},
            plottmp = ParametricPlot[
            curve//Evaluate,{u,u0,u1},AspectRatio->Automatic,
            DisplayFunction->Identity,opts];
            grtmp = plottmp /. (Line[pts_]:> Polygon[pts]);
        Show[grtmp,DisplayFunction->$DisplayFunction]]
    
    filledcurve[graphic_]:=Show[graphic /. (Line[pts_]:> Polygon[pts])]

    graphics2dtosurfrev[r_,n_][Line[{{a_,b_},{c_,d_}}]]:=
        Table[Polygon[{
        {r*a*Cos[2*Pi*(k - 1)/n],r*a*Sin[2*Pi*(k - 1)/n],b},
        {r*a*Cos[2*Pi*k/n],r*a*Sin[2*Pi*k/n],b},
        {r*c*Cos[2*Pi*k/n],r*c*Sin[2*Pi*k/n],d},
        {r*c*Cos[2*Pi*(k - 1)/n],
                r*c*Sin[2*Pi*(k - 1)/n],d}}],{k,n}]

   lathe[dots_]:=Show[Graphics3D[
      Map[graphics2dtosurfrev[0.5,60],
      linetolines[Line[dots]]]],Boxed->False,
      DisplayFunction->dip[EdgeForm[]]]

    linetolines[Line[pts_]]:= Table[Line[{pts[[i]],
             pts[[i + 1]]}],{i,Length[pts] - 1}]

   nomesh[graphics_]:=
      Show[graphics,DisplayFunction->dip[EdgeForm[]]]

    orth4d[surf_,{u_,umin_,umax_},{v_,vmin_,vmax_},opts___]:=
        Module[{g1,g2,g3,g4},
        g1=ParametricPlot3D[Evaluate[
                Drop[surf,{1}]],{u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g2=ParametricPlot3D[Evaluate[
                Drop[surf,{2}]],{u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g3=ParametricPlot3D[Evaluate[
                Drop[surf,{3}]],{u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g4=ParametricPlot3D[Evaluate[
                Drop[surf,{4}]],{u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        Show[GraphicsArray[{{g1,g2},{g3,g4}}],
                GraphicsSpacing->{0.2,0},
                DisplayFunction->$DisplayFunction]]

    paramcurveplot1[surface_,{u_,u0_,u1_},{v_,v0_,v1_},
        PlotPoints->{upoints_,vpoints_},opts___]:=
        ParametricPlot3D[Table[
        surface,{v,v0,v1,(v1-v0)/(vpoints - 1)}]//Evaluate,
        {u,u0,u1},PlotPoints->upoints,opts]

    paramcurveplot2[surface_,{u_,u0_,u1_},{v_,v0_,v1_},
        PlotPoints->{upoints_,vpoints_},opts___]:=
        ParametricPlot3D[Table[
        surface,{u,u0,u1,(u1-u0)/(upoints - 1)}]//Evaluate,
        {v,v0,v1},PlotPoints->vpoints,opts]

    plotpatch2d[expr_,{x_,xmin_,xmax_},{y_,ymin_,ymax_},
        PlotPoints->{xpoints_,ypoints_},opts___]:=
        Show[ParametricPlot[Evaluate[
        Table[ComplexExpand[
        {Re[expr],Im[expr]}],
        {y,ymin,ymax,(ymax - ymin)/(ypoints - 1)}]],
        {x,xmin,xmax},PlotPoints->xpoints,
        DisplayFunction->Identity],
        ParametricPlot[Evaluate[
        Table[ComplexExpand[
        {Re[expr],Im[expr]}],
        {x,xmin,xmax,(xmax - xmin)/(xpoints -1)}]],
        {y,ymin,ymax},PlotPoints->ypoints,
        DisplayFunction->Identity],
        AspectRatio->Automatic,
        DisplayFunction->$DisplayFunction,opts]

    polygonholes[fac_][surface_,{u_,u0_,u1_},{v_,v0_,v1_},opts___]:=
        Module[{plottmp,grtmp},
                plottmp = ParametricPlot3D[
                surface,{u,u0,u1},{v,v0,v1},
                DisplayFunction->Identity,opts];
                grtmp = plottmp /.(Polygon[pts_]:> 
                (cntr=(Plus@@pts)/Length[pts];
                sp=(fac*(# - cntr) + cntr)&/@pts;
                Polygon/@Transpose[{pts,RotateLeft[pts],
                RotateLeft[sp],sp}]));
        Show[grtmp,DisplayFunction->$DisplayFunction]]

    polygonholes[fac_][graphic_]:=Show[graphic /. (Polygon[pts_]:>
        (cntr=(Plus@@pts)/Length[pts];
                sp=(fac*(# - cntr) + cntr)&/@pts;
                Polygon/@Transpose[{pts,RotateLeft[pts],
                RotateLeft[sp],sp}]))]

    selectgraphics3d[graphics3dobj_,bound_,opts___]:=
        Show[Graphics3D[Select[graphics3dobj,
        (Abs[#[[1,1,1]]]<bound && Abs[#[[1,1,2]]]<bound &&
         Abs[#[[1,1,3]]]<bound && Abs[#[[1,2,1]]]<bound &&
         Abs[#[[1,2,2]]]<bound && Abs[#[[1,2,3]]]<bound &&
         Abs[#[[1,3,1]]]<bound && Abs[#[[1,3,2]]]<bound &&
         Abs[#[[1,3,3]]]<bound && Abs[#[[1,4,1]]]<bound &&
         Abs[#[[1,4,2]]]<bound && Abs[#[[1,4,2]]]<bound
         )&]],opts]

    selectcolgraphics3d[graphics3dobj_,bound_,opts___]:=
        Show[Graphics3D[Select[graphics3dobj,
        (Abs[#[[2,1,1,1]]]<bound && Abs[#[[2,1,1,2]]]<bound &&
        Abs[#[[2,1,1,3]]]<bound && Abs[#[[2,1,2,1]]]<bound &&
        Abs[#[[2,1,2,2]]]<bound && Abs[#[[2,1,2,3]]]<bound &&
        Abs[#[[2,1,3,1]]]<bound && Abs[#[[2,1,3,2]]]<bound &&
        Abs[#[[2,1,3,3]]]<bound && Abs[#[[2,1,4,1]]]<bound &&
        Abs[#[[2,1,4,2]]]<bound && Abs[#[[2,1,4,2]]]<bound
         )&]],opts]

    stereo4d[{a_,b_,c_,d_},surf_,
        {u_,umin_,umax_},{v_,vmin_,vmax_},opts___]:=
        Module[{g1,g2,g3,g4},
        g1=ParametricPlot3D[Evaluate[
                Drop[surf,{1}]/(a-surf[[1]])],
                {u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g2=ParametricPlot3D[Evaluate[
                Drop[surf,{2}]/(b-surf[[2]])],
                {u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g3=ParametricPlot3D[Evaluate[
                Drop[surf,{3}]/(c-surf[[3]])],
                {u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        g4=ParametricPlot3D[Evaluate[
                Drop[surf,{4}]/(d-surf[[4]])],
                {u,umin,umax},{v,vmin,vmax},
                DisplayFunction->Identity,opts];
        Show[GraphicsArray[{{g1,g2},{g3,g4}}],
                GraphicsSpacing->{0.2,0},
                DisplayFunction->$DisplayFunction]]

    ShowInNotebook[gr_,nbopts___]:=
    Module[{nb},
        nb = NotebookPut[Notebook[{
            Cell[GraphicsData[\"PostScript\",
                              DisplayString[gr]],
                 \"Graphics\",
                 ImageSize->{350,350},
                 ImageMargins -> {{0,0},{0,0}},
                 CellMargins -> {{0,0},{0,0}}]},
            nbopts,WindowSize->Fit,Visible -> False,
            ShowCellBracket -> False,WindowElements->{},
            WindowFrameElements->\"CloseBox\"]];
        SetOptions[nb,WindowSize->Fit];
        SetOptions[nb,Visible->True];
        nb]

    surfacecurveplot[surface_,{u_,u0_,u1_},{v_,v0_,v1_},
        PlotLines->{ulines_,vlines_},
        PlotPoints->{upoints_,vpoints_},opts___]:=
            Show[paramcurveplot1[surface,{u,u0,u1},{v,v0,v1},
                PlotPoints->{upoints,ulines},
                DisplayFunction->Identity,opts],
                paramcurveplot2[surface,{u,u0,u1},{v,v0,v1},
                PlotPoints->{vlines,vpoints},
                DisplayFunction->Identity,opts],
                DisplayFunction->$DisplayFunction]

    wireframe[surface_,{u_,u0_,u1_},{v_,v0_,v1_},opts___]:=
        Module[{plottmp,grtmp},
                plottmp = ParametricPlot3D[
                surface,{u,u0,u1},{v,v0,v1},
                DisplayFunction->Identity,opts];
                grtmp = plottmp /.(Polygon[pts_]:> 
                Line[Append[pts,First[pts]]]);
        Show[grtmp,DisplayFunction->$DisplayFunction]]

    wireframe[graphic_]:=Show[graphic /. (Polygon[pts_]:> 
                Line[Append[pts,First[pts]]])]

(* Mathematica to Acrospin Programs *)

blue             = 1
green            = 2
cyan             = 3
red              = 4
magenta          = 5
brown            = 6
white            = 7
darkgray         = 8
lightblue        = 9
lightgreen       = 10
lightcyan        = 11
lightred         = 12
lightmagenta     = 13
yellow           = 14
intensifiedwhite = 15

primitiveplot3d[exp_,{t_,tmin_,tmax_},opts___]:=
First[ParametricPlot3D[exp,
{t,tmin,tmax},opts,
DisplayFunction->Identity]] /.
(Line[pts_] :> pts)

primitiveplot3d[exp_,{u_,umin_,umax_},{v_,vmin_,vmax_},opts___]:=
First[ParametricPlot3D[exp,
{u,umin,umax},{v,vmin,vmax},opts,
DisplayFunction->Identity]] /.
(Polygon[pts_] :> pts)

WriteAcroLines[{color_},file_String,curve_,
{t_,tmin_,tmax_},opts___]:=
Module[{tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,tmp8},
OpenWrite[file];
WriteString[file,\"Set Color\"];
WriteString[file,color];
WriteString[file,\"\\n\"];
WriteString[file,\"EndPointList name X Y Z\\n\"];
tmp1=primitiveplot3d[curve//Evaluate,
{t,tmin,tmax},opts];
tmp2=Flatten[tmp1,1];
tmp3=Chop[tmp2,10^-3];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
tmp5=Table[
{StringForm[\"VERTEX``\",j],tmp4[[j]]},
{j,Length[tmp3]}];
tmp6=Map[Flatten[#,1]&,tmp5,{1}];
Scan[
(WriteString[file,First[#]];
Scan[WriteString[file,\"   \",#]&,Rest[#]];
WriteString[file,\"\\n\"])&,
tmp6];
WriteString[file,\"\\nLineList from to\\n\"];
tmp7=Table[
StringForm[\"VERTEX`` VERTEX``\\n\",j,j+1],
{j,Length[tmp3]-1}];
Scan[WriteString[file,#,\"\\n\"]&,tmp7];
Close[file]]

WriteAcroLines[{color1_:12,color2_:14},
file_String,surface_,
{u_,umin_,umax_},{v_,vmin_,vmax_},opts___]:=
Module[{tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,
tmp7,tmp8,tmp9,tmp10,tmp11,tmp12},
OpenWrite[file];
WriteString[file,\"EndPointList name X Y Z\\n\\n\"];
tmp1=primitiveplot3d[surface//Evaluate,
{u,umin,umax},{v,vmin,vmax},opts];
tmp2=Chop[tmp1,10^-3];
tmp3=Map[PaddedForm[#,{4,4}]&,tmp2,{3}];
tmp4=Table[
{StringForm[\"POLY``VERTEX``\",j,k],tmp3[[j,k]]},
{j,Length[tmp3]},{k,4}];
tmp5=Map[Flatten[#,1]&,tmp4,{2}];
tmp6=Flatten[tmp5,1];
Scan[WriteString[file,\"   \",#]&,Rest[#]];
Scan[
(WriteString[file,First[#]];
Scan[WriteString[file,\"   \",#]&,Rest[#]];
WriteString[file,\"\\n\"])&,
tmp6];
WriteString[file,\"\\nLineList from to Color Layer\\n\\n\"];
tmp7=Table[
StringForm[\"POLY``VERTEX`` POLY``VERTEX`` `` ``\\n\",
j,1,j,2,color1,1],{j,Length[tmp3]}];
tmp8=Table[
StringForm[\"POLY``VERTEX`` POLY``VERTEX`` `` ``\\n\",
j,4,j,3,color1,1],{j,Length[tmp3]}];
tmp9=Join[tmp7,tmp8];
Scan[WriteString[file,#,\"\\n\"]&,tmp9];
tmp10=Table[
StringForm[\"POLY``VERTEX`` POLY``VERTEX`` `` ``\\n\",
j,1,j,4,color2,2],{j,Length[tmp3]}];
tmp11=Table[
StringForm[\"POLY``VERTEX`` POLY``VERTEX`` `` ``\\n\",
j,3,j,2,color2,2],{j,Length[tmp3]}];
tmp12=Join[tmp10,tmp11];
Scan[WriteString[file,#,\"\\n\"]&,tmp12];
Close[file]]

WriteAcroPoints[{color_},file_String,curve_,
{t_,tmin_,tmax_},opts___]:=
Module[{tmp1,tmp2,tmp3,tmp4},
OpenWrite[file];
WriteString[file,\"Set Color\"];
WriteString[file,color];
WriteString[file,\"\\n\"];
WriteString[file,\"PointList X Y Z\\n\"];
tmp1=primitiveplot3d[curve//Evaluate,
{t,tmin,tmax},opts];
tmp2=Union[Flatten[tmp1,1]];
tmp3=Chop[tmp2,10^-3];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
Scan[
(WriteString[file,First[#]];
Scan[WriteString[file,\"   \",#]&,Rest[#]];
WriteString[file,\"\\n\"])&,
tmp4];
Close[file]]

WriteAcroPoints[{color_},file_String,surface_,
{u_,umin_,umax_},{v_,vmin_,vmax_},opts___]:=
Module[{tmp1,tmp2,tmp3,tmp4},
OpenWrite[file];
WriteString[file,\"Set Color\"];
WriteString[file,color];
WriteString[file,\"\\n\"];
WriteString[file,\"PointList X Y Z\\n\"];
tmp1=primitiveplot3d[surface//Evaluate,
{u,umin,umax},{v,vmin,vmax},opts];
tmp2=Union[Flatten[tmp1,1]];
tmp3=Chop[tmp2,10^-3];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
Scan[
(WriteString[file,First[#]];
Scan[WriteString[file,\"   \",#]&,Rest[#]];
WriteString[file,\"\\n\"])&,
tmp4];
Close[file]]

(* Mathematica to Geomview Programs *)

Write3DMESH[file_String,expression_,
{u_,umin_,umax_},{v_,vmin_,vmax_},
PlotPoints->{udiv_,vdiv_},otmp___]:=
Module[{tmp1,tmp2,tmp3,tmp4},
OpenWrite[file];
WriteString[file,\"MESH\\n\"];
WriteString[file,ToString[vdiv+1]];
WriteString[file,\" \"];
WriteString[file,ToString[udiv+1]];
WriteString[file,\"\\n\"];
tmp1=N[Table[expression,
    {u,umin,umax,(umax-umin)/udiv},
    {v,vmin,vmax,(vmax-vmin)/vdiv}]];
tmp2=Flatten[tmp1,1];
tmp3=Chop[tmp2,10^-4];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
Scan[
   (WriteString[file,First[#]];
    Scan[WriteString[file,\"   \",#]&,Rest[#]];
    WriteString[file,\"\\n\"])&,tmp4];
Close[file]]

Write3DCMESH[file_String,{expression_,color_},
{u_,umin_,umax_},{v_,vmin_,vmax_},
PlotPoints->{udiv_,vdiv_},otmp___]:=
Module[{tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7},
OpenWrite[file];
WriteString[file,\"CMESH\\n\"];
WriteString[file,ToString[vdiv+1]];
WriteString[file,\" \"];
WriteString[file,ToString[udiv+1]];
WriteString[file,\"\\n\"];
tmp1=N[Table[{expression,HSBColor[color,1,1]},
    {u,umin,umax,(umax-umin)/udiv},
    {v,vmin,vmax,(vmax-vmin)/vdiv}]];
tmp2=Apply[List,tmp1,{3}];
tmp3=Map[Flatten[#]&,tmp2,{2}];
tmp4=Flatten[tmp3,1];
tmp5=Map[Append[#,1]&,tmp4];
tmp6=Chop[tmp5,10^-4];
tmp7=Map[PaddedForm[#,{4,4}]&,tmp6,{2}];
Scan[
   (WriteString[file,First[#]];
    Scan[WriteString[file,\"   \",#]&,Rest[#]];
    WriteString[file,\"\\n\"])&,tmp7];
Close[file]]



Write3DCNMESH[file_String,{expression_,unitn_,color_},
{u_,umin_,umax_},{v_,vmin_,vmax_},
PlotPoints->{udiv_,vdiv_},otmp___]:=
Module[{tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7},
OpenWrite[file];
WriteString[file,\"CNMESH\\n\"];
WriteString[file,ToString[vdiv+1]];
WriteString[file,\" \"];
WriteString[file,ToString[udiv+1]];
WriteString[file,\"\\n\"];
tmp1=N[Table[{expression,unitn,HSBColor[color,1,1]},
    {u,umin,umax,(umax-umin)/udiv},
    {v,vmin,vmax,(vmax-vmin)/vdiv}]];
tmp2=Apply[List,tmp1,{3}];
tmp3=Map[Flatten[#]&,tmp2,{2}];
tmp4=Flatten[tmp3,1];
tmp5=Map[Append[#,1]&,tmp4];
tmp6=Chop[tmp5,10^-4];
tmp7=Map[PaddedForm[#,{4,4}]&,tmp6,{2}];
Scan[
   (WriteString[file,First[#]];
    Scan[WriteString[file,\"   \",#]&,Rest[#]];
    WriteString[file,\"\\n\"])&,tmp7];
Close[file]]

Write2COLMESH[file_String,expression_,
{u_,umin_,umax_},{v_,vmin_,vmax_},
PlotPoints->{udiv_,vdiv_},otmp___]:=
Module[{tmp1,tmp2,tmp3,tmp4},
OpenWrite[file];
WriteString[file,\"appearance {\\n\"];
WriteString[file,\"material {\\n\"];
WriteString[file,\"emission 1 1 0\\n\"];
WriteString[file,\"diffuse  1 0 0}}\\n\"];
WriteString[file,\"MESH\\n\"];
WriteString[file,ToString[vdiv+1]];
WriteString[file,\" \"];
WriteString[file,ToString[udiv+1]];
WriteString[file,\"\\n\"];
tmp1=N[Table[expression,
    {u,umin,umax,(umax-umin)/udiv},
    {v,vmin,vmax,(vmax-vmin)/vdiv}]];
tmp2=Flatten[tmp1,1];
tmp3=Chop[tmp2,10^-4];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
Scan[
   (WriteString[file,First[#]];
    Scan[WriteString[file,\"   \",#]&,Rest[#]];
    WriteString[file,\"\\n\"])&,tmp4];
Close[file]]

Write2COLMESH[{color1_,color2_},file_String,expression_,
{u_,umin_,umax_},{v_,vmin_,vmax_},
PlotPoints->{udiv_,vdiv_},otmp___]:=
Module[{cc1,cc2,cc3,dd1,dd2,dd3,df,em,tmp1,tmp2,tmp3,tmp4},
OpenWrite[file];
WriteString[file,\"appearance {\\n\"];
WriteString[file,\"material {\\n\"];
{cc1,cc2,cc3}=List@@color1;
em=StringForm[\"emission `` `` ``\\n\",cc1,cc2,cc3];
WriteString[file,em];
{dd1,dd2,dd3}=List@@color2;
df=StringForm[\"diffuse `` `` ``}}\\n\",dd1,dd2,dd3];
WriteString[file,df];
WriteString[file,\"MESH\\n\"];
WriteString[file,ToString[vdiv+1]];
WriteString[file,\" \"];
WriteString[file,ToString[udiv+1]];
WriteString[file,\"\\n\"];
tmp1=N[Table[expression,
    {u,umin,umax,(umax-umin)/udiv},
    {v,vmin,vmax,(vmax-vmin)/vdiv}]];
tmp2=Flatten[tmp1,1];
tmp3=Chop[tmp2,10^-4];
tmp4=Map[PaddedForm[#,{4,4}]&,tmp3,{2}];
Scan[
   (WriteString[file,First[#]];
    Scan[WriteString[file,\"   \",#]&,Rest[#]];
    WriteString[file,\"\\n\"])&,tmp4];
Close[file]]

End[]

EndPackage[]

\
\>", "Input",
  PageWidth->Infinity,
  InitializationCell->True,
  ShowSpecialCharacters->False],

Cell[BoxData[
    \("PLTPROGS`"\)], "Output"],

Cell[BoxData[
    \("barycenter[Polygon[{pt1,...,ptn}]] subdivides a polygon using its \
barycenter."\)], "Output"],

Cell[BoxData[
    \("borderedpolygon[intsty,borsty,versty,pts] creates from the list pts a \
polygonal region whose vertices are the elements of pts. The directives \
constituting intsty are applied to the interior, the directives constituting \
borsty are applied to the boundary, and the directives constituting versty \
are applied to the vertices."\)], "Output"],

Cell[BoxData[
    \("centerlines[...] has the same syntax as ParametricPlot3D[...]. It \
plots a parametric patch in R^3, but adds lines connecting the center of each \
quadrilateral to its vertices. centerlines[graphic] adds lines connecting the \
center of each quadrilateral to its vertices."\)], "Output"],

Cell[BoxData[
    \("checkerboard[...] has the same syntax as ParametricPlot3D[...]. It \
plots a parametric patch in R^3 in a checker board fashion.  \
checkerboard[graphic] gives a checkerboard pattern to a graphic."\)], "Output"],

Cell[BoxData[
    \("DisplayFunction->dip[ins] inserts a Graphics3D primitive at the \
beginning of a Graphics3D list when the list is displayed. For example, \
DisplayFunction->dip[EdgeForm[]] displays polygons with no edges."\)], \
"Output"],

Cell[BoxData[
    \("elrot[p,q][theta][aa_List] is the elementary rotation by an angle \
theta of pth and qth elements of the list aa."\)], "Output"],

Cell[BoxData[
    \("filledcurve parametrically plots a plane curve and fills it in. It has \
the same syntax as ParametricPlot.  filledcurve[graphic] fills in a graphic."\
\)], "Output"],

Cell[BoxData[
    \("graphics2dtosurfrev[r,n][list] constructs a surface of revolution of \
radius r from a Graphics list of lines. Each circle of latitude is \
approximated by a regular polygon with n vertices."\)], "Output"],

Cell[BoxData[
    \("lathe[dots] creates a surface of revolution with no edges from a list \
of points in the plane."\)], "Output"],

Cell[BoxData[
    \("linetolines[Line[{pt1,...,ptn}]] converts a broken line segment \
Line[{pt1,...,ptn}] into a list of line segments connecting consecutive pairs \
of the points pt1,...,ptn."\)], "Output"],

Cell[BoxData[
    \("nomesh[graphic] converts a graphic to a graphic with no edges."\)], \
"Output"],

Cell[BoxData[
    \("orth4d[surf,{u,umin,umax},{v,vmin,vmax},opts] uses GraphicsArray to \
plot a surface in R^4 via the four orthogonal projections from R^4 to \
R^3."\)], "Output"],

Cell[BoxData[
    \("paramcurveplot1 has the same syntax as ParametricPlot3D, except that a \
PlotPoints specification is obligatory. It plots the parameter lines \
u->x[u,v0] of a parametric patch surface:U->R^3."\)], "Output"],

Cell[BoxData[
    \("paramcurveplot2 has the same syntax as ParametricPlot3D, except that a \
PlotPoints specification is obligatory. It plots the parameter lines \
v->x[u0,v] of a parametric patch surface:U->R^3."\)], "Output"],

Cell[BoxData[
    \("plotpatch2d has the same syntax as ParametricPlot. It plots the images \
of horizontal and vertical lines under the function f:U->R^2. plotpatch2d has \
the same functionality as Maeder's CartesianMap and PolarMap, but draws \
curved instead of straight lines."\)], "Output"],

Cell[BoxData[
    \("polygonholes[fac][...] has the same syntax as ParametricPlot3D[...]. \
It plots a parametric patch in R^3 with holes in each polygon, where fac is \
the ratio of the size of each hole to that of the original polygon containing \
it.  polygonholes[fac][graphic]  puts a hole in each polygon, where fac is \
the ratio of the size of each hole to that of the original polygon containing \
it."\)], "Output"],

Cell[BoxData[
    \("selectgraphics3d[graphics3dobj,bound,opts] selects from a list of \
polygons those whose vertices have their coordinates bounded by bound, and \
then displays the results."\)], "Output"],

Cell[BoxData[
    \("selectcolgraphics3d[graphics3dobj,bound,opts] selects from a list of \
colored polygons those whose vertices have their coordinates bounded by \
bound, and then displays the results."\)], "Output"],

Cell[BoxData[
    \("stereo4d[{a,b,c,d},surf,{u,umin,umax},{v,vmin,vmax},opts] uses \
GraphicsArray to plot a surface in R^4 via the four stereographic projections \
from R^4 to R^3 with respect to the point {a,b,c,d} in R^4."\)], "Output"],

Cell[BoxData[
    \("ShowInNotebook[graphics,nbopts] displays a graphic in a separate \
notebook."\)], "Output"],

Cell[BoxData[
    \("surfacecurveplot[surface,{u,u0,u1},{v,v0,v1}, \
PlotLines->{ulines,vlines},PlotPoints->{upoints,vpoints},opts] plots both the \
u- and v-parameter curves of a patch x:U->R^3. The number of curves is \
specified with PlotLines, and the resolution of the lines is specified with \
PlotPoints."\)], "Output"],

Cell[BoxData[
    \("wireframe[...] has the same syntax as ParametricPlot3D[...]. It plots \
a wireframe of a parametric patch in R^3.  wirframe[graphic] converts a solid \
graphic into a wireframe graphic."\)], "Output"],

Cell[BoxData[
    \("primitiveplot3d[{fx,fy,fz},{t,tmin,tmax}] produces a list of points of \
a space curve parametrized by a variable t which runs from tmin to tmax. \
primitiveplot3d[{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}] produces a list of \
points by polygons of a surface parametrized by t and u."\)], "Output"],

Cell[BoxData[
    \("WriteAcroLines[{color},file,{fx,fy,fz}, {t,tmin,tmax}] outputs to a \
file in acrospin line format the parametric plot of a space curve. \
WriteAcroLines[{color1,color2},file,{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}] \
outputs to a file in acrospin line format the parametric plot of a \
surface."\)], "Output"],

Cell[BoxData[
    \("WriteAcroPoints[{color},file,{fx,fy,fz}, {t,tmin,tmax}] outputs to a \
file in acrospin point format the parametric plot of a space curve. \
WriteAcroPoints[{color},file,{fx,fy,fz},{t,tmin,tmax},{u,umin,umax}] outputs \
to a file in acrospin point format the parametric plot of a surface."\)], \
"Output"],

Cell[BoxData[
    \("Write3DMESH[file,expression,{u,umin,umax},{v,vmin,vmax}, \
PlotPoints->{udiv,vdiv},opts] outputs to a file in mesh format the parametric \
plot of a surface."\)], "Output"],

Cell[BoxData[
    \("Write3DCMESH[file,{expression,color}, \
{u,umin,umax},{v,vmin,vmax},PlotPoints->{udiv,vdiv},opts] outputs to a file \
in mesh format the parametric plot of expression colored by color."\)], \
"Output"],

Cell[BoxData[
    \("Write3DCNMESH[file,{expression,unitn,color}, \
{u,umin,umax},{v,vmin,vmax}, PlotPoints->{udiv,vdiv},opts] outputs to a file \
in mesh format the parametric plot of expression colored by color with normal \
information unitn."\)], "Output"],

Cell[BoxData[
    \("Write2COLMESH[{color1,color2},file,expression, \
{u,umin,umax},{v,vmin,vmax}, PlotPoints->{udiv,vdiv},opts] outputs to a file \
in mesh format the parametric plot of a surface with one side color1 and the \
other color2."\)], "Output"],

Cell[BoxData[
    \("PLTPROGS`Private`"\)], "Output"],

Cell[BoxData[
    \(1\)], "Output"],

Cell[BoxData[
    \(2\)], "Output"],

Cell[BoxData[
    \(3\)], "Output"],

Cell[BoxData[
    \(4\)], "Output"],

Cell[BoxData[
    \(5\)], "Output"],

Cell[BoxData[
    \(6\)], "Output"],

Cell[BoxData[
    \(7\)], "Output"],

Cell[BoxData[
    \(8\)], "Output"],

Cell[BoxData[
    \(9\)], "Output"],

Cell[BoxData[
    \(10\)], "Output"],

Cell[BoxData[
    \(11\)], "Output"],

Cell[BoxData[
    \(12\)], "Output"],

Cell[BoxData[
    \(13\)], "Output"],

Cell[BoxData[
    \(14\)], "Output"],

Cell[BoxData[
    \(15\)], "Output"],

Cell[BoxData[
    \("PLTPROGS`Private`"\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\"CSPROGS\" (Programs for Manipulating Curves and Surfaces)", \
"Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["\<\
(*:Title: CSPROGS *)

(*:Author: Alfred Gray *)

(* Copyright 1994  by Alfred Gray *)

(*:Package Version: 1.0 *)

(*:Mathematica Version: 2.2 *)

(*:Summary: 
\tThis package consists of miniprgrams to compute curvature, torsion and \
related geometric quantities associated with curves and surfaces.
*)

(*:Keywords:
analytictominimal, arclength, arclengthprime, asymeq1, asymeq2, binormal, \
binormalsurf, brioschicurvature, christoffel, circle3point, cone, Cross, \
ctor, curveonsurf, cylinder, darbouxvector, der, divergence, ee, eee, eeee, \
evolute, ff, fff, ffff, focalkmu, focalkpi, focalk1, focalk2, frenetframe, \
gaussiancurvature, gcurvature, genhel, gensurfrev, geo, geodesiccurvature, \
geodesictorsion, geomincurve, gg, ggg, gggg, gmap, grad, harmonictoanalytic, \
helical, infarea, inscurve, intrinsic, inversion, inversioncurve, \
inversionsurf, involute, involutends, J, jacobian2, kappa, kappan, kappa2, \
kappa2c, kappa2implicit, kappa2polar, kappa23d, kmu, kpi, k1, k2, laplace, \
length, lengthn, lengthnds, mcurvature, meancurvature, meancurvaturevf, \
monge, mongepolar, nateq, normal, normalcurvature, normalline, normalsurf, \
osculatingcircle, paramtoimp, parcurve, parsurf, pedal, pedsurf, perpsurf, \
plotintrinsic, plotintrinsic3d, plottl, plottp, polarize, rf, rollcurve, rt, \
rtoc, ruled, seashell, solvegeoeqs, stereoinj, stereoinjcomplex, stereoproj, \
stretch, surfacejacobian, surfacejacobianmatrix, surfacenormal, surfast, \
surfrev, tandev, tangent, tangentkmu, tangentkpi, tangentline, tangentplane, \
tau, tl, totalscalarcurvature, transsurf, tubecurve, turningangle, \
turningnumber, twist, umeqs, unitnormal, vartube, wei, weicurvature, \
weimetric, weingarten, weiprime, writhe
*)

Print[\"For a list of programs type csprogs.\"]

BeginPackage[\"CSPROGS`\"]

    csprogs:=Print[Select[Names[\"CSPROGS`*\"],#!=\"csprogs\"&]]

(* Arc Length Functions *)

    arclengthprime::usage=\"t->arclengthprime[alpha][t] is the derivative of
the arc length function of the curve alpha:(a,b)->R^n.\"

    arclength::usage=\"t->arclength[alpha][t] is the arc length function of
the curve alpha:(a,b)->R^n computed using Integrate.\"

    length::usage=\"length[a,b][alpha] is the length of the curve
alpha:(a,b)->R^n computed symbolically.\"

    lengthn::usage=\"lengthn[a,b][alpha] is the length of the curve
alpha:(a,b)->R^n computed using NIntegrate.\"

    lengthnds::usage=\"t->lengthnds[a,b][alpha][t] is the length of the curve
alpha:(a,b)->R^n over the interval [a,t] computed using NDSolve over
the interval [a,b].\"

(* Brioschi Curvature *)

    brioschicurvature::usage=\"{u,v}->brioschicurvature[x][u,v] is the
Gaussian curvature of the patch x:U->R^n computed using
Brioschi's formula.  {u,v}->brioschicurvature[ee,ff,gg][u,v] is the
Gaussian curvature of the metric \\n
ds^2 = ee*du^2 + 2*ff*du dv + gg*dv^2.\"

(* Christoffel Symbols *)

    christoffel::usage=\"{u,v}->christoffel[i,j,k][x][u,v] is a Christoffel
symbol of the metric tensor of the patch x:U->R^n.
{u,v}->christoffel[i,j,k][ee,ff,gg][u,v] is a Christoffel symbol
of the metric \\n
ds^2 = ee*du^2 + 2*ff*du dv + gg*dv^2.\"

(* Complex to Real to Complex\\label{ComplextoRealtoComplex *)

    ctor::usage=\"ctor[z] converts a complex number z to an ordered pair
of real numbers whose components are the real and imaginary parts of z;
also works for lists of complex numbers.\"

    rtoc::usage=\"rtoc[{x,y}] converts an ordered pair {x,y} of
real numbers to a complex number whose real part is x and
whose imaginary part is y; also works for lists of ordered pairs.\"

(* Complex Structure *)

    J::usage=\"J is the linear map J:R^2->R^2 defined by
that maps {p1,p2} onto {-p2,p1}.\"

(* Cross Product *)

    Cross::usage=\"Cross[v,w] is the cross product of the vectors
v={v1,v2,v3} and w={w1,w2,w3}.\"

(* Construction of Plane Curves from
Plane Curves  *)

    evolute::usage=\"t->evolute[alpha][t] is the
evolute of the plane curve alpha.  t->evolute[n,alpha][t] is the
nth evolute of the plane curve alpha.\"

     involute::usage=\"t->involute[alpha,c][t] is the involute of alpha
starting at alpha[c], that is, the curve traced by a point on a thread
attached to alpha at alpha[c] that is kept taut as it is unwound from
alpha. t->involute[alpha][t] is t->involute[alpha,0][t].\"

     involutends::usage=\"t->involutends[a,b][alpha][t] is the involute
of alpha starting at alpha[a] computed over the interval [a,b] using NDSolve.
It is the curve traced by a point on a thread attached to alpha at
alpha[a] that is kept taut as it is unwound from alpha.\"

    normalline::usage=\"t->normalline[alpha][s,t] is the normal line of
length s emanating from a plane curve alpha at alpha[t].\"

    osculatingcircle::usage=\"t->osculatingcircle[alpha][t] is the osculating
circle to the plane curve alpha at alpha[t].\"

    tangentline::usage=\"t->tangentline[alpha][s,t] is the tangent line of
length s emanating from the plane curve alpha at alpha[t].\"

    plottl::usage=\"plottl[alpha,t0,{tmin,tmax},opts] plots
the tangent line emanating from alpha at alpha[t0].\"

    parcurve::usage=\"t->parcurve[alpha][s][t] is one component of the
curve parallel to a plane curve alpha at a distance Abs[s],
where Abs[s] is small. The other component is
t->parcurve[alpha][-s][t].\"

    pedal::usage=\"t->pedal[{a,b},alpha][t] is the pedal curve of the
plane curve alpha with respect to the point {a,b}.  t->pedal[alpha][t]
is the pedal curve of the plane curve alpha with respect to the origin.\"

    rollcurve::usage=\"t->rollcurve[alpha,b,h,c][t] is the parametrized
curve traced out by a point P attached to a circle of radius b
rolling along a plane curve alpha.  The distance of P to the center of the
rolling circle is h, and alpha[c] is the point at which the circle starts
rolling.\"

(* Construction of Space Curves from
Plane Curves  *)

    curveonsurf::usage=\"t->curveonsurf[surf,alpha][t] is the composition
of the patch surf:U->R^3 with the curve alpha:(a,b)->U.\"

    helical::usage=\"t->helical[alpha,a][t] is the helical curve
in R^3 with slant a over the plane curve alpha.
helical[alpha][f][t] is the helical curve in R^3 with
slant function f over the plane curve alpha.\"

    inscurve::usage=\"t->inscurve[n,a,alpha][t] is the curve that results \
when
the value a is inserted as the nth coordinate into the parametrization of
the curve alpha.\"

    kappa23d::usage=\"t->kappa23d[alpha][t] is the space curve whose
first two components are those of the plane curve alpha, and whose
third component is the signed curvature of alpha.
t-> kappa23d[mag,alpha][t]  is the space curve whose
first two components are those of the plane curve alpha, and whose
third component is the signed curvature of alpha multiplied by mag.\"

    writhe::usage=\"t->writhe[alpha][t] is a curve in R^3 that is a
twisted generalization of the plane curve t->alpha[t].\"

(* Construction of Surfaces from
Plane Curves  *)

    cone::usage=\"{u,v}->cone[{p1,p2,p3},gamma][u,v] is the cone
with vertex {p1,p2,p3} over the curve gamma:(a,b)->R^3.\"

    cylinder::usage=\"cylinder[{q1,q2,q3},gamma][u,v] is the cylinder
in the direction {q1,q2,q3} over the curve gamma:(a,b)->R^3.\"

    genhel::usage=\"{u,v}->genhel[alpha][sl][u,v] is the generalized helicoid
with slant  sl  generated by the plane curve alpha.\"

    gensurfrev::usage=\"{u,v}->gensurfrev[alpha,gamma][u,v] is the
generalized surface of revolution generated by the plane curves alpha
and gamma.\"

    ruled::usage=\"{u,v}->ruled[alpha,gamma][u,v] is the ruled patch 
generated by the curves alpha and gamma.\"

    surfast::usage=\"{u,v}->surfast[n,alpha][u,v] is the
astroidial patch of degree n generated by the plane curve alpha.\"

    surfrev::usage=\"{u,v}->surfrev[alpha][u,v] is the
surface of revolution generated by the plane curve alpha.\"

    twist::usage=\"{u,v}->twist[a,b,gamma][u,v] is the twisted patch 
generated by a curve gamma:(c,d)->R^2. The Moebius strip and Klein bottle
are special cases.\"

(* Construction of Surfaces from
Space Curves  *)

    binormalsurf::usage=\"{u,v}->binormalsurf[alpha][u,v] is the
surface generated by the curve alpha:(a,b)->R^3 and its
binormal vector field.\"

    normalsurf::usage=\"{u,v}->normalsurf[alpha][u,v] is the
surface generated from the curve alpha:(a,b)->R^3 and its
normal vector field.\"

   perpsurf::usage=\"{u,v}->perpsurf[phi,alpha][u,v] is a 1-parameter
family of surfaces generated by the curve alpha:(a,b)->R^3
and some normal vector field to alpha.  Special cases are
{u,v}->perpsurf[0,alpha][u,v], which is the normal surface of alpha, and
{u,v}->perpsurf[Pi/2,alpha][u,v], which is the binormal surface of alpha.\"

    seashell::usage=\"{t,theta}->seashell[gamma][r][t,theta] is the
tube of variable radius r t about the curve gamma:(a,b)->R^3.\"

    tandev::usage=\"{u,v}->tandev[alpha][u,v] is the developable surface
generated by the curve alpha:(a,b)->R^n and its tangent vector field.\"

    transsurf::usage=\"{u,v}->transsurf[alpha,gamma][u,v] is the
translation surface {u,v}->alpha[u,v] + gamma[u,v]
generated by the curve alpha,gamma:(a,b)->R^n.\"

    tubecurve::usage=\"{t,theta}->tubecurve[gamma][r][t,theta] is the
tube of radius r about the curve gamma:(a,b)->R^3.\"

    vartube::usage=\"{t,theta}->vartube[gamma][r][t,theta] is the
tube of variable radius r[t] about the curve gamma:(a,b)->R^3.\"

(* Construction of Surfaces from
Surfaces  *)

    parsurf::usage=\"{u,v}->parsurf[x][r][u,v] is the
parallel patch  at a distance r from a patch  x:U->R^3.\"

    pedsurf::usage=\"{u,v}->pedsurf[{a,b,c},x][u,v] is the pedal patch
of the patch x with respect to the point {a,b,c}.
{u,v}->pedsurf[x][u,v] is the pedal patch  of the
patch x with respect to the origin.\"

    stretch::usage=\"{u,v}->stretch[a,b,c,surf][u,v] is the
patch surf, but stretched by a,b,c.\"

    tangentplane::usage=\"{u,v}->tangentplane[x][u0,v0][u,v] is the
tangent plane to the patch  x at x[u0,v0].\"

    plottp::usage=\"plottp[x,{u0,v0},{umin,umax},{vmin,vmax},opts]
plots a patch  x and its tangent plane at x[u0,v0].\"

(* Curvature of Surfaces (Fast) *)

    gcurvature::usage=\"{u,v}->gcurvature[x][u,v] is the Gaussian curvature
of the patch x:U->R^3.\"

    mcurvature::usage=\"{u,v}->mcurvature[x][u,v] is the mean curvature of \
the
patch x:U->R^3.\"

(* Curvature of Surfaces (Slow) *)

    gaussiancurvature::usage=\"{u,v}->gaussiancurvature[x][u,v] is the
Gaussian curvature of the patch x:U->R^3.\"

    meancurvature::usage=\"{u,v}->meancurvature[x][u,v] is the
mean curvature of the patch x:U->R^3.\"

    meancurvaturevf::usage=\"{u,v}->meancurvaturevf[x][u,v] is the
mean curvature vector field of the patch x:U->R^n.\"

(* Curvature and Torsion of Curves *)

    geodesiccurvature::usage=\"geodesiccurvature[surf,alpha][t] 
calculates the geodesic curvature of the curve t->surf[alpha[t]] 
contained in the parametrized surface surf:U->R^3, where alpha
is a plane curve whose trace is contained in the subset U of R^2.\"

    geodesictorsion::usage=\"geodesictorsion[surf,alpha][t] 
calculates the geodesic torsion of the curve t->surf[alpha[t]] 
contained in the parametrized surface surf:U->R^3, where alpha
is a plane curve whose trace is contained in the subset U of R^2.\"

    kappa::usage=\"t->kappa[alpha][t] is the
unsigned curvature of the curve alpha:(a,b)->R^3.\"

    kappan::usage=\"t->kappan[alpha][t] is the
unsigned curvature of the curve alpha:(a,b)->R^n.\"

    kappa2::usage=\"t->kappa2[alpha][t] is the signed curvature of
the plane curve alpha.\"

    kappa2c::usage=\"t->kappa2c[alpha][t] is the signed curvature of the
complex plane curve alpha.\"

    kappa2implicit::usage=\"{x,y}->kappa2implicit[g][x,y] is the signed
curvature of the plane curve g[x,y]==0.\"

    kappa2polar::usage=\"t->kappa2polar[rho][t] is the signed
curvature of the plane curve whose radius function is rho.\"

    normalcurvature::usage=\"normalcurvature[surf,alpha][t] 
calculates the normal curvature of the curve t->surf[alpha[t]] 
contained in the parametrized surface surf:U->R^3, where alpha
is a plane curve whose image is contained in the subset U of R^2.\"

    tau::usage=\"t->tau[alpha][t] is the
torsion of the curve alpha:(a,b)->R^3.\"

    totalscalarcurvature::usage=\"totalscalarcurvature[a,b,alpha] is the
total curvature of the curve alpha:(a,b)->R^2.\"

    turningangle::usage=\"t->turningangle[alpha][t] is the
turning angle of the curve alpha:(a,b)->R^2.\"

    turningnumber::usage=\"turningnumber[alpha,{a,b},opts] is the
turning number of the closed curve alpha:(a,b)->R^2.\"

(* Euclidean Motions Acting on
Plane Curves *)

    tl::usage=\"t->tl[p,alpha][t] is the curve alpha:(a,b)->R^n
translated by p.\"

    rt::usage=\"t->rt[theta,alpha][t] is the curve alpha:(a,b)->R^2
rotated by theta.\"

    rf::usage=\"t->rf[p,alpha][t] is the reflection about the
horizontal axis of the curve alpha:(a,b)->R^2.\"

(* Focal Set Programs *)

    focalkmu::usage=\"{u,v}->focalkmu[x][u,v] is a parametrization of the
focal set of a principal patch x corresponding to the principal curvature \
kmu.\"

    focalkpi::usage=\"{u,v}->focalkpi[x][u,v] is a parametrization of the
focal set of a principal patch x corresponding to the principal curvature \
kpi.\"

    focalk1::usage=\"{u,v}->focalk1[x][u,v] is a parametrization of the
focal set of a patch x corresponding to the principal curvature k1.\"

    focalk2::usage=\"{u,v}->focalk2[x][u,v] is a parametrization of the
focal set of a patch x corresponding to the principal curvature k2.\"

    tangentkmu::usage=\"{u,v}->tangentkmu[x][u,v] is an eigenvector of
unit length of a principal patch x corresponding to the
principal curvature kmu.\"

    tangentkpi::usage=\"{u,v}->tangentkpi[x][u,v] is an eigenvector of
unit length of a principal patch x corresponding to the
principal curvature kpi.\"

(* Frenet Frame Programs *)

    binormal::usage=\"t->binormal[alpha][t] is the
binormal of the curve alpha:(a,b)->R^3.\"

    darbouxvector::usage=\"t->darbouxvector[gamma][t] is the Darboux vector
field of the curve gamma:(a,b)->R^3.\"

    frenetframe::usage=\"t->frenetframe[alpha][t] is the
Frenet frame of the curve alpha:(a,b)->R^3.\"

    normal::usage=\"t->normal[alpha][t] is the
normal of the curve alpha:(a,b)->R^3.\"

    tangent::usage=\"t->tangent[alpha][t] is the
tangent of the curve alpha:(a,b)->R^3.\"

(* Geodesics *)

     geo::usage=\"{u,v}->geo[x][p,q,u,v] gives the system of first order
differential equations for a patch x:U->R^n. geo[ee,ff,gg][p,q,u,v] gives
the system of first order differential equations for the geodesics of a
metric with coefficients ee,ff,gg.\"

    solvegeoeqs::usage=\"solvegeoeqs[x,a:0,{u,v},{u0:0,v0:0},tfin,div,optsnd__\
_]
solves the geodesic equations of the patch x using NDSolve.\"

(* Intrinsic Curvature of Curves *)

   intrinsic::usage=\"intrinsic[fun,a,{c,d,theta0},optsnd,{smin,smax}] is a
curve alpha starting at {c,d} and initial turning angle theta0 such that
the  signed curvature of alpha is fun.\"

    plotintrinsic::usage=\"plotintrinsic[fun,a,{c,d,theta0},optsnd,
{smin,smax}, optspp] plots a curve alpha starting at {c,d} and initial
turning angle theta0 such that the  signed curvature of alpha is fun.\"

    plotintrinsic3d::usage=\"plotintrinsic3d[{kk,tt},{a,{p1,p2,p3},{q1,q2,q3},\

{r1,r2,r3}},{smin,smax},opts] plots a unit-speed space curve alpha with
curvature kk and torsion tt such that alpha[a:0]={p1:0,p2:0,p3:0},
alpha'[a:0]={q1:1,q2:0,q3:0} and alpha''[a:0]=kk[0]*{r1:0,r2:1,r3:0}.\"

(* Inversion Programs *)

        inversion::usage=\"x->inversion[p,rho][x] is the inversion of a point
x with respect to a sphere in R^n of radius rho centered at p.
inversion[rho][x] is the inversion of a point x with respect to a
sphere in R^n of radius rho centered at the origin.\"

        inversioncurve::usage=\"t->inversioncurve[p,rho][alpha][t] is the
inversion of a curve alpha with respect to a sphere in R^n of radius rho
centered at p.  t->inversioncurve[rho][alpha][t] is the inversion of a
curve alpha with respect to a sphere in R^n of radius rho centered at
the origin.\"

        inversionsurf::usage=\"{u,v}->inversionsurf[p,rho][surf][u,v]
is the inversion of a patch  surf with respect to a sphere in R^n of
radius rho centered at p.  {u,v}->inversionsurf[rho][surf][u,v] is the
inversion of a patch surf with respect to a sphere in R^n of radius rho
centered at the origin.\"

(* Jacobians and Normals *)

    jacobian2::usage=\"{u,v}->jacobian2[x][u,v] is the square of the
determinant of the Jacobian matrix of the patch x:U->R^3.\"

    surfacejacobianmatrix::usage=\"{u,v}->surfacejacobianmatrix[x][u,v]
is the Jacobian matrix of the patch x:U->R^n.\"

    surfacejacobian::usage=\"{u,v}->surfacejacobian[x][u,v] is
the determinant of the product of the Jacobian matrix of the
patch x:U->R^n with its transpose.\"

    surfacenormal::usage=\"{u,v}->surfacenormal[x][u,v] is the
cross product of the tangent vectors xu and xv of the patch x:U->R^3.\"

    unitnormal::usage=\"{u,v}->unitnormal[x][u,v] is the
unit normal to the patch x:U->R^3. It is the Gauss map of x.\"

(* Metric (First Fundamental Form) *)

    ee::usage=\"{u,v}->ee[x][u,v] is the first coefficient of the metric
tensor (or first fundamental form) of the patch x:U->R^n.  The usual
mathematics symbol is E.\"

    ff::usage=\"{u,v}->ff[x][u,v] is the second coefficient of the metric
tensor of the patch x:U->R^n  The usual mathematics symbol is F.\"

    gg::usage=\"{u,v}->gg[x][u,v] is the third coefficient of the metric
tensor of the patch x:U->R^n.  The usual mathematics symbol is G.\"

    infarea::usage=\"{u,v}->infarea[x][u,v] is the infinitesimal area of
the metric tensor (or first fundamental form) of the patch x:U->R^n.\"

(* Minimal Surface Programs *)

    analytictominimal::usage=\"{u,v}->analytictominimal[Psi][t][u,v]
is the minimal patch  corresponding to the analytic n-tuple
z->E^(-I*t)*Psi[z].\"

     geomincurve::usage=\"z->geomincurve[alpha][z] is the minimal curve
in C^3 that contains a plane curve alpha:(a,b)->R^3 as a geodesic.\"

    harmonictoanalytic::usage=\"z->harmonictoanalytic[x][z] is the
analytic function whose real part is the harmonic n-tuple {u,v}->x[u,v]
and whose imaginary part vanishes at {0,0}.
harmonictoanalytic[x][x0,y0][z] is the analytic function whose real part
is {u,v}->x[u,v] and whose imaginary part vanishes at {x0,y0}.\"

    wei::usage=\"z->wei[f,g][z] is the triple of meromorphic functions
constructed from meromorphic functions f and g via the Weierstrass
representation.\"

    weicurvature::usage=\"z->weicurvature[f,g][z] is the
Gaussian curvature of the Weierstrass patch determined by
meromorphic functions f and g.\"

    weimetric::usage=\"z->weimetric[f,g][z] is the scaling function of the
metric of the Weierstrass patch determined by meromorphic functions f and \
g.\"

    weiprime::usage=\"z->weiprime[f,g][z] is integrand of the Weierstrass
representation.\"

(* Principal Curvatures *)

    kmu::usage=\"{u,v}->kmu[x][u,v] is a principal curvature of a
patch x for which ff[x] = fff[x] = 0.\"

    kpi::usage=\"{u,v}->kpi[x][u,v] is a principal curvature of a
patch x for which ff[x] = fff[x] = 0.\"

    k1::usage=\"{u,v}->k1[x][u,v] is a principal curvature of a
patch x (k1 is greater than or equal to k2).\"

    k2::usage=\"{u,v}->k2[x][u,v] is a principal curvature of a
patch x (k1 is greater than or equal to k2).\"

(* Second Fundamental Form and
Gauss Map Programs *)

    eee::usage=\"{u,v}->eee[x][u,v] is the first coefficient of the
second fundamental form of the patch x:U->R^3. The usual
mathematics symbol is e.\"

    eeee::usage=\"{u,v}->eeee[x][u,v] is the first coefficient of the
second fundamental form of the patch x:U->R^3 multiplied by
the infinitesimal area.  The Gauss symbol is D.\"

    fff::usage=\"{u,v}->fff[x][u,v] is the second coefficient of the
second fundamental form of the patch x:U->R^3.  The usual
mathematics symbol is f.\"

    ffff::usage=\"{u,v}->ffff[x][u,v] is the second coefficient of the
second fundamental form of the patch x:U->R^3 multiplied by
the infinitesimal area.  The Gauss symbol is D'.\"

    ggg::usage=\"{u,v}->ggg[x][u,v] is the third coefficient of the
second fundamental form of the patch x:U->R^3.  The usual
mathematics symbol is g.\"

    gggg::usage=\"{u,v}->gggg[x][u,v] is the third coefficient of the
second fundamental form of the patch x:U->R^3 multiplied by
the infinitesimal area.  The Gauss symbol is D''.\"

    weingarten::usage=\"{u,v}->weingarten[x][u,v] is the matrix of the
shape operator of the patch x:U->R^3 with respect to xu and xv.\"

(* Vector Analysis Programs *)

    der::usage=\"der[v][ww][x,y] is the derivative of the vector field
ww on R^2 in the direction v.  der[v][ww][x,y,z] is the derivative
of the vector field ww on R^3 in the direction v.\"

    divergence::usage=\"divergence[ww][x,y] is the divergence of a
vector field ww on R^2.  divergence[ww][x,y,z] is the divergence
of the vector field ww on R^3.\"

    gmap::usage=\"gmap[g][x,y] is the Gauss map for a level curve of
a function g:R^2->R.  gmap[g][x,y,z] is the Gauss map for a level surface of
a function g:R^3->R.\"

    grad::usage=\"grad[g][x,y] is the gradient of a function g:R^2->R.
grad[g][x,y,z] is the gradient of a function g:R^3->R.\"

    laplace::usage=\"laplace[g][x,y] is the Laplacian of a function g:R^2->R.
laplace[g][x,y,z] is the Laplacian of a function g:R^3->R.\"

(* Miscellaneous Programs *)

    asymeq1::usage=\"asymeq1[x][u,v] is the differential equation
eee[x][u,v]u'[v]^2 + 2*fff[x][u,v]u'[v] + ggg[x][u,v]==0 of the
patch x:U->R^3.\"

    asymeq2::usage=\"asymeq2[x][u,v] is the differential equation
eee[x][u,v] + 2fff[x][u,v]v'[u] + ggg[x][u,v]v'[u]^2==0 of the
patch x:U->R^3.\"

    circle3point::usage=\"circle3point[{p1,q1},{p2,q2},{p3,q3}] is
the circle in the plane passing through the points
{p1,q1},{p2,q2},{p3,q3}.\"

    monge::usage=\"{u,v}->monge[h][u,v] is the parametrization
{u,v}->{u,v,h[u,v]} of the graph of h:U->R,
where U is an open subset of R^2.\"

    mongepolar::usage=\"{r,theta}->mongepolar[g][r,theta] is the \
parametrization
{r,theta}->{r*Cos[theta],r*Sin[theta],g[r,theta]} of the graph of g:U->R,
where U is an open subset of R^2.\"

    nateq::usage=\"nateq[alpha][k2,s] sometimes can be used to
find the natural equations of a plane curve alpha.\"

    paramtoimp::usage=\"paramtoimp[alpha,{x,y}] attempts to convert the
parametric form of a curve alpha to the implicit form.  The result is a
number of equations, one of which is the implicit form of the curve.  The
command will usually not succeed if the components of alpha are not rational
functions.\"

    polarize::usage=\"{r,theta}->polarize[func][r,theta] is the composition
of the maps {u,v}->func[u,v] and {r,theta}->{r*Cos[theta],r*Sin[theta]},
where {u,v}->func[u,v] is an n-tuple of functions.\"

    stereoinj::usage=\"p->stereoinj[a][p] is the stereographic
injection from R^n to a sphere of radius a centered at the origin
in R^(n+1).\"

    stereoinjcomplex::usage=\"z->stereoinjcomplex[g][z] is the composition
stereographic of stereoinj:C->S^2(1) with a function g:C->C.\"

    stereoproj::usage=\"q->stereoproj[a][q] is the stereographic
projection from the sphere of radius a centered at the origin in
R^(n+1) to R^n.\"

    umeqs::usage=\"umeqs[k][x][u,v] attempts to find the umbilic points of
the patch x:U->R^3.\"

Begin[\"`Private`\"]
(* Arc Length Functions *)

    arclengthprime[alpha_][t_]:=
        Sqrt[Simplify[D[alpha[tt],tt].
                D[alpha[tt],tt]]] /. tt->t

    arclength[alpha_][t_]:=
        Integrate[arclengthprime[alpha][tt],tt]  /. tt->t

    length[a_,b_][alpha_]:=
        Integrate[arclengthprime[alpha][u],{u,a,b}]

    lengthn[a_,b_][alpha_]:= NIntegrate[Evaluate[
          arclengthprime[alpha][u]],{u,a,b}]

    lengthnds[a_,b_][alpha_][t_]:=
        Module[{aaa,bbb,s,tt},
            aaa = NDSolve[{s'[tt]==
                arclengthprime[alpha][tt],
                s[a]==0},s,{tt,a,b}];
            bbb = s[tt] /. aaa;
            bbb /. tt->t][[1]]

(* Brioschi Curvature *)
             
    brioschicurvature[x_][u_,v_]:=
        (Det[{{-D[ee[x][uu,vv],{vv,2}]/2 + 
             D[ff[x][uu,vv],uu,vv] -
             D[gg[x][uu,vv],{uu,2}]/2,
             D[ee[x][uu,vv],uu]/2,
             D[ff[x][uu,vv],uu] -
             D[ee[x][uu,vv],vv]/2},
           {D[ff[x][uu,vv],vv] -
            D[gg[x][uu,vv],uu]/2,
            ee[x][uu,vv],ff[x][uu,vv]},
          {D[gg[x][uu,vv],vv]/2,
          ff[x][uu,vv],gg[x][uu,vv]}}]
       -Det[{{0,D[ee[x][uu,vv],vv]/2,
             D[gg[x][uu,vv],uu]/2},
          {D[ee[x][uu,vv],vv]/2,
             ee[x][uu,vv],ff[x][uu,vv]},
          {D[gg[x][uu,vv],uu]/2,
             ff[x][uu,vv],gg[x][uu,vv]}}])/
       (ee[x][uu,vv]*gg[x][uu,vv] - ff[x][uu,vv]^2)^2 /.
                  {uu->u,vv->v}

    brioschicurvature[ee_,ff_,gg_][u_,v_]:=
        (Det[{{-D[ee[uu,vv],{vv,2}]/2 + D[ff[uu,vv],uu,vv] -
             D[gg[uu,vv],{uu,2}]/2,
             D[ee[uu,vv],uu]/2,
             D[ff[uu,vv],uu] - D[ee[uu,vv],vv]/2},
        {D[ff[uu,vv],vv] - D[gg[uu,vv],uu]/2,ee[uu,vv],ff[uu,vv]},
        {D[gg[uu,vv],vv]/2,ff[uu,vv],gg[uu,vv]}}] -
         Det[{{0,D[ee[uu,vv],vv]/2,D[gg[uu,vv],uu]/2},
            {D[ee[uu,vv],vv]/2,ee[uu,vv],ff[uu,vv]},
            {D[gg[uu,vv],uu]/2,ff[uu,vv],gg[uu,vv]}}])/
        (ee[uu,vv]*gg[uu,vv] - ff[uu,vv]^2)^2   /. {uu->u,vv->v}

(* Christoffel Symbols *)

     christoffel[1,1,1][x_][u_,v_]:=
        Simplify[(D[ee[x][uu,vv],vv]*ff[x][uu,vv] -
        2*ff[x][uu,vv]*D[ff[x][uu,vv],uu] +
        D[ee[x][uu,vv],uu]*gg[x][uu,vv])/
       (2*(ee[x][uu,vv]*gg[x][uu,vv] -
        ff[x][uu,vv]^2))] /. {uu->u,vv->v}

     christoffel[2,1,1][x_][u_,v_]:=
        Simplify[-(D[ee[x][uu,vv],vv]*ee[x][uu,vv] -
        2*ee[x][uu,vv]*D[ff[x][uu,vv],uu] +
        D[ee[x][uu,vv],uu]*ff[x][uu,vv])/
       (2*(ee[x][uu,vv]*gg[x][uu,vv] -
        ff[x][uu,vv]^2))] /. {uu->u,vv->v}
                        
    christoffel[1,1,2][x_][u_,v_]:=
        Simplify[(D[ee[x][uu,vv],vv]*gg[x][uu,vv] -
        ff[x][uu,vv]*D[gg[x][uu,vv],uu])/
        (2*(ee[x][uu,vv]*gg[x][uu,vv] -
        ff[x][uu,vv]^2))] /. {uu->u,vv->v}

    christoffel[1,2,1][x_][u_,v_]:=
        christoffel[1,1,2][x][u,v]
                        
    christoffel[2,1,2][x_][u_,v_]:=
        Simplify[-(D[ee[x][uu,vv],vv]*ff[x][uu,vv] -
         ee[x][uu,vv]*D[gg[x][uu,vv],uu])/
        (2*(ee[x][uu,vv]*gg[x][uu,vv] -
        ff[x][uu,vv]^2))] /. {uu->u,vv->v}

    christoffel[2,2,1][x_][u_,v_]:=
         christoffel[2,1,2][x][u,v]
                        
    christoffel[1,2,2][x_][u_,v_]:=
        Simplify[(-D[gg[x][uu,vv],vv]*ff[x][uu,vv] +
        2*gg[x][uu,vv]*D[ff[x][uu,vv],vv] -
        D[gg[x][uu,vv],uu]*gg[x][uu,vv])/
        (2*(ee[x][uu,vv]*gg[x][uu,vv] -
        ff[x][uu,vv]^2))] /. {uu->u,vv->v}

    christoffel[2,2,2][x_][u_,v_]:=
        Simplify[(D[gg[x][uu,vv],vv]*ee[x][uu,vv] -
        2*ff[x][uu,vv]*D[ff[x][uu,vv],vv] +
        D[gg[x][uu,vv],uu]*ff[x][uu,vv])/
        (2*(ee[x][uu,vv]*gg[x][uu,vv] -
         ff[x][uu,vv]^2))] /. {uu->u,vv->v}

    christoffel[1,1,1][ee_,ff_,gg_][u_,v_]:=
         Simplify[(D[ee[u,v],v]*ff[u,v] -
         2*ff[u,v]*D[ff[u,v],u] +
         D[ee[u,v],u]*gg[u,v])/
        (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

    christoffel[2,1,1][ee_,ff_,gg_][u_,v_]:=
         Simplify[-(D[ee[u,v],v]*ee[u,v] -
         2ee[u,v]*D[ff[u,v],u] +
         D[ee[u,v],u]*ff[u,v])/
        (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

    christoffel[1,1,2][ee_,ff_,gg_][u_,v_]:=
         Simplify[(D[ee[u,v],v]*gg[u,v] -
         ff[u,v]*D[gg[u,v],u])/
         (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

    christoffel[1,2,1][ee_,ff_,gg_][u_,v_]:=
         christoffel[1,1,2][ee,ff,gg][u,v]

    christoffel[2,1,2][ee_,ff_,gg_][u_,v_]:=
         Simplify[-(D[ee[u,v],v]*ff[u,v] -
          ee[u,v]*D[gg[u,v],u])/
         (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

    christoffel[2,2,1][ee_,ff_,gg_][u_,v_]:=
          christoffel[2,1,2][ee,ff,gg][u,v]

    christoffel[1,2,2][ee_,ff_,gg_][u_,v_]:=
         Simplify[(-D[gg[u,v],v]*ff[u,v] +
         2*gg[u,v]*D[ff[u,v],v] -
         D[gg[u,v],u]*gg[u,v])/
         (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

     christoffel[2,2,2][ee_,ff_,gg_][u_,v_]:=
         Simplify[(D[gg[u,v],v]*ee[u,v] -
         2*ff[u,v]*D[ff[u,v],v] +
         D[gg[u,v],u]*ff[u,v])/
         (2*(ee[u,v]*gg[u,v] - ff[u,v]^2))]

(* Complex to Real to Complex\\label{ComplextoRealtoComplex *)

    ctor[z_]:= ComplexExpand[{Re[z],Im[z]},{z}]

    rtoc[{x_,y_}]:= x + I*y

(* Complex Structure *)

    J[{p1_,p2_}]:= {-p2,p1}

(* Cross Product *)

    Cross[v_List,w_List]:=
        RotateLeft[v*RotateLeft[w] -
        RotateLeft[v]*w] /;
        Length[v] == Length[w] == 3

(* Construction of Plane Curves from
Plane Curves  *)
                
    evolute[alpha_][t_]:= alpha[tt] +
        D[alpha[tt],tt].D[alpha[tt],tt]/
       (D[alpha[tt],{tt,2}].
        J[D[alpha[tt],tt]])*J[D[alpha[tt],tt]] /. {tt->t}

    evolute[1,alpha_][t_]:= Simplify[alpha[tt] +
        D[alpha[tt],tt].D[alpha[tt],tt]/
        (D[alpha[tt],{tt,2}].J[D[alpha[tt],tt]])*
         J[D[alpha[tt],tt]] /. {tt->t}]

    evolute[n_,alpha_][t_]:= evolute[n,alpha][t] =
        evolute[1,evolute[n - 1,alpha]][t]//Simplify

    involute[alpha_,c_][t_]:=alpha[tt] +
        (arclength[alpha][c] -
         arclength[alpha][tt])*D[alpha[tt],tt]/
         Sqrt[Factor[D[alpha[tt],tt].
         D[alpha[tt],tt]]] /. tt->t         

    involute[alpha_][t_]:= involute[alpha,0][t]

    involutends[a_,b_][alpha_][t_]:=
        Module[{aaa,bbb,s,tt},
            aaa = NDSolve[{s'[tt]==
                arclengthprime[alpha][tt],
                s[a]==0},s,{tt,a,b}];
            bbb = alpha[tt] +
                (s[a] - s[tt])*D[alpha[tt],tt]/
                 Sqrt[D[alpha[tt],tt].
                 D[alpha[tt],tt]]  /.aaa;
            bbb /. tt->t]
                
    normalline[alpha_][s_,t_]:=
        Line[{alpha[tt],alpha[tt] + s*J[D[alpha[tt],tt]]/
        (D[alpha[tt],tt].D[alpha[tt],tt])^(1/2)}] /. tt->t
                
    osculatingcircle[alpha_][t_]:=
        Circle[alpha[tt] + D[alpha[tt],tt].D[alpha[tt],tt]/
        (D[alpha[tt],{tt,2}].
        J[D[alpha[tt],tt]])*J[D[alpha[tt],tt]],
        Abs[(D[alpha[tt],tt].D[alpha[tt],tt])^(3/2)/
        (D[alpha[tt],{tt,2}].J[D[alpha[tt],
                tt]])]] /. tt->t

    tangentline[alpha_][s_,t_]:= Line[{alpha[tt],alpha[tt] +
          s*D[alpha[tt],tt]/Sqrt[Factor[D[alpha[tt],tt].
                  D[alpha[tt],tt]]]}] /. tt->t

    plottl[curve_,t0_,{tmin_,tmax_},opts___]:=
          ParametricPlot[curve[t0 + t]//Evaluate,{t,tmin,tmax},
          Epilog->{tangentline[curve][t0][tmax]//Evaluate},
          AspectRatio->Automatic,opts];
                
    parcurve[alpha_][s_][t_]:= alpha[tt] +
          s*J[D[alpha[tt],tt]]/Sqrt[Simplify[
              D[alpha[tt],tt].D[alpha[tt],tt]]] /. tt->t
                
    pedal[{a_,b_},alpha_][t_]:= {a,b} +
        ((alpha[tt] - {a,b}).J[D[alpha[tt],tt]]/
        (D[alpha[tt],tt].D[alpha[tt],tt]))*J[
         D[alpha[tt],tt]] /. {tt->t}

    pedal[alpha_][t_]:= pedal[{0,0},alpha][t]

    rollcurve[alpha_,b_,h_,c_][t_]:= (alpha[tt] - 
        h*Sin[(arclength[alpha][tt]-arclength[alpha][c])/b]*
        D[alpha[tt],tt]/Sqrt[Factor[D[alpha[tt],tt].
        D[alpha[tt],tt]]] +
        (b - h*Cos[(arclength[alpha][tt]-arclength[alpha][c])/b])*
        J[D[alpha[tt],tt]]/Sqrt[Factor[D[alpha[tt],tt].
        D[alpha[tt],tt]]]) /. tt->t

(* Construction of Space Curves from
Plane Curves  *)

     curveonsurf[surf_,alpha_][t_]:=
             surf[alpha[t][[1]],alpha[t][[2]]]

     helical[alpha_,c_][t_]:=
        {alpha[t][[1]],alpha[t][[2]],c t}

     helical[alpha_][f_][t_]:=
              {alpha[t][[1]],alpha[t][[2]],f[t]}

     inscurve[n_,a_,alpha_][t_]:= Insert[alpha[t],a,n]
              
     kappa23d[alpha_][t_]:= Append[alpha[t],kappa2[alpha][t]]

     kappa23d[mag_,alpha_][t_]:=
           Append[alpha[t],mag*kappa2[alpha][t]]

     writhe[alpha_][t_]:= {alpha[t][[1]],
            Cos[t]*alpha[t][[2]],Sin[t]*alpha[t][[2]]}

(* Construction of Surfaces from
Plane Curves  *)

    cone[{p1_,p2_,p3_},gamma_][u_,v_]:=
        {p1,p2,p3} + v*gamma[u]

    cylinder[{q1_,q2_,q3_},gamma_][u_,v_]:=
        gamma[u] + {v*q1,v*q2,v*q3}

    genhel[alpha_][sl_][u_,v_]:= {Cos[u]*alpha[v][[1]],
                                  Sin[u]*alpha[v][[1]],
                                  sl*u + alpha[v][[2]]}
     
    gensurfrev[alpha_,gamma_][u_,v_]:= {alpha[u][[1]]*gamma[v][[1]],
                   alpha[u][[2]]*gamma[v][[1]],gamma[v][[2]]}

    ruled[alpha_,gamma_][u_,v_]:= alpha[u] + v*gamma[u]

    surfast[n_,alpha_][u_,v_]:= {Cos[u]^n*alpha[v][[1]],
                                 Sin[u]^n*alpha[v][[1]],
                                          alpha[v][[2]]}
 
    surfrev[alpha_][u_,v_]:= {Cos[u]*alpha[v][[1]],
                  Sin[u]*alpha[v][[1]],alpha[v][[2]]}
 
    twist[a_,b_,gamma_][u_,v_]:=
        (a + Cos[b*u]*gamma[v][[1]] - Sin[b*u]*gamma[v][[2]])*
        {Cos[u],Sin[u],0} +
        (Sin[b*u]*gamma[v][[1]] + Cos[b*u]*gamma[v][[2]])*
        {0,0,1}

(* Construction of Surfaces from
Space Curves  *)

    binormalsurf[alpha_][u_,v_]:=
        alpha[u] + v*binormal[alpha][u]
         
    normalsurf[alpha_][u_,v_]:=
        alpha[u] + v*normal[alpha][u]

    perpsurf[phi_,alpha_][u_, v_]:= 
        alpha[u] + v*(Cos[phi]*normal[alpha][u] +
                Sin[phi]*binormal[alpha][u])

    seashell[gamma_][r_][t_,theta_]:= gamma[t] + 
        r*t*(-Cos[theta]*normal[gamma][t] +
          Sin[theta]*binormal[gamma][t])

    tandev[alpha_][u_,v_]:= alpha[uu] + v*D[alpha[uu],uu]/
          Sqrt[D[alpha[uu],uu].D[alpha[uu],uu]] /. uu->u

    transsurf[alpha_,gamma_][u_,v_]:= alpha[u] + gamma[v]
               
    tubecurve[gamma_][r_][t_,theta_]:= Simplify[gamma[t] + 
        r*(-Cos[theta]*normal[gamma][t] +
          Sin[theta]*binormal[gamma][t])]

    vartube[gamma_][r_][t_,theta_]:= Simplify[gamma[t] + 
        r[t]*(-Cos[theta]*normal[gamma][t] +
             Sin[theta]*binormal[gamma][t])]

(* Construction of Surfaces from
Surfaces  *)
                
    parsurf[x_][r_][u_,v_]:= Module[{xu,xv,n1,n2,n3,n4},
        xu = D[x[uu,vv],uu];
        xv = D[x[uu,vv],vv];
        n1 = Cross[xu,xv]//Simplify;
        n2 = Simplify[Factor[n1.n1]];
        n3 = PowerExpand[n2^(1/2)]//Simplify;
        n4 = Simplify[n1/n3];
        Simplify[Together[x[uu,vv] +
                r*n4]]] /. {uu->u,vv->v}
                
    pedsurf[{a_,b_,c_},x_][u_,v_]:=
         Module[{xu,xv,n1,s2,s3,n4},
         xu = D[x[uu,vv],uu];
         xv = D[x[uu,vv],vv];
         n1 = Cross[xu, xv]//Simplify;
         s2 = Simplify[Factor[n1.n1]];
         s3 = PowerExpand[s2^(1/2)]//Simplify;
         n4 = Simplify[n1/s3];
         {a,b,c} + Simplify[Together[((x[uu,vv] -
         {a,b,c}).n4)*n4]]] /. {uu->u,vv->v}
           
     pedsurf[x_][u_,v_]:= Module[{xu,xv,n1,s2,s3,n4},
        xu = D[x[uu,vv],uu];
        xv = D[x[uu,vv],vv];
        n1 = Cross[xu, xv]//Simplify;
        s2 = Simplify[Factor[n1.n1]];
        s3 = PowerExpand[s2^(1/2)]//Simplify;
        n4 = Simplify[n1/s3];
        Simplify[Together[(x[uu,vv].n4)*n4]]]  /.
             {uu->u,vv->v}

    stretch[a_,b_,c_,surf_][u_,v_]:=
           {a*surf[u,v][[1]],b*surf[u,v][[2]],c*surf[u,v][[3]]}
    
    tangentplane[x_][u0_,v0_][u_,v_]:= x[u0,v0] +
          D[x[uu0,vv0],uu0]*u + D[x[uu0,vv0],vv0]*v /.
          {uu0->u0,vv0->v0}

    plottp[surf_,{u0_,v0_},{umin_,umax_},
          {vmin_,vmax_},opts___]:=
          ParametricPlot3D[{surf[u0 + u,v0 + v],
             tangentplane[surf][u0,v0][u,v]}//Evaluate,
             {u,umin,umax},{v,vmin,vmax},
             Boxed->False,Axes->None,opts];

 (* Curvature of Surfaces (Fast) *)

     gcurvature[x_][u_,v_]:= Simplify[
       (Det[{D[x[uu,vv],uu,uu],D[x[uu,vv],uu],
             D[x[uu,vv],vv]}]*
        Det[{D[x[uu,vv],vv,vv],D[x[uu,vv],uu],
             D[x[uu,vv],vv]}] -
        Det[{D[x[uu,vv],uu,vv],D[x[uu,vv],uu],
             D[x[uu,vv],vv]}]^2)/
       (D[x[uu,vv],uu].D[x[uu,vv],uu]*
             D[x[uu,vv],vv].D[x[uu,vv],vv] -
        D[x[uu,vv],uu].
             D[x[uu,vv],vv]^2)^2] /. {uu->u,vv->v}
 
     mcurvature[x_][u_,v_]:= Simplify[
       (Det[{D[x[uu,vv],uu,uu],D[x[uu,vv],uu],
            D[x[uu,vv],vv]}]*
            D[x[uu,vv],vv].D[x[uu,vv],vv] -
       2*Det[{D[x[uu,vv],uu,vv],D[x[uu,vv],uu],
            D[x[uu,vv],vv]}]*
            D[x[uu,vv],uu].D[x[uu,vv],vv] +
        Det[{D[x[uu,vv],vv,vv],D[x[uu,vv],uu],
            D[x[uu,vv],vv]}]*
            D[x[uu,vv],uu].D[x[uu,vv],uu])/
      (2*(D[x[uu,vv],uu].D[x[uu,vv],uu]*
            D[x[uu,vv],vv].D[x[uu,vv],vv] -
            D[x[uu,vv],uu].
            D[x[uu,vv],vv]^2)^(3/2))] /. {uu->u,vv->v}

(* Curvature of Surfaces (Slow) *)

     gaussiancurvature[x_][u_,v_]:= Simplify[
        (eee[x][uu,vv]*ggg[x][uu,vv] - fff[x][uu,vv]^2)/
        (ee[x][uu,vv]*gg[x][uu,vv] -
                ff[x][uu,vv]^2)] /. {uu->u,vv->v}

     meancurvature[x_][u_,v_]:= Simplify[
        (eee[x][uu,vv]*gg[x][uu,vv] -
                2*fff[x][uu,vv]*ff[x][uu,vv] +
         ggg[x][uu,vv]*ee[x][uu,vv])/
        (2*(ee[x][uu,vv]*gg[x][uu,vv] -
                ff[x][uu,vv]^2))] /. {uu->u,vv->v}

    meancurvaturevf[x_][u_,v_]:= 
        Module[{h,h1,h2,h3,h4},
        h=gg[x][uu,vv]*D[x[uu,vv],uu,uu] -
           ff[x][uu,vv]*D[x[uu,vv],uu,vv] +
           ee[x][uu,vv]*D[x[uu,vv],vv,vv];
        h1 = (h.D[x[uu,vv],uu])*D[x[uu,vv],uu];
        h2 = (h.D[x[uu,vv],vv])*D[x[uu,vv],vv];
        h3 = h - h1 - h2;
        h4 = 2*(ee[x][uu,vv]*gg[x][uu,vv] -
                ff[x][uu,vv]^2);
         Simplify[h3/h4] /. {uu->u,vv->v}]

(* Curvature and Torsion of Curves *)

    geodesiccurvature[surf_,alpha_][t_]:=
        Module[{unc,tmp,crv1,crv2},
        unc=unitnormal[surf][alpha[tt][[1]],alpha[tt][[2]]];
        tmp=surf[alpha[tt][[1]],alpha[tt][[2]]];
        crv1=D[tmp,tt];crv2=D[tmp,{tt,2}];
        Simplify[PowerExpand[Det[
        {crv2,unc,crv1}]/(crv1.crv1)^(3/2) /. tt->t]]]

    geodesictorsion[surf_,alpha_][t_]:=
        Module[{unc,tmp,crv1,unc1},
        unc=unitnormal[surf][alpha[tt][[1]],alpha[tt][[2]]];
        tmp=surf[alpha[tt][[1]],alpha[tt][[2]]];
        crv1=D[tmp,tt];unc1=D[unc,tt];
        Simplify[PowerExpand[Det[
        {unc,unc1,crv1}]/(crv1.crv1)^(3/2) /. tt->t]]]

    kappa[alpha_][t_]:=
        Simplify[Factor[Cross[D[alpha[tt],tt],
        D[alpha[tt],{tt,2}]].
        Cross[D[alpha[tt],tt],D[alpha[tt],{tt,2}]]]]^(1/2)/
        Simplify[Factor[D[alpha[tt],tt].
        D[alpha[tt],tt]]]^(3/2) /. tt->t

    kappan[alpha_][t_]:=
        Simplify[Sqrt[Factor[
        (Sqrt[Factor[D[alpha[tt],tt].
                     D[alpha[tt],tt]]]*D[alpha[tt],{tt,2}] -
        D[Sqrt[Factor[D[alpha[tt],tt].
                     D[alpha[tt],tt]]],tt]*D[alpha[tt],tt]).
        (Sqrt[Factor[D[alpha[tt],tt].
                     D[alpha[tt],tt]]]*D[alpha[tt],{tt,2}] -
        D[Sqrt[Factor[D[alpha[tt],tt].
                     D[alpha[tt],tt]]],tt]*
        D[alpha[tt],tt])]]]/
        Simplify[Factor[D[alpha[tt],tt].
                     D[alpha[tt],tt]]]^(3/2) /. tt->t
    kappa2[alpha_][t_]:=
        D[alpha[tt],{tt,2}].J[D[alpha[tt],tt]]/
         Simplify[D[alpha[tt],tt].
              D[alpha[tt],tt]]^(3/2) /. tt->t

    kappa2c[alpha_][t_]:= Simplify[
        ComplexExpand[Re[D[alpha[t],{t,2}]*
        Conjugate[I*D[alpha[t],t]]]]/
        ComplexExpand[Abs[D[alpha[t],t]],
        TargetFunctions->{Re,Im}]^3]

    kappa2implicit[g_][x_,y_]:=
        (D[g[xx,yy],{xx,2}]*D[g[xx,yy],yy]^2 -
         2D[g[xx,yy],xx,yy]*D[g[xx,yy],xx]*D[g[xx,yy],yy] +
         D[g[xx,yy],{yy,2}]*D[g[xx,yy],xx]^2)/
        (D[g[xx,yy],xx]^2 + D[g[xx,yy],yy]^2)^(3/2) /. 
                         {xx->x,yy->y}

    kappa2polar[rho_][t_]:= (-D[rho[tt],{tt,2}]*rho[tt]
          + 2*D[rho[tt],tt]^2 + rho[tt]^2)/
         (D[rho[tt],tt]^2 + rho[tt]^2)^(3/2) /. tt->t

    normalcurvature[surf_,alpha_][t_]:=
        Module[{unc,tmp,crv1,crv2},
        unc=unitnormal[surf][alpha[tt][[1]],alpha[tt][[2]]];
        tmp=surf[alpha[tt][[1]],alpha[tt][[2]]];
        crv1=D[tmp,tt];crv2=D[tmp,{tt,2}];
        Simplify[PowerExpand[(crv2.unc)/(crv1.crv1) /. tt->t]]]

    tau[alpha_][t_]:= Simplify[Det[
        {D[alpha[tt],tt],D[alpha[tt],{tt,2}],
        D[alpha[tt],{tt,3}]}]]/
        Simplify[Factor[Cross[D[alpha[tt],tt],
        D[alpha[tt],{tt,2}]].Cross[D[alpha[tt],tt],
        D[alpha[tt],{tt,2}]]]] /. tt->t
              
    totalscalarcurvature[a_,b_,alpha_]:=
        Integrate[(kappa2[alpha][t]*
        Sqrt[Simplify[D[alpha[t],u].
        D[alpha[t],u]]])//PowerExpand,{u,a,b}]

    turningangle[alpha_][t_]:= ArcTan[D[alpha[tt],tt][[1]],
               D[alpha[tt],tt][[2]]] /. tt->t
                
    turningnumber[alpha_,{a_,b_},opts___]:=
        Module[{tt,tmp1,tmp2},
            tmp1 = kappa2[alpha][tt]*Sqrt[alpha'[tt].
                alpha'[tt]];
            tmp2 = NIntegrate[Evaluate[tmp1],{tt,a,b},
                AccuracyGoal->2,opts];
            Round[tmp2/N[2Pi]]]

(* Euclidean Motions Acting on
Plane Curves *)

    tl[p_,alpha_][t_]:= p + alpha[t]

    rt[theta_,alpha_][t_]:=
       {Cos[theta]*alpha[t][[1]] - Sin[theta]*alpha[t][[2]],
        Sin[theta]*alpha[t][[1]] + Cos[theta]*alpha[t][[2]]}

    rf[alpha_][t_]:= {alpha[t][[1]],-alpha[t][[2]]}

(* Focal Set Programs *)

    focalkmu[surf_][u_,v_]:= (surf[uu,vv] +
        (1/kmu[surf][uu,vv])*
        unitnormal[surf][uu,vv] /. {uu->u,vv->v})

    focalkpi[surf_][u_,v_]:= (surf[uu,vv] +
        (1/kpi[surf][uu,vv])*
        unitnormal[surf][uu,vv] /. {uu->u,vv->v}) 

    focalk1[surf_][u_,v_]:= surf[uu,vv] +
        (1/k1[surf][uu,vv])*
        unitnormal[surf][uu,vv] /. {uu->u,vv->v}

    focalk2[surf_][u_,v_]:= surf[uu,vv] +
        (1/k2[surf][uu,vv])*
        unitnormal[surf][uu,vv] /. {uu->u,vv->v}

    tangentkmu[x_][u_,v_]:= (D[x[u,vv],vv]/
                Sqrt[gg[x][u,vv]] /. vv->v) /;
                   ff[x][u,v]==fff[x][u,v]==0

    tangentkpi[x_][u_,v_]:= (D[x[uu,v],uu]/
                Sqrt[gg[x][uu,v]] /. uu->u) /;
                   ff[x][u,v]==fff[x][u,v]==0
                
(* Frenet Frame Programs *)

    binormal[alpha_][t_]:= Simplify[Cross[
        D[alpha[tt],tt],D[alpha[tt],{tt,2}]]]/
        Simplify[Factor[Cross[D[alpha[tt],tt],
        D[alpha[tt],{tt,2}]].
        Cross[D[alpha[tt],tt],D[alpha[tt],
        {tt,2}]]]]^(1/2)  /. tt->t
 
    darbouxvector[alpha_][t_]:=
         Sqrt[D[alpha[tt],tt].D[alpha[tt],tt]]*(
                tau[alpha][tt]*tangent[alpha][tt] +
                kappa[alpha][tt]*binormal[alpha][tt]) /. tt->t

    frenetframe[alpha_][t_]:=
        {Line[{alpha[t],alpha[t] + tangent[alpha][t]}],
         Line[{alpha[t],alpha[t] + normal[alpha][t]}],
         Line[{alpha[t],alpha[t] + binormal[alpha][t]}]}

    normal[alpha_][t_]:= Cross[binormal[alpha][t],
                           tangent[alpha][t]]

    tangent[alpha_][t_]:= D[alpha[tt],tt]/
        Simplify[Factor[D[alpha[tt],tt].
          D[alpha[tt],tt]]]^(1/2)  /. tt->t

(* Geodesics *)

    geo[x_][p_,q_,u_,v_]:=
        {p,q,-christoffel[1,1,1][x][u,v]*p^2 -
        2*christoffel[1,1,2][x][u,v]*p*q -
         christoffel[1,2,2][x][u,v]*q^2,
        -christoffel[2,1,1][x][u,v]*p^2 -
        2*christoffel[2,1,2][x][u,v]*p*q -
         christoffel[2,2,2][x][u,v]*q^2}
   
     geo[ee_,ff_,gg_][p_,q_,u_,v_]:=
         {p,q,-christoffel[1,1,1][ee,ff,gg][u,v]*p^2 -
         2*christoffel[1,1,2][ee,ff,gg][u,v]*p*q -
          christoffel[1,2,2][ee,ff,gg][u,v]*q^2,
         -christoffel[2,1,1][ee,ff,gg][u,v]*p^2 -
         2*christoffel[2,1,2][ee,ff,gg][u,v]*p*q -
          christoffel[2,2,2][ee,ff,gg][u,v]*q^2}

    solvegeoeqs[x_,a_:0,{u_,v_},{u0_:0,v0_:0},tfin_,div_,optsnd___]:=
        Flatten[Map[NDSolve[#,{u,v},{ss,0,tfin}]&,
        Table[Join[MapThread[Equal,
        {{u''[ss],v''[ss]},
        Take[geo[x][u'[ss],v'[ss],u[ss],v[ss]],{3,4}]}],
        {u[a]==u0,v[a]==v0,
        u'[a]==Cos[theta],v'[a]==Sin[theta]}],
        {theta,2Pi/div,2Pi,2Pi/div}]],1]

(* Intrinsic Curvature of Curves *)

     intrinsic[fun_,a_:0,{c_:0,d_:0,theta0_:0},optsnd___,
        {smin_:-10,smax_:10}][t_]:=
        Flatten[Module[{x,y,theta},
        {x[t],y[t]} /.
        NDSolve[{x'[ss]==Cos[theta[ss]],
             y'[ss]==Sin[theta[ss]],
             theta'[ss]==fun[ss],
             x[a]==c,y[a]==d,theta[a]==theta0},
             {x,y,theta},{ss,smin,smax},optsnd]]]

     plotintrinsic[fun_,a_:0,{c_:0,d_:0,theta0_:0},optsnd___,
                  {smin_:-10,smax_:10},optspp___]:=
          ParametricPlot[Module[{x,y,theta},
          {x[t],y[t]} /.
          NDSolve[{x'[ss]==Cos[theta[ss]],
             y'[ss]==Sin[theta[ss]],
             theta'[ss]==fun[ss],
             x[a]==c,y[a]==d,theta[a]==theta0},
             {x,y,theta},{ss,smin,smax},optsnd]]//Evaluate,
          {t,smin,smax},AspectRatio->Automatic,optspp];

    plotintrinsic[fun_,optsnd___,
       {smin_:-10,smax_:10},optspp___]:=
       plotintrinsic[fun,0,{0,0,0},{smin,smax},optspp]

    plotintrinsic3d[{kk_,tt_},{a_:0,{p1_:0,p2_:0,p3_:0},
           {q1_:1,q2_:0,q3_:0},{r1_:0,r2_:1,r3_:0}},
                  {smin_:-10,smax_:10},opts___]:=
        ParametricPlot3D[Module[
           {x1,x2,x3,t1,t2,t3,n1,n2,n3,b1,b2,b3},
          {x1[s],x2[s],x3[s]} /.
          NDSolve[{x1'[ss]==t1[ss],
                 x2'[ss]==t2[ss],
                 x3'[ss]==t3[ss],
             t1'[ss]==kk[ss]*n1[ss],
             t2'[ss]==kk[ss]*n2[ss],
             t3'[ss]==kk[ss]*n3[ss],
                 n1'[ss]==-kk[ss]*t1[ss] + tt[ss]*b1[ss],
                 n2'[ss]==-kk[ss]*t2[ss] + tt[ss]*b2[ss],
                 n3'[ss]==-kk[ss]*t3[ss] + tt[ss]*b3[ss],
                     b1'[ss]==-tt[ss]*n1[ss],
                     b2'[ss]==-tt[ss]*n2[ss],
                     b3'[ss]==-tt[ss]*n3[ss],
             x1[a]==p1,x2[a]==p2,x3[a]==p3,
             t1[a]==q1,t2[a]==q2,t3[a]==q3,
             n1[a]==r1,n2[a]==r2,n3[a]==r3,
                 b1[a]==q2*r3 - q3*r2,
                 b2[a]==q3*r1 - q1*r3,
                 b3[a]==q1*r2 - q2*r1},
           {x1,x2,x3,t1,t2,t3,n1,n2,n3,b1,b2,b3},
             {ss,smin,smax}]]//Evaluate,
             {s,smin,smax},opts];

(* Inversion Programs *)
 
    inversion[p_,rho_][x_]:= p + (rho^2/((x - p).(x - p)))*(x - p)

    inversion[rho_][x_]:= (rho^2/x.x)*x

    inversioncurve[p_List,rho_][curve_][t_]:=
                               inversion[p,rho][curve[t]]

    inversioncurve[rho_][curve_][t_]:=
                        inversion[rho][curve[t]]

    inversionsurf[p_List,rho_][surf_][u_,v_]:=
                        inversion[p,rho][surf[u,v]]

    inversionsurf[rho_][surf_][u_,v_]:=
                        inversion[rho][surf[u,v]]

(* Jacobians and Normals*)

   jacobian2[x_][u_,v_]:= Module[{xu,xv,N1},
        xu = D[x[uu,vv],uu];
        xv = D[x[uu,vv],vv];
        N1 = Cross[xu,xv];
        Simplify[N1.N1]] /. {uu->u,vv->v}

    surfacejacobianmatrix[x_][u_,v_]:= {D[x[uu,vv],uu],
          D[x[uu,vv],vv]}  /. {uu->u,vv->v}

    surfacejacobian[x_][u_,v_]:= Det[
        surfacejacobianmatrix[x][u,v].
        Transpose[surfacejacobianmatrix[x][u,v]]]

   surfacenormal[x_][u_,v_]:= Module[{xu,xv},
        xu = D[x[uu,vv],uu];
        xv = D[x[uu,vv],vv];
        Simplify[Cross[xu,xv]] /. {uu->u,vv->v}]
          
    unitnormal[x_][u_,v_]:= Module[{xu,xv,N1},
        xu = D[x[uu,vv],uu];
        xv = D[x[uu,vv],vv];
        N1 = Cross[xu,xv];
        Simplify[N1.N1]^(-1/2)*N1] /. {uu->u,vv->v}

(* Metric (First Fundamental Form) *)

    ee[x_][u_,v_]:= Simplify[D[x[uu,vv],uu].
                        D[x[uu,vv],uu]] /. {uu->u,vv->v}

    ff[x_][u_,v_]:= Simplify[D[x[uu,vv],uu].
                        D[x[uu,vv],vv]] /. {uu->u,vv->v}

    gg[x_][u_,v_]:= Simplify[D[x[uu,vv],vv].
                        D[x[uu,vv],vv]] /. {uu->u,vv->v}

    infarea[x_][u_,v_]:= Sqrt[Simplify[ee[x][u,v]*gg[x][u,v] -
                        ff[x][u,v]^2]]

(* Minimal Surface Programs *)

   analytictominimal[Psi_][t_][u_,v_]:=
        ComplexExpand[Re[E^(-I*t)*Psi[zz]]
        /. zz->u + I*v]

     geomincurve[alpha_][z_]:= Append[alpha[z],
            I*Simplify[PowerExpand[arclength[alpha][z]]]]

     harmonictoanalytic[x_][z_]:=
        Simplify[2x[z/2,z/(2*I)] - x[0,0]]

     harmonictoanalytic[x_][x0_,y0_][z_]:=
        Simplify[2x[(z + x0 - I*y0)/2,
        (z - x0 + I*y0)/(2*I)] - x[x0,y0]]
        
    wei[f_,g_][z_]:= Module[{zz,tmp},
           tmp = Integrate[{(1 - g[zz]^2)*f[zz]/2,
              I*(1 + g[zz]^2)*f[zz]/2,f[zz]*g[zz]},zz];
           Simplify[tmp /. zz->z]]

    weicurvature[f_,g_][z_]:= -16*Abs[D[g[zz],zz]]^2/
            (Abs[f[zz]]^2*(1 + Abs[g[zz]]^2)^4) /. zz->z

    weimetric[f_,g_][z_]:=
       (1/4)*Abs[f[zz]]^2*(1 + Abs[g[zz]]^2)^2 /. zz->z

    weiprime[f_,g_][z_]:= {(1 - g[z]^2)*f[z]/2,
              I*(1 + g[z]^2)*f[z]/2,f[z]*g[z]}

(* Principal Curvatures *)

     kmu[x_][u_,v_]:= ggg[x][u,v]/gg[x][u,v] /;
                   ff[x][u,v]==fff[x][u,v]==0

     kpi[x_][u_,v_]:= eee[x][u,v]/ee[x][u,v] /;
                   ff[x][u,v]==fff[x][u,v]==0

     k1[x_][u_,v_]:= mcurvature[x][u,v] +
         Sqrt[Simplify[mcurvature[x][u,v]^2 -
          gcurvature[x][u,v]]]

     k2[x_][u_,v_]:= mcurvature[x][u,v] -
          Sqrt[Simplify[mcurvature[x][u,v]^2 -
           gcurvature[x][u,v]]]

(* Second Fundamental Form and
Gauss Map Programs *)

    eee[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],uu,uu],D[x[uu,vv],uu],D[x[uu,vv],vv]}]/
        Sqrt[Simplify[D[x[uu,vv],uu].D[x[uu,vv],uu]*
             D[x[uu,vv],vv].D[x[uu,vv],vv] -
             D[x[uu,vv],uu].
             D[x[uu,vv],vv]^2]]] /. {uu->u,vv->v}


    fff[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],uu,vv],D[x[uu,vv],uu],D[x[uu,vv],vv]}]/
        Sqrt[Simplify[D[x[uu,vv],uu].D[x[uu,vv],uu]*
             D[x[uu,vv],vv].D[x[uu,vv],vv] -
             D[x[uu,vv],uu].
             D[x[uu,vv],vv]^2]]] /. {uu->u,vv->v}

    ggg[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],vv,vv],D[x[uu,vv],uu],D[x[uu,vv],vv]}]/
        Sqrt[Simplify[D[x[uu,vv],uu].D[x[uu,vv],uu]*
             D[x[uu,vv],vv].D[x[uu,vv],vv] -
             D[x[uu,vv],uu].
             D[x[uu,vv],vv]^2]]] /. {uu->u,vv->v}


    eeee[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],uu,uu],
        D[x[uu,vv],uu],
        D[x[uu,vv],vv]}]] /. {uu->u,vv->v}

    ffff[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],uu,vv],
        D[x[uu,vv],uu],
        D[x[uu,vv],vv]}]] /. {uu->u,vv->v}

    gggg[x_][u_,v_]:= Simplify[Det[{
        D[x[uu,vv],vv,vv],
        D[x[uu,vv],uu],
        D[x[uu,vv],vv]}]] /. {uu->u,vv->v}

        weingarten[x_][u_,v_]:=
       {{eee[x][u,v]*gg[x][u,v] - fff[x][u,v]*ff[x][u,v],
         fff[x][u,v]*ee[x][u,v] - eee[x][u,v]*ff[x][u,v]},
        {fff[x][u,v]*gg[x][u,v] - ggg[x][u,v]*ff[x][u,v],
         ggg[x][u,v]*ee[x][u,v] - fff[x][u,v]*ff[x][u,v]}}/
        (ee[x][u,v]*gg[x][u,v] - ff[x][u,v]^2)

(* Vector Analysis Programs *)
 
    der[v_List][ww_][x_,y_]:= {v[[1]]*D[ww[xx,yy],xx],
              v[[2]]*D[ww[xx,yy],yy]} /. {xx->x,yy->y}

    der[v_List][ww_][x_,y_,z_]:= {v[[1]]*D[ww[xx,yy,zz],xx],
                                  v[[2]]*D[ww[xx,yy,zz],yy],
                  v[[3]]*D[ww[xx,yy,zz],zz]} /. {xx->x,yy->y,zz->z}

    grad[g_][x_,y_]:= {D[g[xx,yy],xx],
        D[g[xx,yy],yy]} /. {xx->x,yy->y}

    grad[g_][x_,y_,z_]:=
        {D[g[xx,yy,zz],xx],D[g[xx,yy,zz],yy],
         D[g[xx,yy,zz],zz]} /. {xx->x,yy->y,zz->z}

    gmap[g_][x_,y_]:= grad[g][x,y]/
        (grad[g][x,y].grad[g][x,y])^(1/2)

    gmap[g_][x_,y_,z_]:= grad[g][x,y,z]/
        (grad[g][x,y,z].grad[g][x,y,z])^(1/2)

    divergence[ww_][x_,y_]:= D[ww[xx,yy],xx][[1]] +
            D[ww[xx,yy],yy][[2]] /. {xx->x,yy->y}

    divergence[ww_][x_,y_,z_]:= D[ww[xx,yy,zz],xx][[1]] +
                                D[ww[xx,yy,zz],yy][[2]] +
            D[ww[xx,yy,zz],zz][[3]] /. {xx->x,yy->y,zz->z}

    laplace[g_][x_,y_]:= D[g[xx,yy],{xx,2}] +
        D[g[xx,yy],{yy,2}] /. {xx->x,yy->y}

    laplace[g_][x_,y_,z_]:= D[g[xx,yy,zz],{xx,2}] +
        D[g[xx,yy,zz],{yy,2}] + D[g[xx,yy,zz],{zz,2}] /.
        {xx->x,yy->y,zz->z}

(* Miscellaneous Programs *)
              
    asymeq1[x_][u_,v_]:=
        Module[{uuu,a,xxx,eqa1,eqa2},
        xxx = Solve[eeee[x][uuu,v]*a^2 +
        2*ffff[x][uuu,v]*a +
        gggg[x][uuu,v]==0,a];
        eqa1 = u'[v]== a /. xxx[[1]];
        eqa2 = u'[v]== a /. xxx[[2]];
        {eqa1,eqa2} /. {a->u'[v],uuu->u[v]}]

    asymeq2[x_][u_,v_]:=
        Module[{vvv,a,xxx,eqa1,eqa2},
        xxx = Solve[eeee[x][u,vvv] +
        2*ffff[x][u,vvv]*b +
        gggg[x][u,vvv]*b^2==0,b];
        eqa1 = v'[u]== b /. xxx[[1]];
        eqa2 = v'[u]== b /. xxx[[2]];
        {eqa1,eqa2} /. {b->v'[u],vvv->v[u]}]

    circle3point[{p1_,q1_},{p2_,q2_},{p3_,q3_}]:=
      Circle[{(p2^2*q1 - p3^2*q1 - p1^2*q2 + p3^2*q2 -
      q1^2*q2 + q1*q2^2 + p1^2*q3 - p2^2*q3 + q1^2*q3 -
      q2^2*q3 - q1*q3^2 + q2*q3^2)/
      (2*(p2*q1 - p3*q1 - p1*q2 + p3*q2 + p1*q3 - p2*q3)), 
      (p1^2*p2 - p1*p2^2 - p1^2*p3 + p2^2*p3 + p1*p3^2 - 
      p2*p3^2 + p2*q1^2 - p3*q1^2 - p1*q2^2 + p3*q2^2 + 
      p1*q3^2 - p2*q3^2)/
      (2*(p2*q1 - p3*q1 - p1*q2 + p3*q2 + p1*q3 - p2*q3))},
      Abs[((p1^2 - 2*p1*p2 + p2^2 + q1^2 -
      2*q1*q2 + q2^2)^(1/2)*(p1^2 - 2*p1*p3 + p3^2 +
      q1^2 - 2*q1*q3 + q3^2)^(1/2)*(p2^2 - 2*p2*p3 +
      p3^2 + q2^2 - 2*q2*q3 + q3^2)^(1/2))/(2*(-(p2*q1) +
      p3*q1 + p1*q2 - p3*q2 - p1*q3 + p2*q3))]]

     monge[h_][u_,v_]:= {u,v,h[u,v]}

     mongepolar[g_][r_,theta_]:=
        {r*Cos[theta],r*Sin[theta],g[r,theta]}
     
     nateq[alpha_][k2_,s_]:= ToRules[Eliminate[
        {s==arclength[alpha][t]//PowerExpand,
         k2==kappa2[alpha][t]//PowerExpand//Simplify},t]]

     paramtoimp[alpha_,{x_,y_}]:=
            Eliminate[{x,y}==alpha[t],t]
           
     polarize[func_][r_,theta_]:=
        func[r*Cos[theta],r*Sin[theta]]
     
     stereoinj[a_][p_]:=Append[2*a^2*p,
                          a*(p.p - a^2)]/(p.p + a^2)

     stereoproj[a_][q_]:=a*Drop[q,-1]/(a - Last[q])

     stereoinjcomplex[g_][z_]:=
            {(2*Re[g[z]])/(Im[g[z]]^2 + Re[g[z]]^2 + 1), 
             (2*Im[g[z]])/(Im[g[z]]^2 + Re[g[z]]^2 + 1), 
             (Im[g[z]]^2 + Re[g[z]]^2 - 1)/
             (Im[g[z]]^2 + Re[g[z]]^2 + 1)}

     umeqs[k_][x_][u_,v_]:=
       {ee[x][u,v],ff[x][u,v],gg[x][u,v]} -
       {k*eee[x][u,v],k*fff[x][u,v],k*ggg[x][u,v]}

End[]

EndPackage[]
\
\>", "Input",
  PageWidth->Infinity,
  InitializationCell->True,
  ShowSpecialCharacters->False],

Cell[BoxData[
    \("For a list of programs type csprogs."\)], "Print"],

Cell[BoxData[
    \("CSPROGS`"\)], "Output"],

Cell[BoxData[
    \("t->arclengthprime[alpha][t] is the derivative of the arc length \
function of the curve alpha:(a,b)->R^n."\)], "Output"],

Cell[BoxData[
    \("t->arclength[alpha][t] is the arc length function of the curve \
alpha:(a,b)->R^n computed using Integrate."\)], "Output"],

Cell[BoxData[
    \("length[a,b][alpha] is the length of the curve alpha:(a,b)->R^n \
computed symbolically."\)], "Output"],

Cell[BoxData[
    \("lengthn[a,b][alpha] is the length of the curve alpha:(a,b)->R^n \
computed using NIntegrate."\)], "Output"],

Cell[BoxData[
    \("t->lengthnds[a,b][alpha][t] is the length of the curve \
alpha:(a,b)->R^n over the interval [a,t] computed using NDSolve over the \
interval [a,b]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->brioschicurvature[x][u,v] is the Gaussian curvature of the \
patch x:U->R^n computed using Brioschi's formula.  \
{u,v}->brioschicurvature[ee,ff,gg][u,v] is the Gaussian curvature of the \
metric \n ds^2 = ee*du^2 + 2*ff*du dv + gg*dv^2."\)], "Output"],

Cell[BoxData[
    \("{u,v}->christoffel[i,j,k][x][u,v] is a Christoffel symbol of the \
metric tensor of the patch x:U->R^n. {u,v}->christoffel[i,j,k][ee,ff,gg][u,v] \
is a Christoffel symbol of the metric \n ds^2 = ee*du^2 + 2*ff*du dv + \
gg*dv^2."\)], "Output"],

Cell[BoxData[
    \("ctor[z] converts a complex number z to an ordered pair of real numbers \
whose components are the real and imaginary parts of z; also works for lists \
of complex numbers."\)], "Output"],

Cell[BoxData[
    \("rtoc[{x,y}] converts an ordered pair {x,y} of real numbers to a \
complex number whose real part is x and whose imaginary part is y; also works \
for lists of ordered pairs."\)], "Output"],

Cell[BoxData[
    \("J is the linear map J:R^2->R^2 defined by that maps {p1,p2} onto \
{-p2,p1}."\)], "Output"],

Cell[BoxData[
    \("Cross[v,w] is the cross product of the vectors v={v1,v2,v3} and \
w={w1,w2,w3}."\)], "Output"],

Cell[BoxData[
    \("t->evolute[alpha][t] is the evolute of the plane curve alpha.  \
t->evolute[n,alpha][t] is the nth evolute of the plane curve alpha."\)], \
"Output"],

Cell[BoxData[
    \("t->involute[alpha,c][t] is the involute of alpha starting at alpha[c], \
that is, the curve traced by a point on a thread attached to alpha at \
alpha[c] that is kept taut as it is unwound from alpha. t->involute[alpha][t] \
is t->involute[alpha,0][t]."\)], "Output"],

Cell[BoxData[
    \("t->involutends[a,b][alpha][t] is the involute of alpha starting at \
alpha[a] computed over the interval [a,b] using NDSolve. It is the curve \
traced by a point on a thread attached to alpha at alpha[a] that is kept taut \
as it is unwound from alpha."\)], "Output"],

Cell[BoxData[
    \("t->normalline[alpha][s,t] is the normal line of length s emanating \
from a plane curve alpha at alpha[t]."\)], "Output"],

Cell[BoxData[
    \("t->osculatingcircle[alpha][t] is the osculating circle to the plane \
curve alpha at alpha[t]."\)], "Output"],

Cell[BoxData[
    \("t->tangentline[alpha][s,t] is the tangent line of length s emanating \
from the plane curve alpha at alpha[t]."\)], "Output"],

Cell[BoxData[
    \("plottl[alpha,t0,{tmin,tmax},opts] plots the tangent line emanating \
from alpha at alpha[t0]."\)], "Output"],

Cell[BoxData[
    \("t->parcurve[alpha][s][t] is one component of the curve parallel to a \
plane curve alpha at a distance Abs[s], where Abs[s] is small. The other \
component is t->parcurve[alpha][-s][t]."\)], "Output"],

Cell[BoxData[
    \("t->pedal[{a,b},alpha][t] is the pedal curve of the plane curve alpha \
with respect to the point {a,b}.  t->pedal[alpha][t] is the pedal curve of \
the plane curve alpha with respect to the origin."\)], "Output"],

Cell[BoxData[
    \("t->rollcurve[alpha,b,h,c][t] is the parametrized curve traced out by a \
point P attached to a circle of radius b rolling along a plane curve alpha.  \
The distance of P to the center of the rolling circle is h, and alpha[c] is \
the point at which the circle starts rolling."\)], "Output"],

Cell[BoxData[
    \("t->curveonsurf[surf,alpha][t] is the composition of the patch \
surf:U->R^3 with the curve alpha:(a,b)->U."\)], "Output"],

Cell[BoxData[
    \("t->helical[alpha,a][t] is the helical curve in R^3 with slant a over \
the plane curve alpha. helical[alpha][f][t] is the helical curve in R^3 with \
slant function f over the plane curve alpha."\)], "Output"],

Cell[BoxData[
    \("t->inscurve[n,a,alpha][t] is the curve that results when the value a \
is inserted as the nth coordinate into the parametrization of the curve \
alpha."\)], "Output"],

Cell[BoxData[
    \("t->kappa23d[alpha][t] is the space curve whose first two components \
are those of the plane curve alpha, and whose third component is the signed \
curvature of alpha. t-> kappa23d[mag,alpha][t]  is the space curve whose \
first two components are those of the plane curve alpha, and whose third \
component is the signed curvature of alpha multiplied by mag."\)], "Output"],

Cell[BoxData[
    \("t->writhe[alpha][t] is a curve in R^3 that is a twisted generalization \
of the plane curve t->alpha[t]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cone[{p1,p2,p3},gamma][u,v] is the cone with vertex {p1,p2,p3} \
over the curve gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("cylinder[{q1,q2,q3},gamma][u,v] is the cylinder in the direction \
{q1,q2,q3} over the curve gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->genhel[alpha][sl][u,v] is the generalized helicoid with slant  \
sl  generated by the plane curve alpha."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gensurfrev[alpha,gamma][u,v] is the generalized surface of \
revolution generated by the plane curves alpha and gamma."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ruled[alpha,gamma][u,v] is the ruled patch  generated by the \
curves alpha and gamma."\)], "Output"],

Cell[BoxData[
    \("{u,v}->surfast[n,alpha][u,v] is the astroidial patch of degree n \
generated by the plane curve alpha."\)], "Output"],

Cell[BoxData[
    \("{u,v}->surfrev[alpha][u,v] is the surface of revolution generated by \
the plane curve alpha."\)], "Output"],

Cell[BoxData[
    \("{u,v}->twist[a,b,gamma][u,v] is the twisted patch  generated by a \
curve gamma:(c,d)->R^2. The Moebius strip and Klein bottle are special \
cases."\)], "Output"],

Cell[BoxData[
    \("{u,v}->binormalsurf[alpha][u,v] is the surface generated by the curve \
alpha:(a,b)->R^3 and its binormal vector field."\)], "Output"],

Cell[BoxData[
    \("{u,v}->normalsurf[alpha][u,v] is the surface generated from the curve \
alpha:(a,b)->R^3 and its normal vector field."\)], "Output"],

Cell[BoxData[
    \("{u,v}->perpsurf[phi,alpha][u,v] is a 1-parameter family of surfaces \
generated by the curve alpha:(a,b)->R^3 and some normal vector field to \
alpha.  Special cases are {u,v}->perpsurf[0,alpha][u,v], which is the normal \
surface of alpha, and {u,v}->perpsurf[Pi/2,alpha][u,v], which is the binormal \
surface of alpha."\)], "Output"],

Cell[BoxData[
    \("{t,theta}->seashell[gamma][r][t,theta] is the tube of variable radius \
r t about the curve gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tandev[alpha][u,v] is the developable surface generated by the \
curve alpha:(a,b)->R^n and its tangent vector field."\)], "Output"],

Cell[BoxData[
    \("{u,v}->transsurf[alpha,gamma][u,v] is the translation surface \
{u,v}->alpha[u,v] + gamma[u,v] generated by the curve \
alpha,gamma:(a,b)->R^n."\)], "Output"],

Cell[BoxData[
    \("{t,theta}->tubecurve[gamma][r][t,theta] is the tube of radius r about \
the curve gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("{t,theta}->vartube[gamma][r][t,theta] is the tube of variable radius \
r[t] about the curve gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->parsurf[x][r][u,v] is the parallel patch  at a distance r from \
a patch  x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pedsurf[{a,b,c},x][u,v] is the pedal patch of the patch x with \
respect to the point {a,b,c}. {u,v}->pedsurf[x][u,v] is the pedal patch  of \
the patch x with respect to the origin."\)], "Output"],

Cell[BoxData[
    \("{u,v}->stretch[a,b,c,surf][u,v] is the patch surf, but stretched by \
a,b,c."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tangentplane[x][u0,v0][u,v] is the tangent plane to the patch  \
x at x[u0,v0]."\)], "Output"],

Cell[BoxData[
    \("plottp[x,{u0,v0},{umin,umax},{vmin,vmax},opts] plots a patch  x and \
its tangent plane at x[u0,v0]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gcurvature[x][u,v] is the Gaussian curvature of the patch \
x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->mcurvature[x][u,v] is the mean curvature of the patch \
x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gaussiancurvature[x][u,v] is the Gaussian curvature of the \
patch x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->meancurvature[x][u,v] is the mean curvature of the patch \
x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->meancurvaturevf[x][u,v] is the mean curvature vector field of \
the patch x:U->R^n."\)], "Output"],

Cell[BoxData[
    \("geodesiccurvature[surf,alpha][t]  calculates the geodesic curvature of \
the curve t->surf[alpha[t]]  contained in the parametrized surface \
surf:U->R^3, where alpha is a plane curve whose trace is contained in the \
subset U of R^2."\)], "Output"],

Cell[BoxData[
    \("geodesictorsion[surf,alpha][t]  calculates the geodesic torsion of the \
curve t->surf[alpha[t]]  contained in the parametrized surface surf:U->R^3, \
where alpha is a plane curve whose trace is contained in the subset U of \
R^2."\)], "Output"],

Cell[BoxData[
    \("t->kappa[alpha][t] is the unsigned curvature of the curve \
alpha:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("t->kappan[alpha][t] is the unsigned curvature of the curve \
alpha:(a,b)->R^n."\)], "Output"],

Cell[BoxData[
    \("t->kappa2[alpha][t] is the signed curvature of the plane curve alpha."\
\)], "Output"],

Cell[BoxData[
    \("t->kappa2c[alpha][t] is the signed curvature of the complex plane \
curve alpha."\)], "Output"],

Cell[BoxData[
    \("{x,y}->kappa2implicit[g][x,y] is the signed curvature of the plane \
curve g[x,y]==0."\)], "Output"],

Cell[BoxData[
    \("t->kappa2polar[rho][t] is the signed curvature of the plane curve \
whose radius function is rho."\)], "Output"],

Cell[BoxData[
    \("normalcurvature[surf,alpha][t]  calculates the normal curvature of the \
curve t->surf[alpha[t]]  contained in the parametrized surface surf:U->R^3, \
where alpha is a plane curve whose image is contained in the subset U of \
R^2."\)], "Output"],

Cell[BoxData[
    \("t->tau[alpha][t] is the torsion of the curve alpha:(a,b)->R^3."\)], \
"Output"],

Cell[BoxData[
    \("totalscalarcurvature[a,b,alpha] is the total curvature of the curve \
alpha:(a,b)->R^2."\)], "Output"],

Cell[BoxData[
    \("t->turningangle[alpha][t] is the turning angle of the curve \
alpha:(a,b)->R^2."\)], "Output"],

Cell[BoxData[
    \("turningnumber[alpha,{a,b},opts] is the turning number of the closed \
curve alpha:(a,b)->R^2."\)], "Output"],

Cell[BoxData[
    \("t->tl[p,alpha][t] is the curve alpha:(a,b)->R^n translated by p."\)], \
"Output"],

Cell[BoxData[
    \("t->rt[theta,alpha][t] is the curve alpha:(a,b)->R^2 rotated by theta."\
\)], "Output"],

Cell[BoxData[
    \("t->rf[p,alpha][t] is the reflection about the horizontal axis of the \
curve alpha:(a,b)->R^2."\)], "Output"],

Cell[BoxData[
    \("{u,v}->focalkmu[x][u,v] is a parametrization of the focal set of a \
principal patch x corresponding to the principal curvature kmu."\)], "Output"],

Cell[BoxData[
    \("{u,v}->focalkpi[x][u,v] is a parametrization of the focal set of a \
principal patch x corresponding to the principal curvature kpi."\)], "Output"],

Cell[BoxData[
    \("{u,v}->focalk1[x][u,v] is a parametrization of the focal set of a \
patch x corresponding to the principal curvature k1."\)], "Output"],

Cell[BoxData[
    \("{u,v}->focalk2[x][u,v] is a parametrization of the focal set of a \
patch x corresponding to the principal curvature k2."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tangentkmu[x][u,v] is an eigenvector of unit length of a \
principal patch x corresponding to the principal curvature kmu."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tangentkpi[x][u,v] is an eigenvector of unit length of a \
principal patch x corresponding to the principal curvature kpi."\)], "Output"],

Cell[BoxData[
    \("t->binormal[alpha][t] is the binormal of the curve \
alpha:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("t->darbouxvector[gamma][t] is the Darboux vector field of the curve \
gamma:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("t->frenetframe[alpha][t] is the Frenet frame of the curve \
alpha:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("t->normal[alpha][t] is the normal of the curve alpha:(a,b)->R^3."\)], \
"Output"],

Cell[BoxData[
    \("t->tangent[alpha][t] is the tangent of the curve \
alpha:(a,b)->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->geo[x][p,q,u,v] gives the system of first order differential \
equations for a patch x:U->R^n. geo[ee,ff,gg][p,q,u,v] gives the system of \
first order differential equations for the geodesics of a metric with \
coefficients ee,ff,gg."\)], "Output"],

Cell[BoxData[
    \("solvegeoeqs[x,a:0,{u,v},{u0:0,v0:0},tfin,div,optsnd___] solves the \
geodesic equations of the patch x using NDSolve."\)], "Output"],

Cell[BoxData[
    \("intrinsic[fun,a,{c,d,theta0},optsnd,{smin,smax}] is a curve alpha \
starting at {c,d} and initial turning angle theta0 such that the  signed \
curvature of alpha is fun."\)], "Output"],

Cell[BoxData[
    \("plotintrinsic[fun,a,{c,d,theta0},optsnd, {smin,smax}, optspp] plots a \
curve alpha starting at {c,d} and initial turning angle theta0 such that the  \
signed curvature of alpha is fun."\)], "Output"],

Cell[BoxData[
    \("plotintrinsic3d[{kk,tt},{a,{p1,p2,p3},{q1,q2,q3}, \
{r1,r2,r3}},{smin,smax},opts] plots a unit-speed space curve alpha with \
curvature kk and torsion tt such that alpha[a:0]={p1:0,p2:0,p3:0}, \
alpha'[a:0]={q1:1,q2:0,q3:0} and alpha''[a:0]=kk[0]*{r1:0,r2:1,r3:0}."\)], \
"Output"],

Cell[BoxData[
    \("x->inversion[p,rho][x] is the inversion of a point x with respect to a \
sphere in R^n of radius rho centered at p. inversion[rho][x] is the inversion \
of a point x with respect to a sphere in R^n of radius rho centered at the \
origin."\)], "Output"],

Cell[BoxData[
    \("t->inversioncurve[p,rho][alpha][t] is the inversion of a curve alpha \
with respect to a sphere in R^n of radius rho centered at p.  \
t->inversioncurve[rho][alpha][t] is the inversion of a curve alpha with \
respect to a sphere in R^n of radius rho centered at the origin."\)], "Output"],

Cell[BoxData[
    \("{u,v}->inversionsurf[p,rho][surf][u,v] is the inversion of a patch  \
surf with respect to a sphere in R^n of radius rho centered at p.  \
{u,v}->inversionsurf[rho][surf][u,v] is the inversion of a patch surf with \
respect to a sphere in R^n of radius rho centered at the origin."\)], "Output"],

Cell[BoxData[
    \("{u,v}->jacobian2[x][u,v] is the square of the determinant of the \
Jacobian matrix of the patch x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->surfacejacobianmatrix[x][u,v] is the Jacobian matrix of the \
patch x:U->R^n."\)], "Output"],

Cell[BoxData[
    \("{u,v}->surfacejacobian[x][u,v] is the determinant of the product of \
the Jacobian matrix of the patch x:U->R^n with its transpose."\)], "Output"],

Cell[BoxData[
    \("{u,v}->surfacenormal[x][u,v] is the cross product of the tangent \
vectors xu and xv of the patch x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("{u,v}->unitnormal[x][u,v] is the unit normal to the patch x:U->R^3. It \
is the Gauss map of x."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ee[x][u,v] is the first coefficient of the metric tensor (or \
first fundamental form) of the patch x:U->R^n.  The usual mathematics symbol \
is E."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ff[x][u,v] is the second coefficient of the metric tensor of \
the patch x:U->R^n  The usual mathematics symbol is F."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gg[x][u,v] is the third coefficient of the metric tensor of the \
patch x:U->R^n.  The usual mathematics symbol is G."\)], "Output"],

Cell[BoxData[
    \("{u,v}->infarea[x][u,v] is the infinitesimal area of the metric tensor \
(or first fundamental form) of the patch x:U->R^n."\)], "Output"],

Cell[BoxData[
    \("{u,v}->analytictominimal[Psi][t][u,v] is the minimal patch  \
corresponding to the analytic n-tuple z->E^(-I*t)*Psi[z]."\)], "Output"],

Cell[BoxData[
    \("z->geomincurve[alpha][z] is the minimal curve in C^3 that contains a \
plane curve alpha:(a,b)->R^3 as a geodesic."\)], "Output"],

Cell[BoxData[
    \("z->harmonictoanalytic[x][z] is the analytic function whose real part \
is the harmonic n-tuple {u,v}->x[u,v] and whose imaginary part vanishes at \
{0,0}. harmonictoanalytic[x][x0,y0][z] is the analytic function whose real \
part is {u,v}->x[u,v] and whose imaginary part vanishes at {x0,y0}."\)], \
"Output"],

Cell[BoxData[
    \("z->wei[f,g][z] is the triple of meromorphic functions constructed from \
meromorphic functions f and g via the Weierstrass representation."\)], \
"Output"],

Cell[BoxData[
    \("z->weicurvature[f,g][z] is the Gaussian curvature of the Weierstrass \
patch determined by meromorphic functions f and g."\)], "Output"],

Cell[BoxData[
    \("z->weimetric[f,g][z] is the scaling function of the metric of the \
Weierstrass patch determined by meromorphic functions f and g."\)], "Output"],

Cell[BoxData[
    \("z->weiprime[f,g][z] is integrand of the Weierstrass \
representation."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kmu[x][u,v] is a principal curvature of a patch x for which \
ff[x] = fff[x] = 0."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kpi[x][u,v] is a principal curvature of a patch x for which \
ff[x] = fff[x] = 0."\)], "Output"],

Cell[BoxData[
    \("{u,v}->k1[x][u,v] is a principal curvature of a patch x (k1 is greater \
than or equal to k2)."\)], "Output"],

Cell[BoxData[
    \("{u,v}->k2[x][u,v] is a principal curvature of a patch x (k1 is greater \
than or equal to k2)."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eee[x][u,v] is the first coefficient of the second fundamental \
form of the patch x:U->R^3. The usual mathematics symbol is e."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eeee[x][u,v] is the first coefficient of the second fundamental \
form of the patch x:U->R^3 multiplied by the infinitesimal area.  The Gauss \
symbol is D."\)], "Output"],

Cell[BoxData[
    \("{u,v}->fff[x][u,v] is the second coefficient of the second fundamental \
form of the patch x:U->R^3.  The usual mathematics symbol is f."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ffff[x][u,v] is the second coefficient of the second \
fundamental form of the patch x:U->R^3 multiplied by the infinitesimal area.  \
The Gauss symbol is D'."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ggg[x][u,v] is the third coefficient of the second fundamental \
form of the patch x:U->R^3.  The usual mathematics symbol is g."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gggg[x][u,v] is the third coefficient of the second fundamental \
form of the patch x:U->R^3 multiplied by the infinitesimal area.  The Gauss \
symbol is D''."\)], "Output"],

Cell[BoxData[
    \("{u,v}->weingarten[x][u,v] is the matrix of the shape operator of the \
patch x:U->R^3 with respect to xu and xv."\)], "Output"],

Cell[BoxData[
    \("der[v][ww][x,y] is the derivative of the vector field ww on R^2 in the \
direction v.  der[v][ww][x,y,z] is the derivative of the vector field ww on \
R^3 in the direction v."\)], "Output"],

Cell[BoxData[
    \("divergence[ww][x,y] is the divergence of a vector field ww on R^2.  \
divergence[ww][x,y,z] is the divergence of the vector field ww on R^3."\)], \
"Output"],

Cell[BoxData[
    \("gmap[g][x,y] is the Gauss map for a level curve of a function \
g:R^2->R.  gmap[g][x,y,z] is the Gauss map for a level surface of a function \
g:R^3->R."\)], "Output"],

Cell[BoxData[
    \("grad[g][x,y] is the gradient of a function g:R^2->R. grad[g][x,y,z] is \
the gradient of a function g:R^3->R."\)], "Output"],

Cell[BoxData[
    \("laplace[g][x,y] is the Laplacian of a function g:R^2->R. \
laplace[g][x,y,z] is the Laplacian of a function g:R^3->R."\)], "Output"],

Cell[BoxData[
    \("asymeq1[x][u,v] is the differential equation eee[x][u,v]u'[v]^2 + \
2*fff[x][u,v]u'[v] + ggg[x][u,v]==0 of the patch x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("asymeq2[x][u,v] is the differential equation eee[x][u,v] + \
2fff[x][u,v]v'[u] + ggg[x][u,v]v'[u]^2==0 of the patch x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("circle3point[{p1,q1},{p2,q2},{p3,q3}] is the circle in the plane \
passing through the points {p1,q1},{p2,q2},{p3,q3}."\)], "Output"],

Cell[BoxData[
    \("{u,v}->monge[h][u,v] is the parametrization {u,v}->{u,v,h[u,v]} of the \
graph of h:U->R, where U is an open subset of R^2."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->mongepolar[g][r,theta] is the parametrization \
{r,theta}->{r*Cos[theta],r*Sin[theta],g[r,theta]} of the graph of g:U->R, \
where U is an open subset of R^2."\)], "Output"],

Cell[BoxData[
    \("nateq[alpha][k2,s] sometimes can be used to find the natural equations \
of a plane curve alpha."\)], "Output"],

Cell[BoxData[
    \("paramtoimp[alpha,{x,y}] attempts to convert the parametric form of a \
curve alpha to the implicit form.  The result is a number of equations, one \
of which is the implicit form of the curve.  The command will usually not \
succeed if the components of alpha are not rational functions."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->polarize[func][r,theta] is the composition of the maps \
{u,v}->func[u,v] and {r,theta}->{r*Cos[theta],r*Sin[theta]}, where \
{u,v}->func[u,v] is an n-tuple of functions."\)], "Output"],

Cell[BoxData[
    \("p->stereoinj[a][p] is the stereographic injection from R^n to a sphere \
of radius a centered at the origin in R^(n+1)."\)], "Output"],

Cell[BoxData[
    \("z->stereoinjcomplex[g][z] is the composition stereographic of \
stereoinj:C->S^2(1) with a function g:C->C."\)], "Output"],

Cell[BoxData[
    \("q->stereoproj[a][q] is the stereographic projection from the sphere of \
radius a centered at the origin in R^(n+1) to R^n."\)], "Output"],

Cell[BoxData[
    \("umeqs[k][x][u,v] attempts to find the umbilic points of the patch \
x:U->R^3."\)], "Output"],

Cell[BoxData[
    \("CSPROGS`Private`"\)], "Output"],

Cell[BoxData[
    RowBox[{\(SetDelayed::"write"\), \(\(:\)\(\ \)\), "\<\"Tag \\!\\(Cross\\) \
in \\!\\(v_List \[Cross] w_List\\) is Protected. \\!\\(\\*ButtonBox[\\\"More\
\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::write\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \($Failed\)], "Output"],

Cell[BoxData[
    \("CSPROGS`Private`"\)], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\"SURFS\" (List of parametrized surfaces)", "Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{

Cell["\<\
(*Fri May 29 18:42:40 BST 1998*)

(*:Title: SURFS.m *)

(*:Author: Alfred Gray *)

(* Copyright 1994-1998 by Alfred Gray *)

(*:Package Version: 1.0 *)

(*:Mathematica Versions: 2.2, 3.0 *)

(*:Summary: 
This package consists of definitions of parametrizations of 
surfaces.
*)

(*:Keywords:
agnesirev, apple, astell, astroidmincurve, bohdom, bour, bourmincurve, \
bourpolar, boy, cardioidmincurve, catalan, catalandef, catalanmincurve, \
catenoid, catenoidasym, catenoidiso, catenoidmincurve, cayleysexticmincurve, \
circleinvolutemin, circleinvolutemincurve, circularcone, circularcylinder, \
circularmembrane, circularmembranemovie, circularmembraneplot, \
cissoidmincurve, clothoidmin, clothoidmincurve, cnccosurfrev, cnccotcheb, \
cnchyprofilemincurve, cnchysurfrev, cnchytcheb, cossurface, \
cossurfaceimplicit, costa, costamincurve, cpcprofilemincurve, cpcsurfrev, \
crosscap, crosscapimplicit, deltoidinvolutemin, deltoidinvolutemincurve, \
deltoidmin, deltoidmincurve, dini, dinitcheb, earth, eighteight, \
eightsurface, ellhypcyclide, ellipsemin, ellipsemincurve, ellipsoid, \
ellipsoidimplicit, ellipticalhyperboloidminus, ellipticalhyperboloidplus, \
ellipticcoor, ellipticparaboloid, ellipticparaboloidimplicit, enneper, \
ennepercatenoidmincurve, ennepercatenoidpolar, ennepermincurve, enneperpolar, \
epicycloidmincurve, equihom1implicit, equihom2implicit, equihom3implicit, \
equihom4implicit, equihom5implicit, equihom6implicit, exptwist, exptwistasym, \
flattorus, funnel, funnelasym, gencube, genhypparab, genoctahedron, \
goursatimplicit, handkerchief, heart, helicoid, helicoidprin, heltocat, \
henneberg, hennebergmincurve, hyperbolamincurve, hyperbolicparaboloid, \
hyperbolicparaboloidimplicit, hyperboloid, hyperboloidimplicit, \
hypocycloidinvolutemin, hypocycloidinvolutemincurve, hypocycloidmincurve, \
hy2sheet, hy2sheetimplicit, invertedcircularcone, invertedcircularcylinder, \
invertedtorus, jorgemeeksmincurve, jorgemeeksmincurveprime, jorgemeekspolar, \
kidney, kleinbottle, kleinbottlebis, kleinbottlewri, klein4, kuen, kuentcheb, \
kazoolaimplicit, kummerimplicit, lemniscatemin, lemniscatemincurve, \
logmincurve, logminpolar, logspiralmincurve, menn, mercatorellipsoid, \
mercatorsphere, mincurvs, moebcirc, moebiusstrip, monkeysaddle, \
monkeysaddlepolar, nephroidmincurve, nielsenspiralmincurve, nodoidnds, \
parabolamin, parabolamincurve, paraboliccoor, paraboliccyclide, paraboloid, \
pear, pearbis, perturbedms, perturbedmspolar, pillow, plane, planepolar, \
planetocat, plucker, pluckerpolar, pseudocrosscap, pseudosphere, \
pseudospherebis, pseudospheretcheb, rconoid, richmond, richmondmincurve, \
richmondpolar, roman, rosemin, rosemincurve, scherk, scherkimplicit, \
scherktowermincurveprime, scherk5, scherk5implicit, scmincurve, shoe, \
shoeasym, sievert, sinovaloid, sinsurface, sinsurfaceimplicit, snail, sphere, \
sphereimplicit, squaremembrane, squaremembranemovie, squaremembraneplot, \
stereographicellipsoid, stereographicsphere, stereographicspherepolar, \
swallowtail, tetrahedral, thomsen, torus, torusasym, torusbis, torusimplicit, \
tractrixmincurve, twiflat, twisphere, twocuspsimplicit, veronese, wallis, \
whitneyumbrella, wrinkles
*)

BeginPackage[\"SURFS`\",\"CURVES`\",\"CSPROGS`\",\"NumericalMath`BesselZeros`\
\"]

    surfs:=Print[Select[Names[\"SURFS`*\"],#!=\"surfs\"&]]

(* Parametrically Defined Surfaces *)

    agnesirev::usage=\"{u,v}->agnesirev[a][u,v] is a parametrization of the \
surface of revolution formed from a rotated witch of Agnesi.  To plot try \
agnesirev[1][0,2Pi,-1,1].\"

    apple::usage=\"{u,v}->apple[u,v] is a parametrization of the surface of \
revolution that resembles an apple.  To plot try apple[0,3Pi/2,-Pi,Pi].\"

    astell::usage=\"{u,v}->astell[a,b,c][u,v] is a parametrization of an \
astroidial ellipsoid with axes of lengths a, b and c.  To plot try \
astell[1,1,1][0,2Pi,-Pi/2,Pi/2,PlotPoints->{40,40},PlotRange->All].\"

    bohdom::usage=\"{u,v}->bohdom[a,b,c][u,v] is a parametrization of a \
Bohemian dome. It is formed by moving an ellipse along a circle in a \
perpendicular plane so that the ellipse remains parallel to a plane.  To plot \
try bohdom[4,4,4][0,2Pi,-Pi,Pi].\"

    bour::usage=\"{u,v}->bour[u,v] is a parametrization of Bour's minimal \
surface.  To plot try bour[-1,1,-1,1].\"

    bourpolar::usage=\"{r,theta}->bourpolar[n][t][r,theta] is the polar \
parametrization of a 1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[n][0][r,theta] is Bour's minimal surface of degree n. \
{r,theta}->bourpolar[m,n][t][r,theta] is the polar parametrization of a \
1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[m,n][0][r,theta] is Bour's minimal surface of degree \
{m,n}.  To plot try \
bourpolar[2,1][0][0,1.7,-Pi,Pi,PlotPoints->{20,40},PlotRange->All].\"

    boy::usage=\"{u,v}->boy[a,b,c][u,v] is a parametrization of Boy's \
surface.  To plot try boy[4,4,1][-Pi/2,Pi/2,-Pi/2,Pi/2].\"

    catalan::usage=\"{u,v}->catalan[a][u,v] is a parametrization of Catalan's \
minimal surface.  To plot try catalan[1][-2Pi,2Pi,-Pi/2,Pi/2].\"

    catalandef::usage=\"{u,v}->catalandef[a][t][u,v] is a 1-parameter family \
of minimal surfaces connecting Catalan's minimal surface to its conjugate.  \
To plot try catalandef[1][Pi/4][-2Pi,2Pi,-Pi/2,Pi/2].\"

    catenoid::usage=\"{u,v}->catenoid[a][u,v] is the minimal surface of \
revolution generated by t->catenary[a][t].  To plot try \
catenoid[1][0,3Pi/2,-1.5,1.5].\"

    catenoidasym::usage=\"{p,q}->catenoidasym[a][p,q] is a parametrization of \
a catenoid by asymptotic curves.  To plot try \
catenoidasym[1][-Pi,Pi,-Pi,Pi,PlotRange->All].\"

    catenoidiso::usage=\"{u,v}->catenoidiso[a][u,v] is an isothermal \
parametrization of a catenoid.  To plot try \
catenoidiso[1][-Pi,Pi,-Pi,Pi,PlotRange->All].\"

    circleinvolutemin::usage=\"{u,v}->circleinvolutemin[1,a][t][u,v] is a \
1-parameter family of minimal surfaces such that \
{u,v}->circleinvolutemin[1,a][0][u,v] is a minimal surface containing the \
first involute of a circle as a geodesic.  To plot try \
circleinvolutemin[1,1][1][0,Pi,-1,1].\"

    circularcone::usage=\"{u,v}->circularcone[a,b][u,v] is a parametrization \
of a circular cone of radius a and slope b/a.  To plot try \
circularcone[1,0.5][-Pi,Pi,-1,1].\"

    circularcylinder::usage=\"{u,v}->circularcylinder[a][u,v] is a \
parametrization of a circular cylinder of radius a.  To plot try \
circularcylinder[1][-Pi,Pi,-4,4].\"

    clothoidmin::usage=\"{u,v}->clothoidmin[a][t][u,v] is a 1-parameter \
family of minimal surfaces such that {u,v}->clothoidmin[a][0][u,v] is a \
minimal surface containing a clothoid as a geodesic.  To plot try \
clothoidmin[1][0][-5,5,-0.3,0.3,PlotPoints->{60,10}].\"

    cnccosurfrev::usage=\"{u,v}->cnccosurfrev[a,b][u,v] is a parametrization \
of a surface of revolution of constant negative curvature -1/a^2 of conic \
type.  To plot try cnccosurfrev[1,0.83][-Pi,Pi,-0.6,0.6].\"

    cnccotcheb::usage=\"{u,v}->cnccotcheb[a,b][u,v] is a Tchebyshef \
parametrization of a constant negative curvature surface of revolution of \
conic type.  To plot try cnccotcheb[1,1.2][-3.5,3.5,-Pi/1.2,Pi/1.2].\"

    cnchysurfrev::usage=\"{u,v}->cnchysurfrev[a,b][u,v] is a parametrization \
of a surface of revolution of constant negative curvature -1/a^2 of \
hyperboloid type.  To plot try cnchysurfrev[1,0.83][-Pi,Pi,-0.6,0.6].\"

    cnchytcheb::usage=\"{u,v}->cnchytcheb[a,b][u,v] is a Tchebyshef \
parametrization of a constant negative curvature surface of revolution of \
hyperboloid type.  To plot try cnchytcheb[1,0.8][-3.5,3.5,-Pi/0.8,Pi/0.8].\"

    cossurface::usage=\"{u,v}->cossurface[a][u,v] is the surface \
{u,v}->a*{Cos[u],Cos[v],Cos[u + v]}. The implicit equation is (z - a*x*y) == \
a^2*(1 - x^2)*(1 - y^2).  To plot try cossurface[1][-Pi,Pi,-Pi,Pi].\"

    costa::usage=\"{u,v}->costa[u,v] is a parametrization of Costa's minimal \
surface.\"

    cpcsurfrev::usage=\"{u,v}->cpcsurfrev[a,b][u,v] is a parametrization of a \
surface of revolution of constant positive curvature 1/a^2. There are 3 \
cases: football type (a>b), sphere (a=b), barrel type (a<b).  To plot try \
cpcsurfrev[1,0.5][-Pi,Pi,-1,1].\"

    crosscap::usage=\"{u,v}->crosscap[a][u,v] is a parametrization of a cross \
cap in R^3.  To plot try crosscap[1][-Pi/2,Pi/2,-Pi/2,Pi/2].\"

    deltoidinvolutemin::usage=\"{u,v}->deltoidinvolutemin[a][t][u,v] is a \
1-parameter family of minimal surfaces such that \
{u,v}->deltoidinvolutemin[a][0][u,v] is a minimal surface containing the \
involute of a deltoid as a geodesic.  To plot try \
deltoidinvolutemin[1][0][-2Pi,2Pi,-0.3,0.3,
PlotRange->All,PlotPoints->{40,10}.\"

    deltoidmin::usage=\"{u,v}->deltoidmin[a][t][u,v] is a 1-parameter family \
of minimal surfaces such that {u,v}->deltoidmin[a][0][u,v] is a minimal \
surface containing a deltoid as a geodesic.  To plot try \
deltoidmin[1][0][-Pi,Pi,-0.3,0.3,PlotRange->All,PlotPoints->{40,10}].\"

    dini::usage=\"{u,v}->dini[a,b][u,v] is the standard parametrization of \
Dini's surface of constant negative curvature -1/a^2. It is the generalized \
helicoid of slant b generated by a tractrix. The case b=0 is the standard \
parametrization of a pseudosphere.  To plot try dini[1,0.2][0,4Pi,0.05,1,
PlotPoints->{55,10},DisplayFunction->dip[EdgeForm[]]].\"

    dinihelicoid::usage=\"{u,v}->dinihelicoid[pm,a,b,c][u,v] is a generalized \
helicoid of constant negative curvature -1/a^2 and slope c. The parameter pm \
is plus or minus 1.\"

    dinitcheb::usage=\"{u,v}->dinitcheb[a,b][u,v] is a Tchebyshef principal \
patch and {p,q}->dinitcheb[a,b][p + q,p - q] is a Tchebyshef asymptotic patch \
for Dini's surface of constant negative curvature -1/a^2.  To plot try \
dinitcheb[1,0.2][-3,3,0,6Pi,PlotPoints->{10,55},DisplayFunction->dip[EdgeForm[\
]]].\"

    earth::usage=\"{u,v}->earth[u,v] is a parametrization of the earth (with \
equatorial diameter 12756.4 kilometers and polar diameter 12713.2 \
kilometers).  To plot try earth[-Pi,Pi,-Pi/2,Pi/2].\"

    eighteight::usage=\"{u,v}->eighteight[u,v] is a parametrization of the \
generalized surface of revolution formed by moving a figure eight about a \
figure eight.  To plot try eighteight[-Pi,Pi,-Pi/2,Pi/2].\"

    eightsurface::usage=\"{u,v}->eightsurface[u,v] is a surface of revolution \
generated by t->eight[t].  To plot try eightsurface[-Pi,Pi,-Pi/2,Pi/2].\"

    ellhypcyclide::usage=\"{u,v}->ellhypcyclide[a,c,k][u,v] is a \
parametrization of the cyclide of Dupin of radius k whose focal sets are the \
ellipse u->{a*Cos[u],Sqrt[a^2 - c^2]*Sin[u],0} and the hyperbola \
v->{c*Sec[v],0,Sqrt[a^2 - c^2]*Tan[v]}.  To plot try \
ellhypcyclide[8,3,5][-Pi,Pi,-Pi,Pi].\"

    ellipsemin::usage=\"{u,v}->ellipsemin[a,b][t][u,v] is a 1-parameter \
family of minimal surfaces such that {u,v}->ellipsemin[a,b][0][u,v] is an \
elliptical catenoid and {u,v}->ellipsemin[a,b][Pi/2][u,v] is an elliptical \
helicoid. The patch {u,v}->ellipsemin[a,b][0][u,v] contains the ellipse \
t->ellipse[a,b][t] as a geodesic.  To plot try \
ellipsemin[2,1][0][-Pi,Pi,-1,1].\"

    ellipsoid::usage=\"{u,v}->ellipsoid[a,b,c][u,v] is a parametrization of \
an ellipsoid with axes of lengths a, b and c. {u,v}->ellipsoid[a,c][u,v] is a \
parametrization of an ellipsoid with axes of lengths a, a and c.  To plot try \
ellipsoid[1,2,3][-Pi,Pi,-Pi/2,Pi/2].\"

    ellipticalhyperboloidminus::usage= \
\"{u,v}->ellipticalhyperboloidminus[a,b,c][u,v] is a parametrization of a \
hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidminus[1,2,3][-Pi,Pi,-Pi/2,Pi/2].\"

    ellipticalhyperboloidplus::usage= \
\"{u,v}->ellipticalhyperboloidplus[a,b,c][u,v] is a parametrization of a \
hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidplus[1,2,3][-Pi,Pi,-Pi/2,Pi/2].\"

    ellipticcoor::usage=\"{u,v,w}->ellipticcoor[d,e,f][a,b,c][w][u,v] is an \
elliptic coordinate patch on R^3. The parameters d, e and f are plus 1 or \
minus 1.  To plot try ellipticcoor[1,1,1][12,5,1][-1][1,5,5,12].\"

    ellipticparaboloid::usage=\"{u,v}->ellipticparaboloid[a,b][u,v] is the \
surface {u,v}->{u,v,u^2/a^2 + v^2/b^2}.  To plot try \
ellipticparaboloid[1,2][-1,1,-1,1].\"

    enneper::usage=\"{u,v}->enneper[u,v] is a parametrization of Enneper's \
minimal surface.  To plot try enneper[-1.5,1.5,-1.5,1.5].\"

    ennepercatenoidpolar::usage=\"{r,theta}->ennepercatenoidpolar[n,a,b][t][r,\
theta] is the polar parametrization of a 1-parameter family of minimal \
surfaces constructed from the minimal curve whose Weierstrass representation \
is given by f[z_]:=2 and g[z_]:=a/z + b*z^n. For t=0 and a=b=1 the surface \
has a catenoid-like bottom and an enneper-like top with n + 1 lobes.  To plot \
try ennepercatenoidpolar[1,1,1][0][0.40,1.08,-Pi,Pi].\"

    enneperpolar::usage=\"{r,theta}->enneperpolar[n][t][r,theta] is the polar \
parametrization of a 1-parameter family of minimal surfaces such that \
{r,theta}->enneperpolar[n][0][r,theta] is Enneper's minimal surface of degree \
n.  To plot try enneperpolar[1][0][0,2,-Pi,Pi,PlotPoints->{15,69}].\"

    exptwist::usage=\"{u,v}->exptwist[a,c][u,v] is a parametrization of a \
helicoid-like surface whose twisting varies exponentially.  To plot try \
exptwist[1,0.2][0,4Pi,-1,1,PlotPoints->{60,10}].\"

    exptwistasym::usage=\"{p,q}->exptwistasym[a,c][p,q] is the \
parametrization by asymptotic curves of {u,v}->exptwist[a,c][u,v].  To plot \
try exptwistasym[1,0.3][-Pi,2Pi,-Pi,2Pi,PlotPoints->{48,15}].\"

    flattorus::usage=\"{u,v}->flattorus[a,b][u,v] is a parametrization of a \
torus into R^4 as the product of two circles. {u,v}->flattorus[a,b,c,d][u,v]} \
is a parametrization of an elliptical torus into R^4 as the product of two \
ellipses. The Gaussian curvature is zero.\"

    funnel::usage=\"{u,v}->funnel[1,1,c][u,v] is a parametrization of the \
surface of revolution formed by rotating the graph of t->c*Log[t].  To plot \
try funnel[5,1,2][-Pi,Pi,0.01,1].\"

    funnelasym::usage=\"{p,q}->funnelasym[c][p,q] is the parametrization by \
asymptotic curves of the surface of revolution formed by rotating the graph \
of t->c*Log[t].  To plot try funnelasym[1][-Pi/2,Pi/2,0.0,Pi,PlotRange->All].\
\"

    gencube::usage=\"{u,v}->gencube[n,a,b,c][u,v] is a generalized cube. \
{u,v}->gencube[1,a/Sqrt[2],a/Sqrt[2],a][u,v] is a sphere. \
{u,v}->gencube[2,a,a,a][u,v] is a parametrization of an ordinary cube. \
{u,v}->genoctahedron[3,a,a,a][u,v] is an astroidial cube.  To plot try \
gencube[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}].\"

    genhypparab::usage=\"{u,v}->genhypparab[a,b][u,v] is a parametrization of \
a hyperbolic paraboloid as a ruled surface.  To plot try \
genhypparab[1,1][-1,1,-1,1].\"

    genoctahedron::usage=\"{u,v}->genoctahedron[n,a,b,c][u,v] is a \
generalized octahedron. {u,v}->genoctahedron[1,a,b,c][u,v] is an ellipsoid. \
{u,v}->genoctahedron[2,a,a,a][u,v] is a parametrization of an ordinary \
octahedron. {u,v}->genoctahedron[3,a,b,c][u,v] is an astroidial ellipsoid.  \
To plot try \
genoctahedron[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}].\
\"

    handkerchief::usage=\"{u,v}->handkerchief[a][u,v] is a parametrization of \
a handkerchief shaped surface.  To plot try \
handkerchief[1][-1,1,-1,1,PlotRange->All].\"

    heart::usage=\"{u,v}->heart[a][u,v] is a surface of revolution generated \
by t->cardioid[a][t] with the axis of revolution passing through the cusp.  \
To plot try heart[1][-Pi/2,Pi/2,-Pi,Pi,PlotPoints->{15,45}].\"

    helicoid::usage=\"{u,v}->helicoid[a,c][u,v] is the standard \
parametrization of a circular helicoid of radius a and slant c. \
{u,v}->helicoid[a,b,c][u,v] is the standard parametrization of an elliptical \
helicoid of slant c.  To plot try \
helicoid[1,1,0.3][0,4Pi,-1,1,PlotPoints->{75,15}].\"

    helicoidprin::usage=\"{u,v}->helicoidprin[b][u,v] is a parametrization of \
a circular helicoid of radius b and slant b by principal curves. The \
parametrization is also isothermal.  To plot try \
helicoidprin[1][-Pi/2,Pi/2,-Pi/2,Pi/2,PlotRange->All].\"

    heltocat::usage=\"{u,v}->heltocat[t][u,v] is a 1-parameter family of \
minimal surfaces connecting a helicoid to a catenoid.  To plot try \
heltocat[Pi/4][0,4Pi,-1.5,1.5,PlotPoints->{75,15}].\"

    henneberg::usage=\"{u,v}->henneberg[u,v] is a parametrization of \
Henneberg's minimal surface.  To plot try \
henneberg[0.3,1,-Pi,Pi,PlotPoints->{15,45}].\"

    hyperbolicparaboloid::usage=\"{u,v}->hyperbolicparaboloid[u,v] is a \
parametrization of a hyperbolic paraboloid.  To plot try \
hyperbolicparaboloid[-1,1,-1,1].\"

    hyperboloid::usage=\"{u,v}->hyperboloid[a,c][u,v] is the standard \
parametrization of a circular hyperboloid of one sheet. \
{u,v}->hyperboloid[a,b,c][u,v] is the standard parametrization of an \
elliptical hyperboloid of one sheet.  To plot try \
hyperboloid[1,2,3][0,3Pi/2,-2,2].\"

    hypocycloidinvolutemin::usage=\"{u,v}->hypocycloidinvolutemin[a,b][t][u,v]\
 is a 1-parameter family of minimal surfaces such that \
{u,v}->hypocycloidinvolutemin[a,b][0][u,v] is a minimal surface containing \
the involute of a hypocycloid as a geodesic.  To plot try \
hypocycloidinvolutemin[4,1][0][-Pi,Pi,-1,1,PlotPoints->{99,15}].\"

    hy2sheet::usage=\"{u,v}->hy2sheet[a,c][u,v] is the standard \
parametrization of a circular hyperboloid of two sheets. \
{u,v}->hy2sheet[a,b,c][u,v] is the standard parametrization an elliptical \
hyperboloid of two sheets.  To plot try hy2sheet[1,1,1][-1,1,-1,1].\"

    invertedcircularcone::usage=\"{u,v}->invertedcircularcone[{p1,p2,p3},rho,\
a,b][u,v] is a parametrization of {u,v}->circularcone[a,b][u,v] inverted with \
respect to a sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcone[rho,a,b][u,v] is a parametrization of \
{u,v}->{u,v}->circularcone[a,b][u,v] inverted with respect to a sphere of \
radius rho centered at the origin. An inverted circular cone is a cyclide of \
Dupin.  To plot try \
invertedcircularcone[40,1,1][-Pi,Pi,-40,40,PlotRange->All].\"

    invertedcircularcylinder::usage=\"{u,v}->invertedcircularcylinder[{p1,p2,\
p3},rho,a][u,v] is a parametrization of {u,v}->circularcylinder[a][u,v] \
inverted with respect to a sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcylinder[rho,a][u,v] is a parametrization of \
{u,v}->circularcylinder[a][u,v] inverted with respect to a sphere of radius \
rho centered at the origin. An inverted circular cylinder is a cyclide of \
Dupin.  To plot try \
invertedcircularcylinder[40,1][-Pi,Pi,-40,40,PlotRange->All].\"

    invertedtorus::usage=\"{u,v}->invertedtorus[{p1,p2,p3},rho,a,b][u,v] is a \
parametrization of {u,v}->torus[a,b][u,v] inverted with respect to a sphere \
of radius rho centered at {p1,p2,p3}. {u,v}->invertedtorus[rho,a,b][u,v] is a \
parametrization of {u,v}->torus[a,b][u,v] inverted with respect to a sphere \
of radius rho centered at the origin. An inverted torus is a cyclide of \
Dupin.  To plot try invertedtorus[40,8,3][-Pi,Pi,-Pi,Pi,PlotRange->All].\"

    jorgemeekspolar::usage=\"jorgemeekspolar[n,a][r,theta] is a polar \
parametrization of a Jorge-Meeks n-noid.  To plot try \
jorgemeekspolar[3,1][0.001,1.999,-Pi,Pi].\"

    kidney::usage=\"{u,v}->kidney[a][u,v] is a surface of revolution \
generated by t->nephroid[a][t].  To plot try kidney[1][0,3Pi/2,-Pi/2,Pi/2].\"

    kleinbottle::usage=\"{u,v}->kleinbottle[a][u,v] is a parametrization in \
R^3 of the surface formed by moving and twisting a figure eight along a \
circle of radius a. The surface is nonorientable and a neighborhood of the \
self-intersection curve is nonorientable.  To plot try \
kleinbottle[2][-Pi/4,3Pi/2,-Pi,Pi].\"

    kleinbottlebis::usage=\"{u,v}->kleinbottlebis[e,f][u,v] is a Klein bottle \
in R^3. A neighborhood of the self-intersection curve is orientable.  To plot \
try kleinbottlebis[1,2][-Pi,29.9517,-Pi,Pi].\"

    kleinbottlewri::usage=\"{u,v}->kleinbottlewri[u,v] is WRI's version of a \
Klein bottle in R^3. A neighborhood of the self-intersection curve is \
orientable.  To plot try kleinbottlewri[0,2Pi,0,2Pi].\"

    klein4::usage=\"{u,v}->klein4[a,b][u,v] is a parametrization of a Klein \
bottle as a surface in R^4.\"

    kuen::usage=\"{u,v}->kuen[a][u,v] is a parametrization of Kuen's surface. \
It has constant negative curvature -1/a^2.  To plot try kuen[1][-4,4,0.01,Pi \
- 0.01].\"

    kuentcheb::usage=\"{u,v}->kuentcheb[a][u,v] is a Tchebyshef principal \
patch and {p,q}->kuentcheb[a][p + q,p - q] is a Tchebyshef asymptotic patch \
for Kuen's surface of constant negative curvature -1/a^2.  To plot try \
kuentcheb[1][-4,4,-4,4].\"

    lemniscatemin::usage=\"{u,v}->lemniscatemin[a][t][u,v] is a 1-parameter \
family of minimal surfaces such that {u,v}->lemniscatemin[a][0][u,v] is a \
minimal surface containing a lemniscate as a geodesic.  To plot try \
lemniscatemin[1][0][-Pi,Pi,-0.2Pi,0.2Pi,PlotPoints->{100,20}].\"

    logminpolar::usage=\"{r,theta}->logminpolar[n][t][r_,theta_] is a \
1-parameter family of minimal surfaces whose height function is the identity \
and whose Gauss map is an iterated logarithm.  To plot try \
logminpolar[0][0][0.005,2.005,-3Pi,3Pi,PlotPoints->{10,60},ViewPoint->{-2.5,-\
1.5,1.6}].\"

    menn::usage=\"{u,v}->menn[a][u,v] is a parametrization of Menn's surface. \
 To plot try menn[1][-1.5,1.5,-1.5,1.5].\"

    mercatorellipsoid::usage=\"{u,v}->mercatorellipsoid[a,b,c][u,v] is the \
Mercator injection of an ellipsoid with axes of lengths a, b and c into R^3.  \
To plot try mercatorellipsoid[1,2,3][0,3Pi/2,-0.49Pi,0.49Pi].\"

    mercatorsphere::usage=\"{u,v}->mercatorsphere[a][u,v] is the Mercator \
injection of a sphere of radius a into R^3.  To plot try \
mercatorsphere[1][0,3Pi/2,-0.49Pi,0.49Pi].\"

    moebcirc::usage=\"{u,v}->moebcirc[a][u,v] is a parametrization of a \
Moebius strip that has a circle as boundary.  To plot try \
moebcirc[1][0,Pi,0,Pi].\"

    moebiusstrip::usage=\"{u,v}->moebiusstrip[a][u,v] is the standard \
parametrization of a Moebius strip.  To plot try \
moebiusstrip[1][0,2Pi,-0.3,0.3,PlotPoints->{40,5}].\"

    monkeysaddle::usage=\"{u,v}->monkeysaddle[u,v] is a parametrization of a \
monkey saddle. {u,v}->monkeysaddle[n][u,v] is a parametrization of a monkey \
saddle for a monkey with n-2 tails.  To plot try \
monkeysaddle[-1.1,1.1,-1.1,1.1].\"

    monkeysaddlepolar::usage=\"{r,theta}->monkeysaddlepolar[n][r,theta] is a \
polar parametrization of a monkey saddle with n - 2 tails.  To plot try \
monkeysaddlepolar[3][0,1,0,2Pi,PlotRange->All,PlotPoints->{10,33}].\"

    nodoid::usage=\"See nodoidnds.  To plot try \
nodoid[-9,9][8,3,1,0.6][0,3Pi/2,-9,9,PlotPoints->{21,51}].\"

    nodoidnds::usage=\"nodoidnds[vmin,vmax][a,b,c,e][u,v] is an approximation \
over the interval vmin<v<vmax found by NDSolve to a nodoid. It is a surface \
of revolution of a curve of Delaunay of eccentricity e and has constant mean \
curvature.\"

    parabolamin::usage=\"{u,v}->parabolamin[a][t][u,v] is a 1-parameter \
family of minimal surfaces such that {u,v}->parabolamin[a][0][u,v] is a \
minimal surface containing a parabola as a geodesic.  To plot try \
parabolamin[1][0][-2,2,-0.3,0.3,PlotPoints->{40,10}].\"

    paraboliccoor::usage=\"{u,v,w}->paraboliccoor[d,e,f][a,b,c][w][u,v] is a \
parabolic coordinate patch on R^3. The parameters d, e and f are plus 1 or \
minus 1.  To plot try paraboliccoor[1,1,1][2,1,3][4][-9,1,1,2].\"

    paraboliccyclide::usage=\"{u,v}->paraboliccyclide[a,k][u,v] is a \
parametrization of the cyclide of Dupin of radius k whose focal sets are the \
parabolas u->{u,0,-u^2/(8*a) + a} and v->{0,v,v^2/(8*a) - a}.  To plot try \
paraboliccyclide[2,1][-40,40,-40,40].\"

    paraboloid::usage=\"{u,v}->paraboloid[a][u,v] is a circular paraboloid of \
radius a. {u,v}->paraboloid[a,b][u,v] and {u,v}->paraboloid[a,b,c][u,v] is \
either an elliptic or a hyperbolic paraboloid.  To plot try \
paraboloid[1][-1,1,-1,1].\"

    paraboloidpolar::usage=\"{r,theta}->paraboloidpolar[n,a,b][r,theta] is a \
polar parametrization of a generalized paraboloid.  To plot try \
paraboloidpolar[2,2,1][0,1,0,3Pi/2].\"

    pear::usage=\"{u,v}->pear[a,b][u,v] is a surface of revolution generated \
by t->piriform[a,b][t] with the axis of revolution passing through the cusp.  \
To plot try pear[1,1][0,3Pi/2,-Pi/2,Pi/2].\"

    pearbis::usage=\"{u,v}->pearbis[u,v] is a parametrization of the surface \
of revolution that resembles an pear.  To plot try pearbis[0,3Pi/2,-Pi,Pi].\"

    perturbedms::usage=\"{u,v}->perturbedms[a][u,v] is a parametrization of a \
monkey saddle perturbed by a circular paraboloid.  To plot try \
perturbedms[-1.0][-1,1,-1,1].\"

    perturbedmspolar::usage=\"{r,theta}->perturbedmspolar[n,a][r,theta] is a \
polar parametrization of a monkey saddle of order n perturbed by a circular \
paraboloid.  To plot try \
perturbedmspolar[3,-1][0,1,0,2Pi,PlotPoints->{10,40}].\"
    
    pillow::usage=\"{u,v}->pillow[a][u,v] is a pillow-shaped surface.  To \
plot try pillow[1][-Pi,Pi,-Pi,Pi].\"

    plane::usage=\"{u,v}->plane[a1,a2,b1,b2,c1,c2][u,v] is a parametrization \
of a plane in R^3.\"

    planepolar::usage=\"{r,theta}->planepolar[a][r,theta] is a polar \
parametrization of the plane.\"

    planetocat::usage=\"{u,v}->planetocat[t][u,v] is a 1-parameter family of \
minimal surfaces containing a plane and a catenoid. The principal curves of \
each surface are planar.  To plot try planetocat[0.1][0,3Pi/2,-2,2].\"

    plucker::usage=\"{u,v}->plucker[u,v] is the standard parametrization of \
Plucker's surface. {u,v}->plucker[n][u,v] is a parametrization of Plucker's \
surface with n folds. {u,v}->plucker[m,n,a][u,v] is a generalization of the \
monkey saddle and Plucker's surface.  To plot try plucker[-1,1,-1,1].\"

    pluckerpolar::usage=\"{r,theta}->pluckerpolar[n][r,theta] is the polar \
parametrization of Plucker's surface with n folds. \
{r,theta}->pluckerpolar[m,n,a][r,theta] is a generalization of the polar \
parametrizations of the monkey saddle and Plucker's surface.  To plot try \
pluckerpolar[0,5,1][0,1,-Pi,Pi,PlotPoints->{10,75}].\"

    pseudocrosscap::usage=\"{u,v}->pseudocrosscap[u,v] is a parametrization \
of a pseudocrosscap in R^3.  To plot try \
pseudocrosscap[-1,0.5,0,2Pi,PlotPoints->{24,48}].\"

    pseudosphere::usage=\"{u,v}->pseudosphere[a][u,v] is the standard \
parametrization of a pseudosphere of constant negative curvature -1/a^2.  To \
plot try pseudosphere[1][0,3Pi/2,0.001,Pi-0.001].\"

    pseudospherebis::usage=\"{u,v}->pseudospherebis[a][u,v] is a \
parametrization of a pseudosphere of constant negative curvature -1/a^2.  To \
plot try pseudospherebis[1][0,3Pi/2,0.01,2,PlotRange->All].\"

    pseudospheretcheb::usage=\"{u,v}->pseudospheretcheb[a][u,v] is a \
Tchebyshef principal patch and {p,q}->pseudospheretcheb[a][p + q,p - q] is a \
Tchebyshef asymptotic patch for a pseudosphere of constant negative curvature \
-1/a^2.  To plot try pseudospheretcheb[1][-2.8,2.8,0,3Pi/2].\"

    rconoid::usage=\"{u,v}->rconoid[u,v] is a right conoid. It coincides with \
{u,v}->2*pluckerpolar[1][v/2,u].  To plot try rconoid[-Pi,Pi,-2,2].\"

    richmond::usage=\"{u,v}->richmond[u,v] is a minimal surface with one \
planar end.  To plot try \
richmond[-1,1,-1,1,PlotRange->{{-1,1},{-1,1},Automatic}].\"

    richmondpolar::usage=\"{r,theta}->richmondpolar[n][t][r,theta] is the \
polar parametrization of a 1-parameter family of minimal surfaces such that \
{r,theta}->richmondpolar[n][0][r,theta] is a minimal surface with one planar \
end of degree n.  To plot try richmondpolar[1][0][0.3,1.3,0,2Pi].\"

    roman::usage=\"{u,v}->roman[a][u,v] is a parametrization of Steiner's \
Roman surface of radius a in R^3.  To plot try roman[1][0,Pi,-Pi/2,Pi/2].\"

    rosemin::usage=\"{u,v}->rosemin[n,a][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->rosemin[n,a][0][u,v] contains the rose \
t->{a*Cos[t]*Cos[n*t],a*Cos[n*t]*Sin[t]} as a geodesic.  To plot try \
rosemin[3,1][0][0,Pi,-0.3,0.3,PlotPoints->{45,15}].\"

    scherk::usage=\"{u,v}->scherk[a][u,v] is a parametrization of Scherk's \
minimal surface. {u,v}->scherk[a,theta][u,v] is a parametrization of twisted \
Scherk's minimal surface of angle theta.  To plot try scherk[1][-Pi/2 + \
0.01,3Pi/2 + 0.01,-Pi/2 + .01,3Pi/2 + 0.01].\"

    scherk5::usage=\"{u,v}->scherk5[a,b,c][u,v] is a parametrization of \
Scherk's fifth minimal surface, where a, b, c are plus 1 or minus 1.  \
{u,v}->scherk5[u,v] is the same as {u,v}->scherk5[a,b,c][u,v]. To plot try \
scherk5[-1,1,-1,1].\"

    shoe::usage=\"{u,v}->shoe[a,-a][u,v] resembles the instep of a shoe.  To \
plot try shoe[1,-1][-1.5,1.5,-1.5,1.5].\"

    shoeasym::usage=\"{u,v}->shoeasym[a,b][u,v] is an asymptotic \
parametrization of a shoe surface.  To plot try \
shoeasym[1,-1][-1,1.2,-1,1.2].\"

    sievert::usage=\"{u,v}->sievert[a][u,v] is a parametrization of Sievert's \
surface of constant positive curvature a^2.  To plot try \
sievert[1][-Pi/2,Pi/2,0.001,Pi - 0.001].\"

    sinovaloid::usage=\"{u,v}->sinovaloid[n,a][u,v] is the surface of \
revolution generated by t->sinoval[n,a][t].  To plot try \
sinovaloid[3,1][0,3Pi/2,-Pi/2,Pi/2].\"

    sinsurface::usage=\"{u,v}->sinsurface[a][u,v] is the \
{u,v}->a*{Sin[u],Sin[v],Sin[u + v]}. The implicit equation is 4*x^2*y^2*(a^2 \
- z^2) == a^2*(x^2 + y^2 - z^2)^2.  To plot try \
sinsurface[1][-Pi,Pi,-Pi,Pi,PlotPoints->{40,40}].\"

    snail::usage=\"{u,v}->snail[u,v] is a surface resembling a snail.  To \
plot try snail[-Pi,Pi,-Pi,Pi,PlotRange->All].\"

    sphere::usage=\"{u,v}->sphere[a][u,v] is the standard parametrization of \
a sphere of radius a centered at the origin.  To plot try \
sphere[1][0,3Pi/2,-Pi/2,Pi/2].\"

    stereographicellipsoid::usage=\"{u,v}->stereographicellipsoid[a,b,c][u,v] \
is a stereographic parametrization of an ellipsoid with axes of lengths a, b \
and c.  To plot try stereographicellipsoid[5,3,1][-2.8,2.8,-2.8,2.8].\"

    stereographicsphere::usage=\"{u,v}->stereographicsphere[a][u,v] is a \
stereographic parametrization of a sphere of radius a in R^3.  To plot try \
stereographicsphere[1][-2.8,2.8,-2.8,2.8,PlotPoints->{40,40}].\"

    stereographicspherepolar::usage=\"{r,theta}->stereographicspherepolar[a][\
r,theta] is a polar stereographic parametrization of a sphere of radius a in \
R^3.  To plot try stereographicspherepolar[1][0,3,0,2Pi,PlotPoints->{10,40}].\
\"

    swallowtail::usage=\"{u,v}->swallowtail[u,v] is a parametrization of a \
swallow tail shaped surface.  To plot try \
swallowtail[-3,2,-0.8,0.8,PlotRange->All,PlotPoints->{10,15},ViewPoint->{4,1,-\
4}].\"

    tetrahedral::usage=\"{u,v}->tetrahedral[m,n][A,B,C][a,b,c][u,v] is a \
parametrization of a tetrahedral surface.\"

    thomsen::usage=\"{u,v}->thomsen[a,b][u,v] is a parametrization of \
Thomsen's minimal surface.  To plot try thomsen[1,-2][-Pi/2,Pi/2,0,2Pi].\"

    torus::usage=\"{u,v}->torus[a,b][u,v] is a parametrization of the torus \
formed by revolving a circle of radius b in the xz-plane about the z-axis \
along a circle of radius a in the xy-plane. {u,v}->torus[a,b,c][u,v] is a \
parametrization of the torus formed by revolving an ellipse with axes of \
lengths b and c in the xz-plane about the z-axis along a circle of radius a \
in the xy-plane. {u,v}->torus[a,b,b,d,d][u,v] is a surface formed by moving a \
circle of radius b in the xz-plane along an ellipse in the xy-plane. \
{u,v}->torus[a,b,c,d,e][u,v] is a surface formed by moving an ellipse in the \
xz-plane along an ellipse in the xy-plane.  To plot try \
torus[8,3][0,3Pi/2,-Pi,Pi].\"

    torusasym::usage=\"{p,q}->torusasym[pm,a][p,q] is an asymptotic \
parametrization of {u,v}->torus[a,a][u,v]. The parameter pm is plus or minus \
1.  To plot try torusasym[1,1][-Pi,Pi,-Pi,Pi].\"

    torusbis::usage=\"{u,v}->torusbis[pm,a,b][u,v] is a parametrization of a \
torus. The parameter pm is plus or minus 1.  To plot try \
torusbis[1,8,3][5,11,0,2Pi,PlotPoints->{10,33}].\"

    twiflat::usage=\"{u,v}->twiflat[pm,a,c][sl][u,v] is a parametrization of \
a generalized helicoid of zero Gaussian curvature of slant sl. The parameter \
pm is plus or minus 1.  To plot try \
twiflat[1,1,1][1][0,7Pi/2,1,5,PlotPoints->{40,15}].\" 

    twisphere::usage=\"{u,v}->twisphere[a,b][u,v] is a parametrization of a \
generalized helicoid formed by rotating and twisting a semicircle. It is also \
called a corkscrew surface.  To plot try twisphere[1,1][0,2Pi,-Pi,Pi].\" 

    veronese::usage=\"{u,v}->veronese[a][u,v] is a parametrization of a \
Veronese surface in R^5.\"

    wallis::usage=\"{u,v}->wallis[a,b,c][u,v] is a parametrization of a \
conical edge of Wallis.  To plot try wallis[1,1,3][Pi/4,3Pi/4,0,1].\"

    whitneyumbrella::usage=\"{u,v}->whitneyumbrella[u,v] is a parametrization \
of a Whitney umbrella.  To plot try whitneyumbrella[-1,1,-1,1].\"

    wrinkles::usage=\"{u,v}->wrinkles[a][u,v] is the Monge patch \
{u,v}->{u,v,a*(u/v + v/u)}.  To plot try wrinkles[0.05][-1,1,-1,1].\"

(* Implicitly Defined Surfaces *)

    cossurfaceimplicit::usage=\"cossurfaceimplicit[a][x,y,z]==0 is the \
nonparametric form of the surface {u,v}->{a*Cos[u],a*Cos[v],a*Cos[u + v]}.\"

    crosscapimplicit::usage=\"crosscapimplicit[a,b][x,y,z]==0 is the \
nonparametric form of a crosscap.\"

    ellipsoidimplicit::usage=\"ellipsoidimplicit[a,b,c][x,y,z]==0 is the \
nonparametric form of an ellipsoid.\"

    ellipticparaboloidimplicit::usage=\"ellipticparaboloidimplicit[a,b,c][x,y,\
z]==0 is the nonparametric form of an elliptic paraboloid.\"

    equihom1implicit::usage=\"equihom1implicit[x,y,z]==0 is the nonparametric \
form of the first equiaffinely homogeneous surface.\"

    equihom2implicit::usage=\"equihom2implicit[x,y,z]==0 is the nonparametric \
form of the second equiaffinely homogeneous surface.\"

    equihom3implicit::usage=\"equihom3implicit[x,y,z]==0 is the nonparametric \
form of the third equiaffinely homogeneous surface.\"

    equihom4implicit::usage=\"equihom4implicit[x,y,z]==0 is the nonparametric \
form of the fourth equiaffinely homogeneous surface.\"

    equihom5implicit::usage=\"equihom5implicit[x,y,z]==0 is the nonparametric \
form of the fifth equiaffinely homogeneous surface.\"

    equihom6implicit::usage=\"equihom6implicit[x,y,z]==0 is the nonparametric \
form of the sixth equiaffinely homogeneous surface.\"

    goursatimplicit::usage=\"goursatimplicit[a,b,c][x,y,z]==0 is the \
nonparametric form of Goursat's surface.\"

    hyperbolicparaboloidimplicit::usage=\"hyperbolicparaboloidimplicit[a,b,c][\
x,y,z]==0 is the nonparametric form of a hyperbolic paraboloid.\"

    hyperboloidimplicit::usage=\"hyperboloidimplicit[a,b,c][x,y,z]==0 is the \
nonparametric form of a hyperboloid of one sheet.\"

    hy2sheetimplicit::usage=\"hy2sheetimplicit[a,b,c][x,y,z]==0 is the \
nonparametric form of a hyperboloid of two sheets.\"

    kazoolaimplicit::usage=\"kazoolaimplicit[a,b,c,d][x,y,z]==0 is the \
nonparametric form of a kazoola.\"

    kummerimplicit::usage=\"kummerimplicit[x,y,z]==0 is the nonparametric \
form of Kummer's surface.\"

    scherkimplicit::usage=\"scherkimplicit[a][x,y,z]==0 is the nonparametric \
form of Scherk's minimal surface. scherkimplicit[a,phi][x,y,z]==0 is the \
nonparametric form of a twisted Scherk's minimal surface.\"

    scherk5implicit::usage=\"scherk5implicit[x,y,z]==0 is the nonparametric \
form of a Scherk's fifth minimal surface.\"

    sinsurfaceimplicit::usage=\"sinsurfaceimplicit[a][x,y,z]==0 is the \
nonparametric form of the surface {u,v}->{a*Sin[u],a*Sin[v],a*Sin[u + v]}.\"

    sphereimplicit::usage=\"sphereimplicit[a][x,y,z]==0 is the nonparametric \
form of a sphere. sphereimplicit[n,a][x,y,z]==0 is the nonparametric form of \
the surface x^(2*n) + y^(2*n) +z^(2*n) = a^(2*n).\"

    torusimplicit::usage=\"torusimplicit[a,b][x,y,z]==0 is the nonparametric \
form of a torus.\"

    twocuspsimplicit::usage=\"twocuspsimplicit[x,y,z]==0 is the nonparametric \
form of a surface with two cusps.\"

(* Drum Plots *)

    circularmembrane::usage=\"{r,theta}->circularmembrane[m,n,t][r,theta] is \
a parametrization of a circular membrane of degree {m,n} at time t.\"

    circularmembraneplot::usage=\"circularmembraneplot[m,n,t] plots a \
circular membrane of degree {m,n} at time t.\"

    circularmembranemovie::usage=\" \
circularmembranemovie[m,n,{t,tmin,tmax,numf}] animates a circular membrane of \
degree {m,n} from tmin to tmax with numf frames.\"

    squaremembrane::usage=\"{u,v}->squaremembrane[m,n,t][u,v] is a \
parametrization of a square membrane of degree {m,n} at time t.\"

    squaremembraneplot::usage=\"squaremembraneplot[m,n,t] plots a square \
membrane of degree {m,n} at time t.\"

    squaremembranemovie::usage=\"squaremembranemovie[m,n,{t,tmin,tmax,numf}] \
animates a square membrane of degree {m,n} from tmin to tmax with numf \
frames.\"

(* Minimal Curves *)

    astroidmincurve::usage=\"z->astroidmincurve[a][z] is the minimal curve \
generated by the astroid t->astroid[a][t].\"

    bourmincurve::usage=\"z->bourmincurve[m][z] is the minimal curve \
corresponding to Bour's minimal surface of order m. z->bourmincurve[m,n][z] \
is the minimal curve corresponding to Bour's minimal surface of order {m,n}. \
Note that bourmincurve[m]=bourmincurve[m,1], enneper[n]=bourmincurve[2,n] and \
richmond[n][z]=bourmincurve[0,n + 1][z]/2.\"

    cardioidmincurve::usage=\"z->cardioidmincurve[a][z] is the minimal curve \
generated by the cardioid t->cardioid[a][t].\"

    catalanmincurve::usage=\"z->catalanmincurve[a][z] is the minimal curve \
corresponding to Catalan's minimal surface. It contains a cycloid as a \
geodesic.\"

    catenoidmincurve::usage=\"z->catenoidmincurve[a][z] is the minimal curve \
corresponding to a catenoid. It contains a circle as a geodesic.\"

    cayleysexticmincurve::usage=\"z->cayleysexticmincurve[a][z] is the \
minimal curve generated by the Cayley's sextic t->cayleysextic[a][t].\"

    circleinvolutemincurve::usage=\"z->circleinvolutemincurve[n,a][z] is the \
minimal curve generated by the nth involute starting at {a,0} of the circle \
t->{a*Cos[t],a*Sin[t]}.\"

    cissoidmincurve::usage=\"z->cissoidmincurve[a][z] is the minimal curve \
generated by the cissoid t->cissoid[a][t].\"

    clothoidmincurve::usage=\"z->clothoidmincurve[a][z] is the minimal curve \
generated by the clothoid t->clothoid[1,a][z].\"

    cnchyprofilemincurve::usage=\"z->cnchyprofilemincurve[pm,a,b][z] is the \
minimal curve generated by the curve t->cnchyprofile[pm,a,b][t]. The \
parameter pm is plus 1 or -1.\"

    costamincurve::usage=\"z->costamincurve[z] is the minimal curve that \
determines Costa's minimal surface.\"

    cpcprofilemincurve::usage=\"z->cpcprofilemincurve[pm,a,b][z] is the \
minimal curve generated by the curve t->cpcprofile[pm,a,b][t]. The parameter \
pm is plus 1 or -1.\"

    deltoidinvolutemincurve::usage=\"z->deltoidinvolutemincurve[a][z] is the \
minimal curve generated by the involute starting at t=0 of \
t->deltoid[a][t].\"

    deltoidmincurve::usage=\"z->deltoidmincurve[a][z] is the minimal curve \
generated by the deltoid t->deltoid[a][t].\"

    ellipsemincurve::usage=\"z->ellipsemincurve[a,b][z] is the minimal curve \
generated by the ellipse t->ellipse[a,b][t].\"

    ennepercatenoidmincurve::usage=\"z->ennepercatenoidmincurve[n,a,b][z] is \
the minimal curve whose Weierstrass representation is given by f[z_]:=2 and \
g[z_]:=a/z + b*z^n.\"

    ennepermincurve::usage=\"z->ennepermincurve[n][z] is the minimal curve \
corresponding to Enneper's minimal surface of order n.\"

    epicycloidmincurve::usage=\"z->epicycloidmincurve[a,b][z] is the minimal \
curve generated by the epicycloid t->epicycloid[a,b][t].\"

    hennebergmincurve::usage=\"z->hennebergmincurve[z] is the minimal curve \
corresponding to Henneberg's minimal surface.\"

    hyperbolamincurve::usage=\"z->hyperbolamincurve[a,b][z] is the minimal \
curve generated by the hyperbola t->hyperbola[a,b][t].\"

    hypocycloidinvolutemincurve::usage=\"z->hypocycloidinvolutemincurve[a,b][\
z] is the minimal curve generated by the involute starting at t=0 of \
t->hypocycloid[a,b][t].\"

    hypocycloidmincurve::usage=\"z->hypocycloidmincurve[a,b][z] is the \
minimal curve generated by the hypocycloid t->hypocycloid[a,b][t].\"

    jorgemeeksmincurve::usage=\"z->jorgemeeksmincurve[n,a][z] is the minimal \
curve used to generate the Jorge-Meeks n-noid.\"

    jorgemeeksmincurveprime::usage=\"z->jorgemeeksmincurveprime[n,a][z] is \
the derivative of z->jorgemeeksmincurve[n,a][z].\"

    lemniscatemincurve::usage=\"z->lemniscatemincurve[a][z] is the minimal \
curve generated by the lemniscate t->lemniscate[a][t].\"

    logmincurve::usage=\"z->logmincurve[n][z] is a minimal curve whose height \
function is the identity and whose Gauss map is an iterated logarithm.\"

    logspiralmincurve::usage=\"z->logspiralmincurve[a,b][z] is the minimal \
curve generated by the log spiral t->logspiral[a,b][t].\"

    nephroidmincurve::usage=\"z->nephroidmincurve[a][z] is the minimal curve \
generated by the nephroid t->nephroid[a][t].\"

    nielsenspiralmincurve::usage=\"z->nielsenspiralmincurve[a][z] is the \
minimal curve generated by Nielsen's spiral t->nielsenspiral[a][t].\"

    parabolamincurve::usage=\"z->parabolamincurve[a][z] is the minimal curve \
generated by the parabola t->parabola[a][t].\"

    richmondmincurve::usage=\"z->richmondmincurve[n][z] is the minimal curve \
corresponding to Richmond's minimal surface of order n.\"

    rosemincurve::usage=\"z->rosemincurve[n,a][z] is the minimal curve \
generated by the rose t->rose[n,a][t].\"

    scherktowermincurveprime::usage=\"z->scherktowermincurveprime[n][z] is \
the integrand of the Scherk tower minimal curve.\"

    scmincurve::usage=\"z->scmincurve[z] is the minimal curve generated by \
the semicubical parabola t->sc[t].\"

    tractrixmincurve::usage=\"z->tractrixmincurve[a][z] is the minimal curve \
generated by the tractrix t->tractrix[a][t].\"

(* Surface Metrics *)

    geopolar::usage=\"geopolar[f] is the geodesic polar coordinate metric \
relative to the function f.\"

    liouville::usage=\"liouville[f,g] is the metric of a Liouville patch \
corresponding to the functions f and g.\"

    poincare::usage=\"poincare[lambda] is the metric on the Poincare upper \
half-plane with constant curvature -1/lambda^2. poincare[m,n,lambda] is a \
generalization of the metric poincare[lambda].\"

    poindisk::usage=\"poindisk[lambda] is the metric on the Poincare disk \
with constant curvature -1/lambda^2.\"

    schwarzschildplane::usage=\"schwarzschildplane[m] is the 2-dimensional \
Schwarzschild metric. schwarzschildplane[m,f] is the 2-dimensional \
Schwarzschild metric relative to the function f.\"

Begin[\"`Private`\"]

(* Parametrically Defined Surfaces *)

    agnesirev[a_][u_,v_]:=
    {-2*a*Cos[u]*Cos[v]^2,-2*a*Cos[v]^2*Sin[u],
     2*a*Tan[v]}

    agnesirev[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tagnesirev[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    apple[u_,v_]:= {Cos[u]*(4 + 3.8*Cos[v]),
                    Sin[u]*(4 + 3.8*Cos[v]),
        (Cos[v] + Sin[v]-1)*(1 + Sin[v])*
         Log[1 - Pi*v/10] + 7.5*Sin[v]}

    apple[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tapple[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    astell[a_,b_,c_][u_,v_]:= {a*Cos[u]*Cos[v],
                               b*Sin[u]*Cos[v],c*Sin[v]}^3

    astell[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tastell[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    bohdom[a_,b_,c_][u_,v_]:= {a*Cos[u],
                               a*Sin[u] + b*Cos[v],c*Sin[v]}

    bohdom[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tbohdom[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    bour[u_,v_]:= {(2*u^2 - u^4 - 2*v^2 + 6*u^2*v^2 - v^4)/4,
                    u*v*(-1 - u^2 + v^2),(2/3)*(u^3 - 3*u*v^2)}

    bour[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t bour[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    bour[m_][t_][u_,v_]:= Simplify[ComplexExpand[
        analytictominimal[bourmincurve[m]][t][u,v],
        TargetFunctions->{Re,Im}]]

    bourpolar[m_][t_][r_,theta_]:=
      {r^(m - 1)*Cos[t - (m - 1)*theta]/(m - 1) -
       r^(m + 1)*Cos[t - (m + 1)*theta]/(m + 1),
       r^(m - 1)*Sin[t - (m - 1)*theta]/(m - 1) +
       r^(m + 1)*Sin[t - (m + 1)*theta]/(m + 1),
       2*r^m*Cos[t - m*theta]/m}

    bourpolar[m_,n_][t_][r_,theta_]:=
      {r^(m - 1)*Cos[t - (m - 1)*theta]/(m - 1) -
       r^(m + 2*n - 1)*Cos[t - (m + 2*n - 1)*theta]/(m + 2*n - 1),
       r^(m - 1)*Sin[t - (m - 1)*theta]/(m - 1) +
       r^(m + 2*n - 1)*Sin[t - (m + 2*n - 1)*theta]/(m + 2*n - 1),
       2*r^(m + n - 1)*Cos[t - (m + n - 1)*theta]/(m + n - 1)}

    bourpolar[m_,n_][t_:0][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tbourpolar[m,n][t][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    boy[a_,b_,c_][u_,v_]:=
      {(a/2)*(-Cos[v]^2 + 2*Cos[u]^2*Sin[v]^2 + 
        Cos[v]*Cos[u]*Sin[v]*(-Cos[v]^2 + Cos[u]^2*Sin[v]^2) - 
        Sin[v]^2*Sin[u]^2 + 2*Cos[v]*Sin[v]*Sin[u]*
        (-Cos[v]^2 + Sin[v]^2*Sin[u]^2) - Sin[v]^4*Sin[4*u]/4),
       (Sqrt[3]/2)*b*(-Cos[v]^2 + 
        Cos[v]*Cos[u]*Sin[v]*(Cos[v]^2 - Cos[u]^2*Sin[v]^2) + 
        Sin[v]^2*Sin[u]^2 - (Sin[v]^4*Sin[4*u])/4),
       c*(Cos[v] + Cos[u]*Sin[v] + Sin[u]*Sin[v])*
         (-4*Sin[v]*(Cos[u] - Sin[u])*(-Cos[v] + Cos[u]*Sin[v])*
         (Cos[v] - Sin[u]*Sin[v]) + 
         (Cos[v] + Cos[u]*Sin[v] + Sin[u]*Sin[v])^3)}

    boy[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t boy[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    catalan[a_][u_,v_]:= {a*(u - Sin[u]*Cosh[v]),
                          a*(1 - Cos[u]*Cosh[v]),
                          -4*a*Sin[u/2]*Sinh[v/2]}

    catalan[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t catalan[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    catalandef[a_][t_][u_,v_]:=
        {a*Cos[t]*(u - Cosh[v]*Sin[u]) + 
         a*Sin[t]*(v - Cos[u]*Sinh[v]),
         a*Cos[t]*(1 - Cos[u]*Cosh[v]) + 
         a*Sin[t]*Sin[u]*Sinh[v],
         4*a*(1 - Cos[u/2]*Cosh[v/2])*Sin[t] - 
         4*a*Cos[t]*Sin[u/2]*Sinh[v/2]}

    catalandef[a_][t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t catalandef[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    catenoid[a_][u_,v_]:= {a*Cos[u]*Cosh[v/a],
                           a*Sin[u]*Cosh[v/a],v}

    catenoid[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcatenoid[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    catenoid[a_,b_,c_][u_,v_]:= {a*Cos[u]*Cosh[v],
                                 b*Sin[u]*Cosh[v],c*v}

    catenoidasym[a_][p_,q_]:=
        {a*Cos[(p + q)/2]*Cosh[(q - p)/2],
         a*Sin[(p + q)/2]*Cosh[(q - p)/2],
         a*(q - p)/2}

    catenoidasym[a_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t catenoidasym[a][p,q]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    catenoidiso[a_][u_,v_]:= {a*Cos[u/a]*Cosh[v/a],
                              a*Sin[u/a]*Cosh[v/a],v}

    catenoidiso[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcatenoidiso[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    circleinvolutemin[1,a_][t_][u_,v_]:=
       {a*Cos[t]*(Cos[u]*Cosh[v] +
           u*Cosh[v]*Sin[u] - v*Cos[u]*Sinh[v]) + 
        a*Sin[t]*(v*Cosh[v]*Sin[u] +
           u*Cos[u]*Sinh[v] - Sin[u]*Sinh[v]),
        a*Sin[t]*(-v*Cos[u]*Cosh[v] + Cos[u]*Sinh[v] + 
           u*Sin[u]*Sinh[v]) + a*Cos[t]*(-u*Cos[u]*Cosh[v] +
           Cosh[v]*Sin[u] - v*Sin[u]*Sinh[v]),
        -a*u*v*Cos[t] + a*(u^2 - v^2)*Sin[t]/2}

    circleinvolutemin[1,a_][t_:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcircleinvolutemin[1,a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    circularcone[a_,b_][u_,v_]:= {a*v*Cos[u],a*v*Sin[u],b*v}

    circularcone[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcircularcone[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    circularcylinder[a_][u_,v_]:= {a*Cos[u],a*Sin[u],v}

    circularcylinder[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcircularcylinder[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    clothoidmin[a_][t_][u_,v_]:=
      {a*Sqrt[Pi]*Cos[t]*Re[FresnelS[(u + I*v)/Sqrt[Pi]]] + 
       a*Sqrt[Pi]*Im[FresnelS[(u + I*v)/Sqrt[Pi]]]*Sin[t],
       a*Sqrt[Pi]*Cos[t]*Re[FresnelC[(u + I*v)/Sqrt[Pi]]] + 
       a*Sqrt[Pi]*Im[FresnelC[(u + I*v)/Sqrt[Pi]]]*Sin[t],
       -(a*v*Cos[t]) + a*u*Sin[t]}

    clothoidmin[a_][t_:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tclothoidmin[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cnccosurfrev[a_,b_][u_,v_]:= {b*Cos[u]*Sinh[v/a],
                                  b*Sin[u]*Sinh[v/a],
                      -I*Sqrt[a^2 - b^2]*EllipticE[I*v/a,
                      -b^2/(a^2 - b^2)]}

    cnccosurfrev[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t cnccosurfrev[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cnccotcheb[a_,b_][u_,v_]:=
        {(a/b)*JacobiCN[b*u,1/b^2]*Cos[b*v],
         (a/b)*JacobiCN[b*u,1/b^2]*Sin[b*v],
         a*(b*u - EllipticE[JacobiAmplitude[b*u,1/b^2],1/b^2])}
         
    cnccotcheb[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t cnccotcheb[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cnccotcheb[a_,b_,c_][u_,v_]:=
        {(a/b)*JacobiCN[b*u,1/b^2]*Cos[b*v],
         (a/b)*JacobiCN[b*u,1/b^2]*Sin[b*v],
         c*(b*u - EllipticE[JacobiAmplitude[b*u,1/b^2],1/b^2])}

    cnchysurfrev[a_,b_][u_,v_]:= {b*Cos[u]*Cosh[v/a],
                                  b*Sin[u]*Cosh[v/a],
                           - I*a*EllipticE[I*v/a,-b^2/a^2]}

    cnchysurfrev[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t cnchysurfrev[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cnchytcheb[a_,b_][u_,v_]:=
        {(a/b)*JacobiDN[u,b^2]*Cos[b*v],
         (a/b)*JacobiDN[u,b^2]*Sin[b*v],
         (a/b)*(u - EllipticE[JacobiAmplitude[u,b^2],b^2])}
         
    cnchytcheb[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcnchysurfrev[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cnchytcheb[a_,b_,c_][u_,v_]:=
        {(a/b)*JacobiDN[u,b^2]*Cos[b*v],
         (a/b)*JacobiDN[u,b^2]*Sin[b*v],
         (c/b)*(u - EllipticE[JacobiAmplitude[u,b^2],b^2])}

    cossurface[a_][u_,v_]:= {a*Cos[u],a*Cos[v],a*Cos[u + v]}

    cossurface[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcossurface[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    costa[u_,v_]:=
        {(1/2)*Re[-WeierstrassZeta[u + I*v,{189.07272,0}] +
        3.14159*u + 0.35889 +
        0.228473*(WeierstrassZeta[u + I*v - 1/2,{189.07272,0}] -
             WeierstrassZeta[u + I*v - I/2,{189.07272,0}])],
        (1/2)*Re[-I*WeierstrassZeta[u + I*v,{189.07272,0}] +
        3.14159*v + 0.35889 -
        0.228473*(I*WeierstrassZeta[u + I*v - 1/2,{189.07272,0}] -
             I*WeierstrassZeta[u + I*v - I/2,{189.07272,0}])],
        0.626657*Log[Abs[(WeierstrassP[u + I*v,{189.07272,0}] -
             6.87519)/
             (WeierstrassP[u + I*v,{189.07272,0}] + 6.87519)]]}

    costa[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcosta[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    cpcsurfrev[a_,b_][u_,v_]:= {b*Cos[u]*Cos[v/a],
                                b*Sin[u]*Cos[v/a],
                                a*EllipticE[v/a,b^2/a^2]}

    cpcsurfrev[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcpcsurfrev[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    crosscap[a_][u_,v_]:= {a^2*Sin[u]*Sin[2*v]/2,
                 a^2*Sin[2*u]*Cos[v]^2,a^2*Cos[2*u]*Cos[v]^2}

    crosscap[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tcrosscap[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    deltoidinvolutemin[a_][t_][u_,v_]:=
          {(a/3)*Cos[t]*(8*Cos[u/2]*Cosh[v/2] + 2*Cos[u]*Cosh[v] - 
            Cos[2*u]*Cosh[2*v]) + 
          (a/3)*Sin[t]*(-8*Sin[u/2]*Sinh[v/2] - 2*Sin[u]*Sinh[v] + 
            Sin[2*u]*Sinh[2*v]),
           (Cos[t]*(-8*a*Cosh[v/2]*Sin[u/2] + 2*a*Cosh[v]*Sin[u] + 
            a*Cosh[2*v]*Sin[2*u]))/3 + 
           (Sin[t]*(-8*a*Cos[u/2]*Sinh[v/2] + 2*a*Cos[u]*Sinh[v] + 
            a*Cos[2*u]*Sinh[2*v]))/3,
           (4*a*Sin[t]*(3*u - 2*Cosh[3*v/2]*Sin[3*u/2]))/9 - 
           (4*a*Cos[t]*(3*v - 2*Cos[3*u/2]*Sinh[3*v/2]))/9}

    deltoidinvolutemin[a_][t_:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tdeltoidinvolutemin[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    deltoidmin[a_][t_][u_,v_]:=
          {a*Cos[t]*(2*Cos[u]*Cosh[v] + Cos[2*u]*Cosh[2*v]) + 
           2*a*Sin[t]*Sin[u]*(-Sinh[v] - Cos[u]*Sinh[2*v]),
           -2*a*(Cos[u]*Sinh[v]*((-1 + Cos[u]*Cosh[v])*Sin[t] + 
            2*a*Cos[t]*Sin[u]*Sinh[v])) + 
            Cosh[v]*Sin[u]*(2*a*Cos[t]*(1 - Cos[u]*Cosh[v]) + 
            2*a*Sin[t]*Sin[u]*Sinh[v]),
            -(8/3)*a*Cos[3*u/2]*Cosh[3*v/2]*Sin[t] - 
           (8/3)*a*Cos[t]*Sin[3*u/2]*Sinh[3*v/2]}

    deltoidmin[a_][t_:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tdeltoidmin[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    dini[a_,b_][u_,v_]:= {a*Cos[u]*Sin[v],
                          a*Sin[u]*Sin[v],
                          a*(Cos[v] + Log[Tan[v/2]]) + b*u}

    dini[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tdini[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    dinihelicoid[pm_,a_,b_,c_][u_,v_]:=
          {v*Cos[u],v*Sin[u],c*u +
           pm*(Integrate[Sqrt[(b*c^2 + a^2*vv^2 + b*vv^2 - c^2*vv^2 - vv^4)/
                          (vv^4 -b*vv^2)],vv])} /. vv->v

    dinitcheb[a_,b_][u_,v_]:=
          {a*Cos[b]*Cos[v]/Cosh[(u - v*Sin[b])/Cos[b]],
           a*Cos[b]*Sin[v]/Cosh[(u - v*Sin[b])/Cos[b]],
           a*(u - Cos[b]*Tanh[(u - v*Sin[b])/Cos[b]])}

    dinitcheb[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tdinitcheb[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    dinitcheb[a_,b_,c_][u_,v_]:=
          {a*Cos[c]*Cos[v]/Cosh[(u - v*Sin[c])/Cos[c]],
           a*Cos[c]*Sin[v]/Cosh[(u - v*Sin[c])/Cos[c]],
           b*(u - Cos[c]*Tanh[(u - v*Sin[c])/Cos[c]])}

    earth[u_,v_]:= {6378.2*Cos[u]*Cos[v],6378.2*Sin[u]*Cos[v],
                    6356.6*Sin[v]}

    earth[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tearth[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    eighteight[u_,v_]:= {Sin[u]*Sin[v],
                         Cos[u]*Sin[u]*Sin[v],Cos[v]*Sin[v]}

    eighteight[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\teighteight[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    eightsurface[u_,v_]:=
        {Cos[u]*Sin[2*v],Sin[u]*Sin[2*v],Sin[v]}

    eightsurface[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\teightsurface[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellhypcyclide[a_,c_,k_][u_,v_]:=
        {(c*(k - c*Cos[u]) + a*Cos[u]*(a - k*Cos[v]))/
                 (a - c*Cos[u]*Cos[v]),
         (Sqrt[a^2 - c^2]*(a - k*Cos[v])*Sin[u])/
                 (a - c*Cos[u]*Cos[v]),
         (Sqrt[a^2 - c^2]*(k - c*Cos[u])*Sin[v])/
                 (a - c*Cos[u]*Cos[v])}

    ellhypcyclide[a_,c_,k_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellhypcyclide[a,c,k][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellipsemin[a_,b_][t_][u_,v_]:=
        {a*Cos[t]*Cos[u]*Cosh[v] - a*Sin[t]*Sin[u]*Sinh[v],
         b*Cos[t]*Sin[u]*Cosh[v] + b*Sin[t]*Cos[u]*Sinh[v],
        -b*(Cos[t]*Im[EllipticE[u + I*v,1 - a^2/b^2]] - 
            Sin[t]*Re[EllipticE[u + I*v,1 - a^2/b^2]])}

    ellipsemin[a_,b_][t:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellipsemin[a,b][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellipsoid[a_,c_][u_,v_]:= {a*Cos[v]*Cos[u],
                               a*Cos[v]*Sin[u],c*Sin[v]}
                              
    ellipsoid[a_,b_,c_][u_,v_]:= {a*Cos[v]*Cos[u],
                                  b*Cos[v]*Sin[u],c*Sin[v]}

    ellipsoid[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellipsoid[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellipticalhyperboloidminus[a_,b_,c_][u_,v_]:=
        {a*Cos[u] + a*v*Sin[u],-b*v*Cos[u] + b*Sin[u],c*v}

    ellipticalhyperboloidminus[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellipticalhyperboloidminus[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellipticalhyperboloidplus[a_,b_,c_][u_,v_]:=
        {a*Cos[u] - a*v*Sin[u],b*v*Cos[u] + b*Sin[u],c*v}

    ellipticalhyperboloidplus[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellipticalhyperboloidplus[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    ellipticcoor[d_,e_,f_][a_,b_,c_][w_][u_,v_]:=
         {d*Sqrt[(a - u)*(a - v)*(a - w)/((a - b)*(a - c))],
          e*Sqrt[(b - u)*(b - v)*(b - w)/((b - a)*(b - c))],
          f*Sqrt[(c - u)*(c - v)*(c - w)/((c - a)*(c - b))]}

    ellipticcoor[d_,e_,f_][a_,b_,c_][w_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    ellipticcoor[d,e,f][a,b,c][w][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    ellipticparaboloid[a_,b_][u_,v_]:=
                       {u,v,u^2/a^2 + v^2/b^2}

    ellipticparaboloid[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tellipticparaboloid[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    enneper[u_,v_]:= {u - u^3/3 + u*v^2,
                     -v + v^3/3 - v*u^2,u^2 - v^2}

    enneper[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tenneper[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
\t
    enneper[n_][t_][u_,v_]:= Simplify[ComplexExpand[
        analytictominimal[ennepermincurve[n]][t][u,v],
        TargetFunctions->{Re,Im}]]

    ennepercatenoidpolar[n_][t_][r_,theta_]:=
        {(n*(2*n + 1)*r^2*Cos[t - theta] +
          n*(2*n + 1)*Cos[t + theta] - 
          r^(n + 1)*(n*r^(n + 1)*Cos[t - theta - 2*n*theta] + 
          2*Cos[t - n*theta] + 4*n*Cos[t - n*theta]))/
         (n*(2*n + 1)*r),
         (n*(2*n + 1)*r^2*Sin[t - theta] -
          n*(2*n + 1)*Sin[t + theta] +
          r^(n + 1)*(2*Sin[t - n*theta] + 4*n*Sin[t - n*theta] + 
          n*r^(n + 1)*Sin[t + theta - 2*(n + 1)*theta]))/
         (n*(2*n + 1)*r),
          2*(r^(n + 1)*Cos[t - (n + 1)*theta] + 
         (n + 1)*(Cos[t]*Log[r] + theta*Sin[t]))/(n + 1)}

    ennepercatenoidpolar[n_,a_,b_][t_][r_,theta_]:=
        {(n*(2*n + 1)*r^2*Cos[t - theta] + 
          a^2*n*(2*n + 1)*Cos[t + theta] - 
          b*r^(n + 1)*(2*a*Cos[t - n*theta] + 
          4*a*n*Cos[t - n*theta] + 
          b*n*r^(n + 1)*Cos[t - (2*n + 1)*theta]))/
         (n*(2*n + 1)*r),
         (n*(2*n + 1)*r^2*Sin[t - theta] - 
          a^2*n*(2*n + 1)*Sin[t + theta] + 
          b*r^n*(b*n*r^(n + 2)*Sin[t - theta - 2*n*theta] + 
          2*a*r*Sin[t + theta - (n + 1)*theta] + 
          4*a*n*r*Sin[t + theta - (n + 1)*theta]))/
         (n*(2*n + 1)*r),
         (2*b*r^(n + 1)*Cos[t - (n + 1)*theta] + 
          2*a*(n + 1)*Cos[t]*Log[r] + 2*a*(n + 1)*theta*Sin[t])
          /(n + 1)}

    ennepercatenoidpolar[n_,a_,b_][t_:0][rmin_,rmax_,thetamin_,thetamax_,opt__\
_]:=
    ParametricPlot3D[Evaluate[
\tennepercatenoidpolar[n,a,b][t][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    enneperpolar[n_][t_][r_,theta_]:=
        {r*Cos[t - theta] - r^(2*n + 1)*
           Cos[t - (2*n + 1)*theta]/(2*n + 1),
         r*Sin[t - theta] + r^(2*n + 1)*
           Sin[t - (2*n + 1)*theta]/(2*n + 1),
         2*r^(n + 1)*Cos[t - (n + 1)*theta]/(n + 1)}

    enneperpolar[n_][t_:0][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tenneperpolar[n][t][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    exptwist[a_,c_][u_,v_]:=
             {a*v*Cos[u],a*v*Sin[u],a*E^(c*u)}

    exptwist[a_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\texptwist[a,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    exptwistasym[a_,c_][p_,q_]:=
            {a*E^(c*(p - q)/2)*Cos[p],
             a*E^(c*(p - q)/2)*Sin[p],
             a*E^(c*p)}

    exptwistasym[a_,c_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t exptwistasym[a,c][p,q]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    flattorus[a_,b_][u_,v_]:= {a*Cos[u],a*Sin[u],
                               b*Cos[v],b*Sin[v]}

    flattorus[a_,b_,c_,d_][u_,v_]:= {a*Cos[u],b*Sin[u],
                                     c*Cos[v],d*Sin[v]}

    funnel[a_,c_][u_,v_]:= {a*v*Cos[u],
                               c*v*Sin[u],c*Log[v]}

    funnel[a_,b_,c_][u_,v_]:= {a*v*Cos[u],
                               b*v*Sin[u],c*Log[v]}

    funnel[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tfunnel[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    funnelasym[c_][p_,q_]:= {c*E^(p - q)*Cos[p + q],
                     -c*E^(p - q)*Sin[p + q],c*(p - q)}

    funnelasym[c_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t funnelasym[c][p,q]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    gencube[n_,a_,b_,c_][u_,v_]:=
        {a*(Cos[u]*Sqrt[Cos[u]^2]^(n - 1) +
            Sin[u]*Sqrt[Sin[u]^2]^(n - 1))*
           (Cos[v]*Sqrt[Cos[v]^2]^(n - 1) +
            Sin[v]*Sqrt[Sin[v]^2]^(n - 1)),
         b*(-Cos[u]*Sqrt[Cos[u]^2]^(n - 1) +
            Sin[u]*Sqrt[Sin[u]^2]^(n - 1))*
           (Cos[v]*Sqrt[Cos[v]^2]^(n - 1) +
            Sin[v]*Sqrt[Sin[v]^2]^(n - 1)),
         c*(-Cos[v]*Sqrt[Cos[v]^2]^(n - 1) +
            Sin[v]*Sqrt[Sin[v]^2]^(n - 1))}

    gencube[n_,a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tgencube[n,a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    genhypparab[a_,b_][u_,v_]:= {a*(u + v),b*v,u^2 + 2*u*v}

    genhypparab[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tgenhypparab[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
\t
    genoctahedron[n_,a_,b_,c_][u_,v_]:=
        {a*Cos[u]*Cos[v]*Sqrt[Cos[u]^2*Cos[v]^2]^(n - 1),
         a*Sin[u]*Cos[v]*Sqrt[Sin[u]^2*Cos[v]^2]^(n - 1),
         a*Sin[v]*Sqrt[Sin[v]^2]^(n - 1)}

    genoctahedron[n_,a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tgenoctahedron[n,a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    handkerchief[a_][u_,v_]:= {u,v,
                    (1/3)*u^3 + u*v^2 +a*(u^2 - v^2)}

    handkerchief[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thandkerchief[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
\t
    heart[a_][u_,v_]:= {2*a*Cos[u]*(1 + Cos[v])*Sin[v],
                        2*a*Sin[u]*(1 + Cos[v])*Sin[v],
                        -2*a*Cos[v]*(1 + Cos[v])}
 
    heart[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\theart[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
\t
    helicoid[a_,c_][u_,v_]:= {a*v*Cos[u],a*v*Sin[u],c*u}

    helicoid[a_,b_,c_][u_,v_]:=
         {a*v*Cos[u],b*v*Sin[u],c*u}

    helicoid[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thelicoid[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
\t
    helicoidprin[b_][p_,q_]:=  {b*Cos[p + q]*Sinh[-p + q],
         b*Sin[p + q]*Sinh[-p + q],b*(p + q)}

    helicoidprin[b_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t helicoidprin[b][p,q]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    heltocat[t_][u_,v_]:=
        {Cos[u]*Cosh[v]*Sin[t] + Cos[t]*Sin[u]*Sinh[v],
         Cosh[v]*Sin[t]*Sin[u] - Cos[t]*Cos[u]*Sinh[v],
         u*Cos[t] + v*Sin[t]}

    heltocat[t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\theltocat[t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    henneberg[u_,v_]:=
        {2*Sinh[u]*Cos[v] - (2/3)*Sinh[3*u]*Cos[3*v],
         2*Sinh[u]*Sin[v] + (2/3)*Sinh[3*u]*Sin[3*v],
         2*Cosh[2*u]*Cos[2*v]}

    henneberg[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thenneberg[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    hyperbolicparaboloid[u_,v_]:= {u,v,u*v}

    hyperbolicparaboloid[a_][u_,v_]:= {u,v,a*u*v}
    
    hyperbolicparaboloid[umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\thyperbolicparaboloid[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    hyperboloid[a_,c_][u_,v_]:= {a*Cosh[v]*Cos[u],
                                 a*Cosh[v]*Sin[u],
                                 c*Sinh[v]}

    hyperboloid[a_,b_,c_][u_,v_]:= {a*Cosh[v]*Cos[u],
                                    b*Cosh[v]*Sin[u],
                                    c*Sinh[v]}

    hyperboloid[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thyperboloid[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    hyperboloidbis[a_,c_][u_,v_]:= {a*Sec[v]*Cos[u],
                                    a*Sec[v]*Sin[u],
                                    c*Tan[v]}

    hyperboloidbis[a_,b_,c_][u_,v_]:= {a*Sec[v]*Cos[u],
                                       b*Sec[v]*Sin[u],
                                       c*Tan[v]}

    hyperboloidbis[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thyperboloidbis[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    hypocycloidinvolutemin[a_,b_][t_][u_,v_]:=
        {Cos[t]*((a - b)*Cos[u]*Cosh[v] + 
         b*Cos[(a - b)*u/b]*Cosh[(a - b)*v/b]) + 
         Sin[t]*((-a + b)*Sin[u]*Sinh[v] - 
         b*Sin[(a - b)*u/b]*Sinh[(a - b)*v/b]),
         Cos[t]*((a - b)*Cosh[v]*Sin[u] - 
         b*Cosh[(a - b)*v/b]*Sin[(a - b)*u/b]) + 
         Sin[t]*((a - b)*Cos[u]*Sinh[v] - 
         b*Cos[((a - b)*u)/b]*Sinh[(a - b)*v/b]),
         (-4*(a - b)*b*Cos[(a*u)/(2*b)]*Cosh[(a*v)/(2*b)]*Sin[t])/a - 
        (4*(a - b)*b*Cos[t]*Sin[(a*u)/(2*b)]*Sinh[(a*v)/(2*b)])/a}

    hypocycloidinvolutemin[a_,b_][t_:0][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thypocycloidinvolutemin[a,b][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    hy2sheet[a_,c_][u_,v_]:= {a*Cosh[u]*Cosh[v],
                              a*Sinh[u]*Cosh[v],
                              c*Sinh[v]}

    hy2sheet[a_,b_,c_][u_,v_]:= {a*Cosh[u]*Cosh[v],
                                 b*Sinh[u]*Cosh[v],
                                 c*Sinh[v]}

    hy2sheet[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\thy2sheet[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    invertedcircularcone[{p1_,p2_,p3_},rho_,a_,b_][u_,v_]:=
        {p1 + rho^2*(-p1 + a*v*Cos[u])/
         ((-p3 + b*v)^2 + (-p1 + a*v*Cos[u])^2 + 
          (-p2 + a*v*Sin[u])^2),
         p2 + rho^2*(-p2 + a*v*Sin[u])/
         ((-p3 + b*v)^2 + (-p1 + a*v*Cos[u])^2 + 
          (-p2 + a*v*Sin[u])^2),
         p3 + rho^2*(-p3 + b*v)/
         ((-p3 + b*v)^2 + (-p1 + a*v*Cos[u])^2 + 
          (-p2 + a*v*Sin[u])^2)}

    invertedcircularcone[rho_,a_,b_][u_,v_]:=
        {a*rho^2*Cos[u]/(a^2*v + b^2*v),
         a*rho^2*Sin[u]/(a^2*v + b^2*v),
         b*rho^2/(a^2*v + b^2*v)}

    invertedcircularcone[{p1_,p2_,p3_},rho_,a_,b_][umin_,umax_,
                                                   vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tinvertedcircularcone[{p1,p2,p3},rho,a,b][u,v]],{u,umin,umax},
                {v,vmin,vmax},opt,Axes->None];
     
    invertedcircularcylinder[{p1_,p2_,p3_},rho_,a_][u_,v_]:=
        {p1 + rho^2*(-p1 + a*Cos[u])/
         ((-p3 + v)^2 + (-p1 + a*Cos[u])^2 + 
          (-p2 + a*Sin[u])^2),
          p2 + rho^2*(-p2 + a*Sin[u])/
          ((-p3 + v)^2 + (-p1 + a*Cos[u])^2 + 
           (-p2 + a*Sin[u])^2),
          p3 + rho^2*(-p3 + v)/
          ((-p3 + v)^2 + (-p1 + a*Cos[u])^2 + 
           (-p2 + a*Sin[u])^2)}

    invertedcircularcylinder[rho_,a_][u_,v_]:=
        {a*rho^2*Cos[u]/(a^2 + v^2),
         a*rho^2*Sin[u]/(a^2 + v^2),
         rho^2*v/(a^2 + v^2)}

    invertedcircularcylinder[{p1_,p2_,p3_},rho_,a_][umin_,umax_,
                                                    vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    invertedcircularcylinder[{p1,p2,p3},rho,a][u,v]],{u,umin,umax},
                {v,vmin,vmax},opt,Axes->None];
     
    invertedtorus[{p1_,p2_,p3_},rho_,a_,b_][u_,v_]:=
        {p1 + (rho^2*(-p1 + Cos[u]*(a + b*Cos[v])))/
         ((-p1 + Cos[u]*(a + b*Cos[v]))^2 + 
          (-p2 + (a + b*Cos[v])*Sin[u])^2 + (-p3 + b*Sin[v])^2),
         p2 + (rho^2*(-p2 + (a + b*Cos[v])Sin[u]))/
         ((-p1 + Cos[u]*(a + b*Cos[v]))^2 + 
          (-p2 + (a + b*Cos[v])*Sin[u])^2 + (-p3 + b*Sin[v])^2),
         p3 + (rho^2*(-p3 + b*Sin[v]))/
         ((-p1 + Cos[u]*(a + b*Cos[v]))^2 + 
          (-p2 + (a + b*Cos[v])*Sin[u])^2 + (-p3 + b*Sin[v])^2)}

    invertedtorus[rho_,a_,b_][u_,v_]:=
        {rho^2*Cos[u]*(a + b*Cos[v])/(a^2 + b^2 + 2*a*b*Cos[v]),
         rho^2*(a + b*Cos[v])*Sin[u]/(a^2 + b^2 + 2*a*b*Cos[v]),
         b*rho^2*Sin[v]/(a^2 + b^2 + 2*a*b*Cos[v])}

    invertedtorus[{p1_,p2_,p3_},rho_,a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    invertedtorus[{p1,p2,p3},rho,a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    jorgemeekspolar[n_,a_][r_,theta_]:=
        Re[jorgemeeksmincurve[n,a][r*E^(I*theta)]]

    jorgemeekspolar[2,a_][r_,theta_]:=
        {(a/8)*Log[(1 + r^2 + 2*r*Cos[theta])/(1 + r^2 - 2*r*Cos[theta])],
          -a*r*(1 + r^2)*Sin[theta]/(2*(1 + r^4 - 2*r^2*Cos[2*theta])),
          (a - a*r^4)/(4*(1 + r^4 - 2*r^2*Cos[2*theta]))}

    jorgemeekspolar[2,a_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tjorgemeekspolar[2,a][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    jorgemeekspolar[3,a_][r_,theta_]:=
    {(a/18)*(3*r^2/(1 + r^2 + r^4 + 2*(r + r^3)*Cos[theta] + 
        2*r^2*Cos[2*theta]) + (3*(r + r^3)*Cos[theta])/
       (1 + r^2 + r^4 + 2*(r + r^3)*Cos[theta] + 2*r^2*Cos[2*theta]) - 
       2*Log[1 + r^2 - 2*r*Cos[theta]] + 
       Log[1 + r^2 + r^4 + 2*(r + r^3)*Cos[theta] + 2*r^2*Cos[2*theta]]),
     -(a*(-(Sqrt[3]*Log[1 + r^2 + r*Cos[theta] - Sqrt[3]*r*Sin[theta]]) - 
       Sqrt[3]*r^6*Log[1 + r^2 + r*Cos[theta] - 
       Sqrt[3]*r*Sin[theta]] + 2*Sqrt[3]*r^3*Cos[3*theta]*
       (Log[1 + r^2 + r*Cos[theta] - Sqrt[3]*r*Sin[theta]] - 
        Log[1 + r^2 + r*Cos[theta] + Sqrt[3]*r*Sin[theta]]) + 
        Sqrt[3]*Log[1 + r^2 + r*Cos[theta] + Sqrt[3]*r*Sin[theta]] + 
        Sqrt[3]*r^6*Log[1 + r^2 + r*Cos[theta] + Sqrt[3]*r*Sin[theta]] + 
        3*(r + r^5)*Sin[theta] + 3*r^2*Sin[2*theta] + 
        3*r^4*Sin[2*theta]))/(18*(1 + r^6 - 2*r^3*Cos[3*theta])),
     (a - a*r^6)/(6*(1 + r^6 - 2*r^3*Cos[3*theta]))}

    jorgemeekspolar[3,a_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tjorgemeekspolar[3,a][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    kidney[a_][u_,v_]:=
        {a*Cos[u]*(3*Cos[v] - Cos[3*v]),
         a*Sin[u]*(3*Cos[v] - Cos[3*v]),
         a*(3*Sin[v] - Sin[3*v])}

    kidney[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kidney[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kleinbottle[a_][u_,v_]:=
        {(a + Cos[u/2]*Sin[v] - Sin[u/2]*Sin[2*v])*Cos[u],
         (a + Cos[u/2]*Sin[v] - Sin[u/2]*Sin[2*v])*Sin[u],
          Sin[u/2]*Sin[v] + Cos[u/2]*Sin[2*v]}

    kleinbottle[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kleinbottle[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kleinbottlebis[e_,f_][u_,v_]:=If[u<0,
        {f*Sin[u]/2,(-e - f/2 + f*Cos[u]/2)*Cos[v],
         (e + f/2 - f*Cos[u]/2)*Sin[v]},
        {10*Sin[0.105*u] + 2*(e + 0.033*f*u)*
         (Cos[0.105*u] + 4*Cos[0.21*u])*Cos[v]*
         (Sin[0.105*u] + 2*Sin[0.21*u])/
         Sqrt[100*Cos[0.105*u]^2 + 4*(Cos[0.105*u] + 
          4*Cos[0.21*u])^2*(Sin[0.105*u] + 2*Sin[0.21*u])^2],
         (Sin[0.105*u] + 2*Sin[0.21*u])^2 - 
         (10*(e + 0.033*f*u)*Cos[0.105*u]*Cos[v])/
         Sqrt[100*Cos[0.105*u]^2 + 4*(Cos[0.105*u] + 
          4*Cos[0.21*u])^2*(Sin[0.105*u] + 2*Sin[0.21*u])^2],
         (e + 0.033*f*u)*Sin[v]}]

    kleinbottlebis[e_,f_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kleinbottlebis[e,f][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kleinbottlebis[e_,f_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kleinbottlewri[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kleinbottlewri[u_,v_]:=If[Pi < u <= 2 Pi,
        {6*Cos[u]*(1 + Sin[u]) + 4*(1 - Cos[u]/2)*Cos[v + Pi],
        16*Sin[u],4*(1 - Cos[u]/2)*Sin[v]},
        {6*Cos[u]*(1 + Sin[u]) + 4*(1 - Cos[u]/2)*Cos[u]*Cos[v],
 \t 16*Sin[u] + 4*(1 - Cos[u]/2)*Sin[u]*Cos[v],
 \t 4*(1 - Cos[u]/2)*Sin[v]}]

    kleinbottlewri[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[
    kleinbottlewri[u,v],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    klein4[a_,b_][u_,v_]:=
        {(a + b*Cos[v])*Cos[u],(a + b*Cos[v])Sin[u],
          b*Sin[v]*Cos[u/2],b*Sin[v]*Sin[u/2]}

    kuen[a_][u_,v_]:=
         {2*a*(Cos[u] + u*Sin[u])*Sin[v]/(1 + u^2*Sin[v]^2),
          2*a*(Sin[u] - u*Cos[u])Sin[v]/(1 + u^2*Sin[v]^2),
          a*(Log[Tan[v/2]] + 2*Cos[v]/(1 + u^2*Sin[v]^2))}

    kuen[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kuen[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kuentcheb[a_][u_,v_]:=
        {2*a*Cosh[u]*(Cos[v] + v*Sin[v])/(v^2 + Cosh[u]^2),
         2*a*Cosh[u]*(Sin[v] - v*Cos[v])/(v^2 + Cosh[u]^2),
          a*(u - Sinh[2*u]/(v^2 + Cosh[u]^2))}

    kuentcheb[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    kuentcheb[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    kuentcheb[a_,b_][u_,v_]:=
        {2*a*Cosh[u]*(Cos[v] + v*Sin[v])/(v^2 + Cosh[u]^2),
         2*a*Cosh[u]*(Sin[v] - v*Cos[v])/(v^2 + Cosh[u]^2),
          b*(u - Sinh[2*u]/(v^2 + Cosh[u]^2))}

    kuentcheb[a_,b_,c_][u_,v_]:=
        {2*a*Cosh[u]*(Cos[v] + v*Sin[v])/(v^2 + Cosh[u]^2),
         2*b*Cosh[u]*(Sin[v] - v*Cos[v])/(v^2 + Cosh[u]^2),
          c*(u - Sinh[2*u]/(v^2 + Cosh[u]^2))}

    lemniscatemin[a_][t_][u_,v_]:=
        {(-16*a*Cos[u]*Cosh[v]*Sin[u]*Sinh[v]*
         (Cos[u]*Cosh[v]*Sin[t] + Cos[t]*Sin[u]*Sinh[v]))/
         (18 + Cos[4*u] - 12*Cos[2*u]*Cosh[2*v] + Cosh[4*v]) +
         (4*a*(3 - Cos[2*u]*Cosh[2*v])*
         (Cos[t]*Cos[u]*Cosh[v] - Sin[t]*Sin[u]*Sinh[v]))/
         (18 + Cos[4*u] - 12*Cos[2*u]*Cosh[2*v] + Cosh[4*v]),
         (a*(-Sin[t - 4*u] + 6*Cosh[2*v]*Sin[t - 2*u] - 
          6*Cosh[2*v]*Sin[t + 2*u] + Sin[t + 4*u] - 
          6*Sin[t - 2*u]*Sinh[2*v] -  6*Sin[t + 2*u]*Sinh[2*v] +
          2*Sin[t]*Sinh[4*v]))/(2*(-18 - Cos[4*u] +
          12*Cos[2*u]*Cosh[2*v] - Cosh[4*v])),
          a*(-Im[EllipticF[u + I*v,-1]]Cos[t] + 
          Re[EllipticF[u + I*v,-1]]*Sin[t])}

    lemniscatemin[a_][t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    lemniscatemin[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    logminpolar[n_][t_][r_,theta_]:=
        analytictominimalpolar[logmincurve[n]][t][r,theta]

    logminpolar[n_][t_:0][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tlogminpolar[n][t][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    menn[a_][u_,v_]:= {u,v,a*u^4 + u^2*v - v^2}

    menn[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    menn[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    mercatorellipsoid[a_,b_,c_][u_,v_]:=
        {a*Sech[v]*Cos[u],b*Sech[v]*Sin[u],c*Tanh[v]}

    mercatorellipsoid[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    mercatorellipsoid[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    mercatorsphere[a_][u_,v_]:=
        {a*Sech[v]*Cos[u],a*Sech[v]*Sin[u],a*Tanh[v]}

    mercatorsphere[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    mercatorsphere[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    mercatorsphere[a_,b_][u_,v_]:=
        {a*(Cos[u] + b*Cosh[v])/(Cosh[v] + b*Cos[u]),
         a*Sqrt[1 - b^2]*Sin[u]/(Cosh[v] + b*Cos[u]),
         a*Sqrt[1 - b^2]*Sinh[v]/(Cosh[v] + b*Cos[u])}

    mercatorsphere[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    mercatorsphere[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    moebcirc[a_][u_,v_]:={a*(-2*Cos[2*v]*Sin[u])/
     (-2 + Sqrt[2]*Cos[u]*Sin[v] + Sqrt[2]*Sin[u]*Sin[2*v]),
      a*(Sqrt[2]*(Cos[u]*Sin[v] - Sin[u]*Sin[2*v]))/
     (-2 + Sqrt[2]*Cos[u]*Sin[v] + Sqrt[2]*Sin[u]*Sin[2*v]),
       a*(-2*Cos[u]*Cos[v])/
     (-2 + Sqrt[2]*Cos[u]*Sin[v] + Sqrt[2]*Sin[u]*Sin[2*v])}

    moebcirc[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tmoebcirc[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    moebcirc[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    moebcirc[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    moebiusstrip[a_][u_,v_]:= {a*(Cos[u] + v*Cos[u/2]*Cos[u]),
        a*(Sin[u] + v*Cos[u/2]*Sin[u]),a*v*Sin[u/2]}

    moebiusstrip[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    moebiusstrip[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    monkeysaddle[u_,v_]:= {u,v,u^3 - 3*u*v^2}
    
    monkeysaddle[umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tmonkeysaddle[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    monkeysaddle[n_][u_,v_]:={u,v,
        Simplify[ComplexExpand[Re[(u + I*v)^n],
           TargetFunctions->{Re,Im}]]}

    monkeysaddlepolar[n_][r_,theta_]:=
        {r*Cos[theta],r*Sin[theta],r^n*Cos[n*theta]}

    monkeysaddlepolar[n_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tmonkeysaddlepolar[n][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    nodoidnds[vmin_,vmax_][a_,b_,c_,e_][u_,v_]:=
         Module[{tmpintr},
         tmpintr=
             intrinsic[delaunaykappa2[c,e],0,{0,0,-Pi/2},
             MaxSteps->2000,{vmin,vmax}][v];
         {Cos[u]*(a + b*tmpintr[[1]]),Sin[u]*(a + b*tmpintr[[1]]),
            b*tmpintr[[2]]}]
            
    nodoid[vmin_,vmax_][a_,b_,c_,e_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    nodoidnds[vmin,vmax][a,b,c,e][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
     parabolamin[a_][t_][u_,v_]:=
        {2*a*(u*Cos[t] + v*Sin[t]),
         a*((u^2 - v^2)*Cos[t] + 2*u*v*Sin[t]),
         (a*(-2*(u*v + ArcTan[u + Sqrt[1 + u^2],2*v])*Cos[t] + 
         (-2*v^2 + Log[(u + Sqrt[1 + u^2])^2 + 4*v^2])*Sin[t] + 
          2*Sqrt[1 + u^2]*(-(v*Cos[t]) + u*Sin[t])))/2}

    parabolamin[a_][t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    parabolamin[a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    paraboliccoor[d_,e_,f_][a_,b_,c_][w_][u_,v_]:=
         {d*Sqrt[(a - u)*(a - v)*(a - w)/(b - a)],
          e*Sqrt[(b - u)*(b - v)*(b - w)/(a - b)],
          f*(c - a - b + u + v + w)/2}

    paraboliccoor[d_,e_,f_][a_,b_,c_][w_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    paraboliccoor[d,e,f][a,b,c][w][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    paraboliccyclide[a_,k_][u_,v_]:=
        {u*(8*a^2 + k + v^2)/(16*a^2 + u^2 + v^2),
         v*(8*a^2 - k + u^2)/(16*a^2 + u^2 + v^2),
        (16*a^2*(k - u^2 + v^2) - k*(u^2 + v^2))/
        (8*a*(16*a^2 + u^2 + v^2))}

    paraboliccyclide[a_,k_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    paraboliccyclide[a,k][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    paraboloid[a_][u_,v_]:= {u,v,a*(u^2 + v^2)}

    paraboloid[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    paraboloid[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    paraboloid[a_,b_][u_,v_]:= {u,v,a*u^2 + b*v^2}

    paraboloid[a_,b_,c_][u_,v_]:=
    {u,v,a*u^2 + b*v^2 + c*u*v}

    paraboloidpolar[n_,a_,b_][r_,theta_]:=
    {a*r*Cos[theta],b*r*Sin[theta],b*r^n}

    paraboloidpolar[n_,a_,b_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tparaboloidpolar[n,a,b][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    pear[a_,b_][u_,v_]:= {b*Cos[u]*Cos[v]*(1 + Sin[v]),
                          b*Sin[u]*Cos[v]*(1 + Sin[v]),
                            -a*(1 + Sin[v])}
                            
    pear[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tpear[a,b][u,v]],
\t{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    pearbis[u_,v_]:={Cos[u]*(4 + 3.8*Cos[v]),
                     Sin[u]*(4 + 3.8*Cos[v]),
        ((Cos[v] - 3.5)*(1 + Sin[v])*Log[1 - Pi*v/10] +
          10*Sin[v])*(1 - 0.4*Cos[v/2]*(1 + 0.2*Sin[v^2]))}
          
    pearbis[umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tpearbis[u,v]],
\t{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    perturbedms[a_][u_,v_]:=
            {u,v,u^3 - 3*u*v^2 + a*(u^2 + v^2)}

    perturbedms[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    perturbedms[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    perturbedms[a_,b_,c_][u_,v_]:=
            {u,v,c*(u^3 - 3*u*v^2) + a*u^2 + b*v^2}

    perturbedms[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    perturbedms[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    perturbedmspolar[n_,a_][r_,theta_]:=
        {r*Cos[theta],r*Sin[theta],r^n*Cos[n*theta] + a*r^2}

    perturbedmspolar[n_,a_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tperturbedmspolar[n,a][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    pillow[a_][u_,v_]:= {a*Cos[u],a*Cos[v],a*Sin[u]*Sin[v]}

    pillow[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    pillow[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    plane[a1_,a2_,b1_,b2_,c1_,c2_][u_,v_]:=
        {a1*u + a2*v,b1*u + b2*v,c1*u + c2*v}

    planepolar[a_][r_,theta_]:= {a*r*Cos[theta],a*r*Sin[theta],0}

    planepolar[a_,b_][r_,theta_]:= {a*r*E^(b*theta)*Cos[theta],
                                    a*r*E^(b*theta)*Sin[theta],0}

    planepolar[a_,b_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tplanepolar[a,b][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    planetocat[t_][u_,v_]:=
        {Cos[t]*u + Sin[u]*Cosh[v],Sin[t]*Cos[u]*Cosh[v],
         v + Cos[t]*Cos[u]*Sinh[v]}
            
    planetocat[t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    planetocat[t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    plucker[u_,v_]:= {u,v,2*u*v/(u^2 + v^2)}
    
    plucker[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    plucker[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    plucker[n_][u_,v_]:= {u,v,Sin[n*ArcTan[u,v]]}
        
    plucker[m_,n_,a_][u_,v_]:= {a*u,a*v,
                    a*(u + v)^(m/2)*Sin[n*ArcTan[u,v]]}

    pluckerpolar[n_][r_,theta_]:=
                    {r*Cos[theta],r*Sin[theta],Sin[n*theta]}

    pluckerpolar[m_,n_,a_][r_,theta_]:=
        {a*r*Cos[theta],a*r*Sin[theta],a*r^m*Sin[n*theta]}

    pluckerpolar[m_,n_,a_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tpluckerpolar[m,n,a][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    pseudocrosscap[u_,v_]:=  
                 {(1 - u^2)*Sin[v],(1 - u^2)*Sin[2*v],u}

    pseudocrosscap[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    pseudocrosscap[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    pseudosphere[a_][u_,v_]:= {a*Cos[u]*Sin[v],
                               a*Sin[u]*Sin[v],
                               a*(Cos[v] + Log[Tan[v/2]])}

    pseudosphere[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    pseudosphere[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    pseudosphere[a_,b_][u_,v_]:= {a*Cos[u]*Sin[v],
                                  a*Sin[u]*Sin[v],
                                  b*(Cos[v] + Log[Tan[v/2]])}

    pseudosphere[a_,b_,c_][u_,v_]:= {a*Cos[u]*Sin[v],
                                     b*Sin[u]*Sin[v],
                                     c*(Cos[v] + Log[Tan[v/2]])}

    pseudospherebis[a_][u_,v_]:= {a*Cos[u]*Tanh[v],
                                  a*Sin[u]*Tanh[v],
                                  a*(Sech[v] + Log[Tanh[v/2]])}

    pseudospherebis[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    pseudospherebis[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    pseudospheretcheb[a_][u_,v_]:= {a*Cos[v]/Cosh[u],
                                    a*Sin[v]/Cosh[u],
                                    a*(u - Tanh[u])}

    pseudospheretcheb[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    pseudospheretcheb[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    pseudospheretcheb[a_,b_][u_,v_]:= {a*Cos[v]/Cosh[u],
                                       a*Sin[v]/Cosh[u],
                                       b*(u - Tanh[u])}

    pseudospheretcheb[a_,b_,c_][u_,v_]:= {a*Cos[v]/Cosh[u],
                                          b*Sin[v]/Cosh[u],
                                          c*(u - Tanh[u])}

    pseudospheretcheb[a_,b_,c_,d_][u_,v_]:= {a*Cos[v]/Cosh[u],
                                             b*Sin[v]/Cosh[u],
                                             c*u - d*Tanh[u]}

    rconoid[u_,v_]:= {v*Cos[u],v*Sin[u],2*Sin[u]}

    rconoid[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    rconoid[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    richmond[u_,v_]:=
        {(-3*u - u^5 + 2*u^3*v^2 + 3*u*v^4)/(6*(u^2 + v^2)),
         (-3*v - 3*u^4*v - 2*u^2*v^3 + v^5)/(6*(u^2 + v^2)),u}

    richmond[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    richmond[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    richmond[n_][t_][u_,v_]:= Simplify[ComplexExpand[
        analytictominimal[richmondmincurve[n]][t][u,v],
        TargetFunctions->{Re,Im}]]

    richmondpolar[n_][t_][r_,theta_]:=
        {-Cos[t + theta]/(2*r) - 
          r^(2*n + 1)*Cos[t - (2*n + 1)*theta]/(4*n + 2),
         -Sin[t + theta]/(2*r) + 
          r^(2*n + 1)*Sin[t - (2*n + 1)*theta]/(4*n + 2),
          r^n*Cos[t - n*theta]/n}

    richmondpolar[n_][t_:0][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\trichmondpolar[n][t][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    roman[a_][u_,v_]:= {(a^2/2)*Sin[2*u]Cos[v]^2,
                        (a^2/2)*Sin[u]*Sin[2*v],
                        (a^2/2)*Cos[u]*Sin[2*v]}

    roman[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    roman[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    roman[n_,a_][u_,v_]:= {(a^2/2)*(Cos[u]*Cos[v]^2*Sin[u])^n,
                           (a^2/2)*(Cos[v]*Sin[u]*Sin[v])^n,
                           (a^2/2)*(Cos[u]*Cos[v]*Sin[v])^n}

    rosemin[n_,a_][t_][u_,v_]:=
    {Cos[n*u]*Cosh[n*v]*(a*Cos[t]*Cos[u]*Cosh[v] - 
       a*Sin[t]*Sin[u]*Sinh[v]) + 
         Sin[n*u]*(-a*Cos[u]*Cosh[v]*Sin[t] - 
         a*Cos[t]*Sin[u]*Sinh[v])*Sinh[n*v],
       -Cos[u]*Sinh[v]*(-a*Cos[n*u]*Cosh[n*v]*Sin[t] - 
         a*Cos[t]*Sin[n*u]*Sinh[n*v]) + 
         Cosh[v]*Sin[u]*(a*Cos[t]*Cos[n*u]*Cosh[n*v] - 
         a*Sin[t]*Sin[n*u]*Sinh[n*v]),
       -a*Cos[t]*Im[EllipticE[n*(u + I*v),1 - n^2]]/n + 
        a*Re[EllipticE[n*(u + I*v),1 - n^2]]*Sin[t]/n}

    rosemin[n_,a_][t_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    rosemin[n,a][t][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    scherk[a_][u_,v_]:= {u,v,(1/a)*Log[Cos[a*v]/Cos[a*u]]}

    scherk[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    scherk[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    scherk[a_,theta_][u_,v_]:=
        {Sec[2*theta]*(Cos[theta]*u + Sin[theta]*v),
         Sec[2*theta]*(Sin[theta]*u + Cos[theta]*v),
         (1/a)*Log[
         Cos[a*Sec[2*theta]*(Sin[theta]*u + Cos[theta]*v)]/
         Cos[a*Sec[2*theta]*(Cos[theta]*u + Sin[theta]*v)]]}
   
    scherk5[u_,v_]:= {ArcSinh[u],ArcSinh[v],ArcSin[u*v]}

    scherk5[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    scherk5[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    scherk5[a_,b_,c_][u_,v_]:= {a*ArcSinh[u],
                                b*ArcSinh[v],
                                c*ArcSin[u*v]}

    shoe[a_,b_][u_,v_]:= {u,v,a*u^3 + b*v^2} 

    shoe[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tshoe[a,b][u,v]],
\t{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
    
    shoeasym[a_,b_][p_,q_]:=
    {(-3*b/(4*a))^(1/3)*(p - q)^(2/3),
                      -p - q,(b/4)*(p^2 + 14*p*q + q^2)}

    shoeasym[a_,b_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[Re[
\t shoeasym[a,b][p,q]]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    sievert[a_][u_,v_]:=
       {(2/(a + 1 - a*Sin[v]^2*Cos[u]^2))*
        (Sqrt[(a + 1)*(1 + a*Sin[u]^2)]*Sin[v]/Sqrt[a])*
         Cos[-u/Sqrt[a + 1] + ArcTan[Sqrt[a + 1]*Tan[u]]],
         (2/(a + 1 - a*Sin[v]^2*Cos[u]^2))*
         (Sqrt[(a + 1)*(1 + a*Sin[u]^2)]*Sin[v]/Sqrt[a])*
         Sin[-u/Sqrt[a + 1] + ArcTan[Sqrt[a + 1]*Tan[u]]],
         Log[Tan[v/2]]/Sqrt[a] + 2*(a + 1)*Cos[v]/
                   ((a + 1 - a*Sin[v]^2*Cos[u]^2)*Sqrt[a])}

    sievert[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    sievert[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    sinovaloid[n_,a_][u_,v_]:= {a*Cos[u]*Cos[v],
                                a*Sin[u]*Cos[v],
                                a*Nest[Sin,v,n]}

    sinovaloid[n_,a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    sinovaloid[n,a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    sinsurface[a_][u_,v_]:=
        {a*Sin[u],a*Sin[v],a*Sin[u + v]}

    sinsurface[a_][umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tsinsurface[a][u,v]],
\t{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
    
    snail[u_,v_]:=
        {u*Cos[v]*Sin[u],u*Cos[u]*Cos[v],-u*Sin[v]}

    snail[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    snail[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    sphere[a_][u_,v_]:=
        {a*Cos[v]*Cos[u],a*Cos[v]*Sin[u],a*Sin[v]}
        
    sphere[a_][umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tsphere[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    stereographicellipsoid[a_,b_,c_][u_,v_]:=
        {2*a*u/(u^2 + v^2 + 1),2*b*v/(u^2 + v^2 + 1),
         c*(u^2 + v^2 - 1)/(u^2 + v^2 + 1)}

    stereographicellipsoid[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
\tParametricPlot3D[Evaluate[
\tstereographicellipsoid[a,b,c][u,v]],
\t{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
    
    stereographicsphere[a_][u_,v_]:=
        {2*a*u/(u^2 + v^2 + 1),2*a*v/(u^2 + v^2 + 1),
         a*(u^2 + v^2 - 1)/(u^2 + v^2 + 1)}

    stereographicsphere[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    stereographicsphere[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    stereographicspherepolar[a_][r_,theta_]:=
        {2*a*r*Cos[theta]/(1 + r^2),
         2*a*r*Sin[theta]/(1 + r^2),
         a*(-1 + r^2)/(1 + r^2)}

    stereographicspherepolar[a_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tstereographicspherepolar[a][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    stereographicspherepolar[a_,b_][r_,theta_]:=
        {(2*a*E^(b*theta)*r*Cos[theta])/(1 + E^(2*b*theta)*r^2),
         (2*a*E^(b*theta)*r*Sin[theta])/(1 + E^(2*b*theta)*r^2),
         (a*(-1 + E^(2*b*theta)*r^2))/(1 + E^(2*b*theta)*r^2)}

    stereographicspherepolar[a_,b_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\tstereographicspherepolar[a,b][r,theta]],
\t{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];
    
    swallowtail[u_,v_]:={3*v^4 + u*v^2,-4*v^3 - 2*u*v,u}

    swallowtail[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    swallowtail[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    tetrahedral[m_,n_][A_,B_,C_][a_,b_,c_][u_,v_]:=
              {A*(u - a)^m*(v - a)^n,
               B*(u - b)^m*(v - b)^n,
               C*(u - c)^m*(v - c)^n}

    thomsen[a_,b_][u_,v_]:=
        {b*u/a + Sqrt[1+b^2]*Sinh[a*u]*Cos[a*v]/a^2,
        Sqrt[1 + b^2]*v/a + b*Cosh[a*u]*Sin[a*v]/a^2,
        Sinh[a*u]*Sin[a*v]/a^2}

    thomsen[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    thomsen[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    torus[a_,b_][u_,v_]:= {(a + b*Cos[v])*Cos[u],
                           (a + b*Cos[v])*Sin[u],
                            b*Sin[v]}

    torus[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    torus[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    torus[a_,b_,c_][u_,v_]:= {(a + b*Cos[v])*Cos[u],
                              (a + b*Cos[v])*Sin[u],
                               c*Sin[v]}

    torus[a_,b_,c_,d_][u_,v_]:= 
        {(a + b*Cos[v])*Cos[u],(d + b*Cos[v])*Sin[u],c*Sin[v]}

    torus[a_,b_,c_,d_,e_][u_,v_]:=
        {(a  +b*Cos[v])*Cos[u],(d + e*Cos[v])*Sin[u],c*Sin[v]}

    torusasym[pm_,a_][p_,q_]:=
        {(2*a*Cos[(p + q)/2]/(1 + Cosh[(p - q)/Sqrt[8]]^2)),
         (2*a*Sin[(p + q)/2]/(1 + Cosh[(p - q)/Sqrt[8]]^2)),
         pm*(2*a*Cosh[(p - q)/Sqrt[8]]/(1 + Cosh[(p - q)/Sqrt[8]]^2))}

    torusasym[pm_,a_][pmin_,pmax_,qmin_,qmax_,opt___]:=
    ParametricPlot3D[Evaluate[
\t torusasym[pm,a][p,q]],{p,pmin,pmax},{q,qmin,qmax},
\topt,Axes->None];

    torusbis[pm_,a_,b_][r_,theta_]:={r*Cos[theta],r*Sin[theta],
                                     pm*Sqrt[b^2 - (r - a)^2]}

    torusbis[pm_,a_,b_][rmin_,rmax_,thetamin_,thetamax_,opt___]:=
    ParametricPlot3D[Evaluate[
\ttorusbis[pm,a,b][r,theta]],{r,rmin,rmax},{theta,thetamin,thetamax},
\topt,Axes->None];

    twiflat[pm_,a_,c_][sl_][u_,v_]:= {v*Cos[u],v*Sin[u],
        sl*u + ArcSin[c/(v*a)]*c + Sqrt[v^2*a^2 - c^2]*pm}

    twiflat[pm_,a_,c_][sl_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    twiflat[pm,a,c][sl][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    twisphere[a_,b_][u_,v_]:= {a*Cos[u]*Cos[v],
                               a*Sin[u]*Cos[v],
                               a*Sin[v] + b*u}

    twisphere[a_,b_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    twisphere[a,b][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];

    veronese[a_][u_,v_]:= {u,v,u^2,u v,v^2}

    wallis[a_,b_,c_][u_,v_]:= {v*Cos[u],v*Sin[u],
                               c*Sqrt[a^2 - b^2*Cos[u]^2]}
 
    wallis[a_,b_,c_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    wallis[a,b,c][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    whitneyumbrella[u_,v_]:= {u*v,u,v^2}

    whitneyumbrella[umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    whitneyumbrella[u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
    wrinkles[a_][u_,v_]:= {u,v,a*(u/v + v/u)}

    wrinkles[a_][umin_,umax_,vmin_,vmax_,opt___]:=
    ParametricPlot3D[Evaluate[
    wrinkles[a][u,v]],{u,umin,umax},{v,vmin,vmax},
\topt,Axes->None];
     
(* Implicitly Defined Surfaces *)

    cossurfaceimplicit[a_][x_,y_,z_]:=
               (z - a*x*y)^2 - a^2(1 - x^2)(1 - y^2)

    crosscapimplicit[a_,b_][x_,y_,z_]:=
        (a*x^2 + b*y^2)(x^2 + y^2 + z^2) - 2*z*(x^2 + y^2)

    ellipsoidimplicit[a_,b_,c_][x_,y_,z_]:=
               (x/a)^2 + (y/b)^2 + (z/c)^2 - 1

    ellipticparaboloidimplicit[a_,b_,c_][x_,y_,z_]:=
               (x/a)^2 + (y/b)^2 - c*z
    
    equihom1implicit[x_,y_,z_]:= x*y*z - 1

    equihom2implicit[x_,y_,z_]:= (x^2 + y^2)*z - 1

    equihom3implicit[x_,y_,z_]:= x^2*(z - y^2)^3 - 1

    equihom4implicit[x_,y_,z_]:= x^2*(z - y^2)^3 + 1

    equihom5implicit[x_,y_,z_]:= z - x*y - x^3/3

    equihom6implicit[x_,y_,z_]:= z - x*y + Log[x]

    goursatimplicit[a_,b_,c_][x_,y_,z_]:= x^4 + y^4 + z^4 +
                   a*(x^2 + y^2 + z^2)^2 + b*(x^2 + y^2 + z^2) + c

    hyperboloidimplicit[a_,b_,c_][x_,y_,z_]:=
               (x/a)^2 + (y/b)^2 - (z/c)^2 - 1

    hy2sheetimplicit[a_,b_,c_][x_,y_,z_]:=
               (x/a)^2 - (y/b)^2 - (z/c)^2 - 1
    
    hyperbolicparaboloidimplicit[a_,b_,c_][x_,y_,z_]:=
               (x/a)^2 - (y/b)^2 - c*z

    kazoolaimplicit[a_,b_,c_,d_][x_,y_,z_]:=
        d + c*x^2y^2z^2 - a*(x^2 + y^2 + z^2) - b*(x^4 + y^4 + z^4)

    kummerimplicit[x_,y_,z_]:= x^4 + y^4 + z^4 -
             (y^2*z^2 + z^2*x^2 + x^2*y^2) - (x^2 + y^2 + z^2) + 1

    scherkimplicit[a_][x_,y_,z_]:=
               E^(a*z)*Cos[a*x] -  Cos[a*y]

    scherkimplicit[a_,phi_][x_,y_,z_]:=
               Tan[x/(a*Cos[phi])]*Tan[y/(a*Sin[phi])] - Tanh[z/a]

    scherk5implicit[x_,y_,z_]:=
               Sinh[x]*Sinh[y] - Sin[z]

    sinsurfaceimplicit[a_][x_,y_,z_]:=
               4*x^2*y^2*(a^2 - z^2) - a^2*(x^2 + y^2 - z^2)^2

    sphereimplicit[a_][x_,y_,z_]:=
               x^2 + y^2 + z^2 - a^2

    sphereimplicit[n_,a_][x_,y_,z_]:=
               x^(2*n) + y^(2*n) + z^(2*n) - a^(2*n)

    torusimplicit[a_,b_][x_,y_,z_]:=
              z^2 + (Sqrt[x^2 + y^2] - a)^2 - b^2

    twocuspsimplicit[x_,y_,z_]:= (z - 1)^2*(x^2 - z^2) -
           (x^2 - z)^2 - y^4 - y^2*(2*x^2 + z^2 + 2*z - 1)

(* Drum Plots *)

    circularmembrane[m_,n_,t_][r_,theta_]:=
        Flatten[{r*Cos[theta],r*Sin[theta],
            BesselJ[m,r*BesselJZeros[m,{n,n}]]*
            Cos[m*theta]*
            Cos[t*BesselJZeros[m,{n,n}]]}]

(*
    circularmembrane[m_,n_,t_][r_,theta_]:=
        {r*Cos[theta],r*Sin[theta],
            BesselJ[m,r*If[ListQ[BesselJZeros[m,{n,n}]]==True,
                  First[BesselJZeros[m,{n,n}]],BesselJZeros[m,{n,n}]]]*
            Cos[m*theta]*
            Cos[t*If[ListQ[BesselJZeros[m,{n,n}]==True],
                  First[BesselJZeros[m,{n,n}]],BesselJZeros[m,{n,n}]]]}
*)

      circularmembraneplot[m_,n_,t_,opts___]:=
        Module[{zzz},
             zzz=circularmembrane[m,n,t][r,theta];
             ParametricPlot3D[Evaluate[zzz],
                 {r,0,1},{theta,0,2*Pi},opts]]

      circularmembranemovie[m_,n_,{t_,tmin_,tmax_,numf_},
          opts___]:=
          Do[Module[{zzz},
             zzz=circularmembrane[m,n,t][r,theta];
             ParametricPlot3D[Evaluate[zzz],
                 {r,0,1},{theta,0,2*Pi},opts]],
                 {t,tmin,tmax,numf - 1}]

      squaremembrane[m_,n_,t_][u_,v_]:=
             {u,v,Sin[m*u]*Sin[n*v]*Cos[Sqrt[m^2 + n^2]*t]}

      squaremembraneplot[m_,n_,t_,opts___]:=
             ParametricPlot3D[Evaluate[
                squaremembrane[m,n,t][u,v]],
                 {u,0,Pi},{v,0,Pi},opts]

      squaremembranemovie[m_,n_,{t_,tmin_,tmax_,numf_},
          opts___]:=
             Do[ParametricPlot3D[Evaluate[
                squaremembrane[m,n,t][u,v]],
                 {u,0,Pi},{v,0,Pi},opts],
                 {t,tmin,tmax,numf - 1}]

(* Minimal Curves *)

    astroidmincurve[a_][z_]:= {a*Cos[z]^3,a*Sin[z]^3,
                               -3*I/4*a*Cos[2*z]}

    bourmincurve[m_][z_]:=
        {z^(m - 1)/(m - 1) - z^(m + 1)/(m + 1),
         I*(z^(m - 1)/(m - 1) + z^(m + 1)/(m + 1)),2*z^m/m}

    bourmincurve[m_,n_][z_]:=
        {z^(m - 1)/(m - 1) - z^(m + 2*n - 1)/(m + 2*n - 1),
         I*(z^(m - 1)/(m - 1) + z^(m + 2*n - 1)/(m + 2*n - 1)),
         2*z^(m + n - 1)/(m + n - 1)}

    cardioidmincurve[a_][z_]:= {2*a*Cos[z]*(1 + Cos[z]),
                  2*a*(1 + Cos[z])*Sin[z],8*I*a*Sin[z/2]}

    catalanmincurve[a_][z_]:= {a*z - a*Sin[z],a - a*Cos[z],
                                    -4*I*a*Cos[z/2] + 4*I*a}

    catenoidmincurve[a_][z_]:= {a*Cosh[z/a],z,-I*a*Sinh[z/a]}

(*
different: harmonictoanalytic[catenoid[a]][z]
*)

    cayleysexticmincurve[a_][z_]:=
         {4*a*Cos[z/2]^4*(-1 + 2*Cos[z]),
          4*a*Cos[z/2]^3*Sin[3*z/2],3*I*a*(z + Sin[z])}

    circleinvolutemincurve[n_,a_][z_]:=
        Module[{tmp1,tmp2,tmp3},
            tmp1=E^(I*tt)Normal[Series[E^(-I*tt),{tt,0,n}]];
            tmp2=a*ComplexExpand[{Re[tmp1],Im[tmp1]}];
            tmp3=tmp2 /. tt->z;
            Append[tmp3,I*a*z^(n + 1)/(n + 1)!]]

    cissoidmincurve[a_][z_]:= {2*a*z^2/(1 + z^2),
         2*a*z^3/(1 + z^2),2*I*a*(Sqrt[4 + z^2] - 
          Sqrt[3]*ArcTanh[Sqrt[4 + z^2]/Sqrt[3]])}

    clothoidmincurve[a_][z_]:=
            {a*Sqrt[Pi]*FresnelS[z/Sqrt[Pi]],
             a*Sqrt[Pi]*FresnelC[z/Sqrt[Pi]],I*a*z}

    cnchyprofilemincurve[pm_,a_,b_][z_]:=
        {pm*b*Cosh[z/a],-I*a*EllipticE[I*z/a,-b^2/a^2],I*z}

    costamincurve[z_]:=
        {(1/2)*(-WeierstrassZeta[z,{189.07272,0}] + Pi*(z - I) +
        (1 + I)*0.35889 +
        0.228473*(WeierstrassZeta[z - 1/2,{189.07272,0}] -
             WeierstrassZeta[z - I/2,{189.07272,0}])),
        (I/2)*(-WeierstrassZeta[z,{189.07272,0}] + Pi*(-z + 1) -
        (1 + I)*0.35889 -
        0.228473*(WeierstrassZeta[z - 1/2,{189.07272,0}] -
             WeierstrassZeta[z - I/2,{189.07272,0}])),
        Sqrt[2*Pi]/4*(Log[(WeierstrassP[z,{189.07272,0}] - 6.87519)/
             (WeierstrassP[z,{189.07272,0}] + 6.87519)] - Pi*I)}

    cpcprofilemincurve[pm_,a_,b_][z_]:= {b*pm*Cos[z/a],
                          a*EllipticE[z/a,b^2/a^2],I*z}

    deltoidinvolutemincurve[a_][z_]:=
        {(a/3)*(8*Cos[z/2] + 2*Cos[z] - Cos[2*z]),
         (a/3)*(-8*Sin[z/2] + 2*Sin[z] + Sin[2*z]),
          (4*a*I/9)*(3*z - 2*Sin[3*z/2])}

    deltoidmincurve[a_][z_]:= {-a + 2*a*Cos[z]*(1 + Cos[z]),
             2*a*(1 - Cos[z])*Sin[z],-8*(I/3)*a*Cos[3*z/2]}
    
    ellipsemincurve[a_,b_][z_]:= {a*Cos[z],b*Sin[z],
                                  I*b*EllipticE[z,-a^2/b^2]}

    ennepercatenoidmincurve[n_][z_]:=
        {1/z + z - 2*z^n/n - z^(2*n + 1)/(2*n + 1),
         I*(2*z^(n + 1) + 2*n^2*(z^2 - 1) + n*(-1 + z^2 +
         4*z^(n + 1) + z^(2*(n + 1))))/(n*(2*n + 1)*z),
         2*z^(n + 1)/(n + 1) + 2*Log[z]}

    ennepercatenoidmincurve[n_,a_,b_][z_]:=
        {a^2/z + z - 2*a*b*z^n/n - b^2*z^(2*n + 1)/(2*n + 1),
         I*(-a^2*n*(2*n + 1) + 2*a*b*(2*n + 1)*z^(n + 1) + 
         n*z^2*(1 + 2*n + b^2*z^(2*n)))/(n*(2*n + 1)*z),
         2*b*z^(n + 1)/(n + 1) + 2*a*Log[z]}    

    ennepermincurve[n_][z_]:= {z - z^(2*n + 1)/(2*n + 1),
        I*(z + z^(2*n + 1)/(2*n + 1)),2*z^(n + 1)/(n + 1)}

    epicycloidmincurve[a_,b_][z_]:=
              {(a + b)*Cos[z] - b*Cos[(a + b)*z/b],
               (a + b)*Sin[z] - b*Sin[(a + b)*z/b],
               -4*I*b*(a + b)*Cos[a*z/(2*b)]/a}

    hennebergmincurve[z_]:= {-8*Sinh[z]^3/3,
          8*I/3 - 2*I*Cosh[z] - 2*I/3*Cosh[3*z],2*Cosh[2*z]}

    hyperbolamincurve[a_,b_][z_]:= {a*Cos[z],b*Sin[z],
                                    b*EllipticE[I*z + a^2/b^2]}

    hypocycloidinvolutemincurve[a_,b_][z_]:=
       {(a^2*Cos[z] - 3*a*b*Cos[z] + 2*b^2*Cos[z] - 
         a*b*Cos[z - a*z/b] + 2*b^2*Cos[z - a*z/b] + 
         4*a*b*Cos[z - a*z/(2*b)] - 4*b^2*Cos[z - a*z/(2*b)])/a,
        (a^2*Sin[z] - 3*a*b*Sin[z] + 2*b^2*Sin[z] - 
         a*b*Sin[z - a*z/b] + 2*b^2*Sin[z - a*z/b] + 
         4*a*b*Sin[z - a*z/(2*b)] -  4*b^2*Sin[z - a*z/(2*b)])/a,
        2*I*(a^2 - 3*a*b + 2*b^2)*(a*z - 2*b*Sin[a*z/(2*b)])/a^2}

    hypocycloidmincurve[a_,b_][z_]:=
           {(a - b)*Cos[z] + b*Cos[(a - b)*z/b],
            (a - b)*Sin[z] - b*Sin[(a - b)*z/b],
            -4*I*(a - b)*b*Cos[a*z/(2*b)]/a}

    jorgemeeksmincurve[n_,a_][z_]:=
        {Integrate[jorgemeeksmincurveprime[n,a][zz][[1]],{zz,0,z}],
         Integrate[jorgemeeksmincurveprime[n,a][zz][[2]],{zz,0,z}],
         a*(1 + z^n)/(2*n*(1 - z^n))}

    jorgemeeksmincurve[2,a_][z_]:=
    {-I/4*a*Pi  + (a/4)*Log[(z + 1)/(z - 1)],
     -I*a*z/(2*(z^2 - 1)),a*(1 + z^2)/(4*(1 - z^2))}

    jorgemeeksmincurve[3,a_][z_]:=
    {(a/18)*(4*I*Pi + 3*z/(1 + z + z^2) - 4*Log[z - 1] + 2*Log[1 + z + z^2]),
      -(I*a/54)*(2*Sqrt[3]*Pi + 3*(3*z*(z + 1) - 
       4*Sqrt[3]*(z^3 - 1)*ArcTan[(2*z + 1)/Sqrt[3]])/(z^3 - 1)),
     a*(z^3 + 1)/(6*(1 - z^3))}

    jorgemeeksmincurve[4,a_][z_]:=
    {3*I/16*a*Pi + (a*(2*z - 3*(1 + z^2)*Log[-1 + z] + 
        3*(1 + z^2)*Log[1 + z]))/(16*(1 + z^2)),
     -I*a*z/(8*(z^2 - 1)) + 3*I*a*ArcTan[z]/8,
      a*(1 + z^4)/(8*(1 - z^4))}

    jorgemeeksmincurveprime[n_,a_][z_]:=
        {(a*(1 - z^(2*n - 2)))/(2*(z^n - 1)^2),
         (a*I*(1 + z^(2*n - 2)))/(2*(z^n - 1)^2),
          a*z^(n - 1)/(z^n - 1)^2}

    lemniscatemincurve[a_][z_]:=
        {(a*Cos[z])/(1 + Sin[z]^2),
         (a*Cos[z]*Sin[z])/(1 + Sin[z]^2),I*a*EllipticF[z,- 1]}

    logmincurve[n_][z_]:=
        Module[{ii,nn,zz},
            ii[nn_][zz_]:=Nest[Integrate[#,zz]&,1/zz,nn];
            wei[#&,ii[n]][z]]

    logspiralmincurve[a_,b_][z_]:= {a*E^(b*z)*Cos[z],
          a*E^(b*z)*Sin[z],(I*a*Sqrt[1 + b^2]*E^(b*z))/b}

    nephroidmincurve[a_][z_]:= {a*(3*Cos[z] - Cos[3*z]),
                   a*(3*Sin[z] - Sin[3*z]),-6*I*a*Cos[z]}

    nielsenspiralmincurve[a_][z_]:= 
        {a*CosIntegral[z],a*SinIntegral[z],I*a*Log[z]}

    parabolamincurve[a_][z_]:= {2*a*z,a*z^2,
        I*a*(z*Sqrt[1 + z^2] + Log[z + Sqrt[1 + z^2]])}

    richmondmincurve[n_][z_]:=
            {-1/(2*z) - z^(2*n + 1)/(4*n + 2),
             -I/(2*z) + I*z^(2*n + 1)/(4*n + 2),z^n/n}

    rosemincurve[n_,a_][z_]:= {a*Cos[z]*Cos[n*z],a*Cos[n*z]*Sin[z],
                               I*a*EllipticE[n*z,1 - n^2]/n}

    scherktowermincurveprime[n_][z_]:=
        {(1 - z^(2*n - 2))/(2*(1 + z^(2*n))),
         (I*(1 + z^(2*n - 2)))/(2*(1 + z^(2*n))),
          z^(n - 1)/(1 + z^(2*n))}

    scmincurve[z_]:= {z^2,z^3,
         I*(4/(27*z) + z/3)*Sqrt[4*z^2 + 9*z^4]}

    tractrixmincurve[a_][z_]:= {a*Sin[z],
                                a*(Cos[z] + Log[Tan[z/2]]),
                        I*a*(Log[Cos[z/2]] + Log[Sin[z/2]])}

(* Surface Metrics *)

    ee[geopolar[f_]][u_,v_]:= 1

    ff[geopolar[f_]][u_,v_]:= 0

    gg[geopolar[f_]][u_,v_]:= f[u,v]^2

    ee[liouville[f_,g_]][u_,v_]:= f[u] + g[v]

    ff[liouville[f_,g_]][u_,v_]:= 0

    gg[liouville[f_,g_]][u_,v_]:= f[u] + g[v]

    ee[poincare[lambda_]][u_,v_]:= 1/(lambda*v)^2

    ff[poincare[lambda_]][u_,v_]:= 0

    gg[poincare[lambda_]][u_,v_]:= 1/(lambda*v)^2

    ee[poincare[m_,n_,lambda_]][u_,v_]:= 1/(lambda*v)^m

    ff[poincare[m_,n_,lambda_]][u_,v_]:= 0

    gg[poincare[m_,n_,lambda_]][u_,v_]:= 1/(lambda*v)^n

    ee[poindisk[lambda_]][u_,v_]:=
                  1/(1 - lambda^2*(u^2 + v^2)/4)^2

    ff[poindisk[lambda_]][u_,v_]:= 0

    gg[poindisk[lambda_]][u_,v_]:=
                  1/(1 - lambda^2*(u^2 + v^2)/4)^2

    ee[schwarzschildplane[m_]][u_,v_]:=  -(1 - 2*m/v)

    ff[schwarzschildplane[m_]][u_,v_]:= 0

    gg[schwarzschildplane[m_]][u_,v_]:= 1/(1 - 2*m/v)

    ee[schwarzschildplane[m_,f_]][u_,v_]:= -(1 - 2*m/v + f[v])

    ff[schwarzschildplane[m_,f_]][u_,v_]:= 0

    gg[schwarzschildplane[m_,f_]][u_,v_]:= 1/(1 - 2*m/v + f[v])

End[]

EndPackage[]
\
\>", "Input",
  PageWidth->Infinity,
  InitializationCell->True,
  ShowSpecialCharacters->False],

Cell[BoxData[
    RowBox[{\(Get::"noopen"\), \(\(:\)\(\ \)\), "\<\"Cannot open \
\\!\\(\\\"CURVES`\\\"\\). \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::noopen\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    RowBox[{\(Needs::"nocont"\), \(\(:\)\(\ \)\), "\<\"Context \
\\!\\(\\\"CURVES`\\\"\\) was not created when Needs was evaluated. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Needs::nocont\\\"]\\)\"\>"}]], \
"Message"],

Cell[BoxData[
    \("SURFS`"\)], "Output"],

Cell[BoxData[
    \("{u,v}->agnesirev[a][u,v] is a parametrization of the surface of \
revolution formed from a rotated witch of Agnesi.  To plot try \
agnesirev[1][0,2Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->apple[u,v] is a parametrization of the surface of revolution \
that resembles an apple.  To plot try apple[0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->astell[a,b,c][u,v] is a parametrization of an astroidial \
ellipsoid with axes of lengths a, b and c.  To plot try \
astell[1,1,1][0,2Pi,-Pi/2,Pi/2,PlotPoints->{40,40},PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->bohdom[a,b,c][u,v] is a parametrization of a Bohemian dome. It \
is formed by moving an ellipse along a circle in a perpendicular plane so \
that the ellipse remains parallel to a plane.  To plot try \
bohdom[4,4,4][0,2Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->bour[u,v] is a parametrization of Bour's minimal surface.  To \
plot try bour[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->bourpolar[n][t][r,theta] is the polar parametrization of a \
1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[n][0][r,theta] is Bour's minimal surface of degree n. \
{r,theta}->bourpolar[m,n][t][r,theta] is the polar parametrization of a \
1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[m,n][0][r,theta] is Bour's minimal surface of degree \
{m,n}.  To plot try \
bourpolar[2,1][0][0,1.7,-Pi,Pi,PlotPoints->{20,40},PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->boy[a,b,c][u,v] is a parametrization of Boy's surface.  To plot \
try boy[4,4,1][-Pi/2,Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catalan[a][u,v] is a parametrization of Catalan's minimal \
surface.  To plot try catalan[1][-2Pi,2Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catalandef[a][t][u,v] is a 1-parameter family of minimal \
surfaces connecting Catalan's minimal surface to its conjugate.  To plot try \
catalandef[1][Pi/4][-2Pi,2Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catenoid[a][u,v] is the minimal surface of revolution generated \
by t->catenary[a][t].  To plot try catenoid[1][0,3Pi/2,-1.5,1.5]."\)], \
"Output"],

Cell[BoxData[
    \("{p,q}->catenoidasym[a][p,q] is a parametrization of a catenoid by \
asymptotic curves.  To plot try \
catenoidasym[1][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catenoidiso[a][u,v] is an isothermal parametrization of a \
catenoid.  To plot try catenoidiso[1][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->circleinvolutemin[1,a][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->circleinvolutemin[1,a][0][u,v] is a minimal \
surface containing the first involute of a circle as a geodesic.  To plot try \
circleinvolutemin[1,1][1][0,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->circularcone[a,b][u,v] is a parametrization of a circular cone \
of radius a and slope b/a.  To plot try \
circularcone[1,0.5][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->circularcylinder[a][u,v] is a parametrization of a circular \
cylinder of radius a.  To plot try circularcylinder[1][-Pi,Pi,-4,4]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->clothoidmin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->clothoidmin[a][0][u,v] is a minimal surface \
containing a clothoid as a geodesic.  To plot try \
clothoidmin[1][0][-5,5,-0.3,0.3,PlotPoints->{60,10}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnccosurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant negative curvature -1/a^2 of conic type.  To plot try \
cnccosurfrev[1,0.83][-Pi,Pi,-0.6,0.6]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnccotcheb[a,b][u,v] is a Tchebyshef parametrization of a \
constant negative curvature surface of revolution of conic type.  To plot try \
cnccotcheb[1,1.2][-3.5,3.5,-Pi/1.2,Pi/1.2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnchysurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant negative curvature -1/a^2 of hyperboloid type.  To \
plot try cnchysurfrev[1,0.83][-Pi,Pi,-0.6,0.6]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnchytcheb[a,b][u,v] is a Tchebyshef parametrization of a \
constant negative curvature surface of revolution of hyperboloid type.  To \
plot try cnchytcheb[1,0.8][-3.5,3.5,-Pi/0.8,Pi/0.8]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cossurface[a][u,v] is the surface {u,v}->a*{Cos[u],Cos[v],Cos[u \
+ v]}. The implicit equation is (z - a*x*y) == a^2*(1 - x^2)*(1 - y^2).  To \
plot try cossurface[1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->costa[u,v] is a parametrization of Costa's minimal \
surface."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cpcsurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant positive curvature 1/a^2. There are 3 cases: football \
type (a>b), sphere (a=b), barrel type (a<b).  To plot try \
cpcsurfrev[1,0.5][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->crosscap[a][u,v] is a parametrization of a cross cap in R^3.  \
To plot try crosscap[1][-Pi/2,Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->deltoidinvolutemin[a][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->deltoidinvolutemin[a][0][u,v] is a minimal \
surface containing the involute of a deltoid as a geodesic.  To plot try \
deltoidinvolutemin[1][0][-2Pi,2Pi,-0.3,0.3, \
PlotRange->All,PlotPoints->{40,10}."\)], "Output"],

Cell[BoxData[
    \("{u,v}->deltoidmin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->deltoidmin[a][0][u,v] is a minimal surface \
containing a deltoid as a geodesic.  To plot try \
deltoidmin[1][0][-Pi,Pi,-0.3,0.3,PlotRange->All,PlotPoints->{40,10}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->dini[a,b][u,v] is the standard parametrization of Dini's \
surface of constant negative curvature -1/a^2. It is the generalized helicoid \
of slant b generated by a tractrix. The case b=0 is the standard \
parametrization of a pseudosphere.  To plot try dini[1,0.2][0,4Pi,0.05,1, \
PlotPoints->{55,10},DisplayFunction->dip[EdgeForm[]]]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->dinihelicoid[pm,a,b,c][u,v] is a generalized helicoid of \
constant negative curvature -1/a^2 and slope c. The parameter pm is plus or \
minus 1."\)], "Output"],

Cell[BoxData[
    \("{u,v}->dinitcheb[a,b][u,v] is a Tchebyshef principal patch and \
{p,q}->dinitcheb[a,b][p + q,p - q] is a Tchebyshef asymptotic patch for \
Dini's surface of constant negative curvature -1/a^2.  To plot try \
dinitcheb[1,0.2][-3,3,0,6Pi,PlotPoints->{10,55},DisplayFunction->dip[EdgeForm[\
]]]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->earth[u,v] is a parametrization of the earth (with equatorial \
diameter 12756.4 kilometers and polar diameter 12713.2 kilometers).  To plot \
try earth[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eighteight[u,v] is a parametrization of the generalized surface \
of revolution formed by moving a figure eight about a figure eight.  To plot \
try eighteight[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eightsurface[u,v] is a surface of revolution generated by \
t->eight[t].  To plot try eightsurface[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellhypcyclide[a,c,k][u,v] is a parametrization of the cyclide \
of Dupin of radius k whose focal sets are the ellipse u->{a*Cos[u],Sqrt[a^2 - \
c^2]*Sin[u],0} and the hyperbola v->{c*Sec[v],0,Sqrt[a^2 - c^2]*Tan[v]}.  To \
plot try ellhypcyclide[8,3,5][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipsemin[a,b][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->ellipsemin[a,b][0][u,v] is an elliptical catenoid \
and {u,v}->ellipsemin[a,b][Pi/2][u,v] is an elliptical helicoid. The patch \
{u,v}->ellipsemin[a,b][0][u,v] contains the ellipse t->ellipse[a,b][t] as a \
geodesic.  To plot try ellipsemin[2,1][0][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipsoid[a,b,c][u,v] is a parametrization of an ellipsoid with \
axes of lengths a, b and c. {u,v}->ellipsoid[a,c][u,v] is a parametrization \
of an ellipsoid with axes of lengths a, a and c.  To plot try \
ellipsoid[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticalhyperboloidminus[a,b,c][u,v] is a parametrization of \
a hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidminus[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticalhyperboloidplus[a,b,c][u,v] is a parametrization of a \
hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidplus[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v,w}->ellipticcoor[d,e,f][a,b,c][w][u,v] is an elliptic coordinate \
patch on R^3. The parameters d, e and f are plus 1 or minus 1.  To plot try \
ellipticcoor[1,1,1][12,5,1][-1][1,5,5,12]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticparaboloid[a,b][u,v] is the surface {u,v}->{u,v,u^2/a^2 \
+ v^2/b^2}.  To plot try ellipticparaboloid[1,2][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->enneper[u,v] is a parametrization of Enneper's minimal surface. \
 To plot try enneper[-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->ennepercatenoidpolar[n,a,b][t][r,theta] is the polar \
parametrization of a 1-parameter family of minimal surfaces constructed from \
the minimal curve whose Weierstrass representation is given by f[z_]:=2 and \
g[z_]:=a/z + b*z^n. For t=0 and a=b=1 the surface has a catenoid-like bottom \
and an enneper-like top with n + 1 lobes.  To plot try \
ennepercatenoidpolar[1,1,1][0][0.40,1.08,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->enneperpolar[n][t][r,theta] is the polar parametrization of \
a 1-parameter family of minimal surfaces such that \
{r,theta}->enneperpolar[n][0][r,theta] is Enneper's minimal surface of degree \
n.  To plot try enneperpolar[1][0][0,2,-Pi,Pi,PlotPoints->{15,69}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->exptwist[a,c][u,v] is a parametrization of a helicoid-like \
surface whose twisting varies exponentially.  To plot try \
exptwist[1,0.2][0,4Pi,-1,1,PlotPoints->{60,10}]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->exptwistasym[a,c][p,q] is the parametrization by asymptotic \
curves of {u,v}->exptwist[a,c][u,v].  To plot try \
exptwistasym[1,0.3][-Pi,2Pi,-Pi,2Pi,PlotPoints->{48,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->flattorus[a,b][u,v] is a parametrization of a torus into R^4 as \
the product of two circles. {u,v}->flattorus[a,b,c,d][u,v]} is a \
parametrization of an elliptical torus into R^4 as the product of two \
ellipses. The Gaussian curvature is zero."\)], "Output"],

Cell[BoxData[
    \("{u,v}->funnel[1,1,c][u,v] is a parametrization of the surface of \
revolution formed by rotating the graph of t->c*Log[t].  To plot try \
funnel[5,1,2][-Pi,Pi,0.01,1]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->funnelasym[c][p,q] is the parametrization by asymptotic curves \
of the surface of revolution formed by rotating the graph of t->c*Log[t].  To \
plot try funnelasym[1][-Pi/2,Pi/2,0.0,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gencube[n,a,b,c][u,v] is a generalized cube. \
{u,v}->gencube[1,a/Sqrt[2],a/Sqrt[2],a][u,v] is a sphere. \
{u,v}->gencube[2,a,a,a][u,v] is a parametrization of an ordinary cube. \
{u,v}->genoctahedron[3,a,a,a][u,v] is an astroidial cube.  To plot try \
gencube[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->genhypparab[a,b][u,v] is a parametrization of a hyperbolic \
paraboloid as a ruled surface.  To plot try genhypparab[1,1][-1,1,-1,1]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->genoctahedron[n,a,b,c][u,v] is a generalized octahedron. \
{u,v}->genoctahedron[1,a,b,c][u,v] is an ellipsoid. \
{u,v}->genoctahedron[2,a,a,a][u,v] is a parametrization of an ordinary \
octahedron. {u,v}->genoctahedron[3,a,b,c][u,v] is an astroidial ellipsoid.  \
To plot try \
genoctahedron[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}].\
"\)], "Output"],

Cell[BoxData[
    \("{u,v}->handkerchief[a][u,v] is a parametrization of a handkerchief \
shaped surface.  To plot try handkerchief[1][-1,1,-1,1,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->heart[a][u,v] is a surface of revolution generated by \
t->cardioid[a][t] with the axis of revolution passing through the cusp.  To \
plot try heart[1][-Pi/2,Pi/2,-Pi,Pi,PlotPoints->{15,45}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->helicoid[a,c][u,v] is the standard parametrization of a \
circular helicoid of radius a and slant c. {u,v}->helicoid[a,b,c][u,v] is the \
standard parametrization of an elliptical helicoid of slant c.  To plot try \
helicoid[1,1,0.3][0,4Pi,-1,1,PlotPoints->{75,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->helicoidprin[b][u,v] is a parametrization of a circular \
helicoid of radius b and slant b by principal curves. The parametrization is \
also isothermal.  To plot try \
helicoidprin[1][-Pi/2,Pi/2,-Pi/2,Pi/2,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->heltocat[t][u,v] is a 1-parameter family of minimal surfaces \
connecting a helicoid to a catenoid.  To plot try \
heltocat[Pi/4][0,4Pi,-1.5,1.5,PlotPoints->{75,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->henneberg[u,v] is a parametrization of Henneberg's minimal \
surface.  To plot try henneberg[0.3,1,-Pi,Pi,PlotPoints->{15,45}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->hyperbolicparaboloid[u,v] is a parametrization of a hyperbolic \
paraboloid.  To plot try hyperbolicparaboloid[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->hyperboloid[a,c][u,v] is the standard parametrization of a \
circular hyperboloid of one sheet. {u,v}->hyperboloid[a,b,c][u,v] is the \
standard parametrization of an elliptical hyperboloid of one sheet.  To plot \
try hyperboloid[1,2,3][0,3Pi/2,-2,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->hypocycloidinvolutemin[a,b][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->hypocycloidinvolutemin[a,b][0][u,v] is a \
minimal surface containing the involute of a hypocycloid as a geodesic.  To \
plot try hypocycloidinvolutemin[4,1][0][-Pi,Pi,-1,1,PlotPoints->{99,15}]."\)],\
 "Output"],

Cell[BoxData[
    \("{u,v}->hy2sheet[a,c][u,v] is the standard parametrization of a \
circular hyperboloid of two sheets. {u,v}->hy2sheet[a,b,c][u,v] is the \
standard parametrization an elliptical hyperboloid of two sheets.  To plot \
try hy2sheet[1,1,1][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedcircularcone[{p1,p2,p3},rho,a,b][u,v] is a \
parametrization of {u,v}->circularcone[a,b][u,v] inverted with respect to a \
sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcone[rho,a,b][u,v] is a parametrization of \
{u,v}->{u,v}->circularcone[a,b][u,v] inverted with respect to a sphere of \
radius rho centered at the origin. An inverted circular cone is a cyclide of \
Dupin.  To plot try \
invertedcircularcone[40,1,1][-Pi,Pi,-40,40,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedcircularcylinder[{p1,p2,p3},rho,a][u,v] is a \
parametrization of {u,v}->circularcylinder[a][u,v] inverted with respect to a \
sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcylinder[rho,a][u,v] is a parametrization of \
{u,v}->circularcylinder[a][u,v] inverted with respect to a sphere of radius \
rho centered at the origin. An inverted circular cylinder is a cyclide of \
Dupin.  To plot try \
invertedcircularcylinder[40,1][-Pi,Pi,-40,40,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedtorus[{p1,p2,p3},rho,a,b][u,v] is a parametrization of \
{u,v}->torus[a,b][u,v] inverted with respect to a sphere of radius rho \
centered at {p1,p2,p3}. {u,v}->invertedtorus[rho,a,b][u,v] is a \
parametrization of {u,v}->torus[a,b][u,v] inverted with respect to a sphere \
of radius rho centered at the origin. An inverted torus is a cyclide of \
Dupin.  To plot try invertedtorus[40,8,3][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("jorgemeekspolar[n,a][r,theta] is a polar parametrization of a \
Jorge-Meeks n-noid.  To plot try \
jorgemeekspolar[3,1][0.001,1.999,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kidney[a][u,v] is a surface of revolution generated by \
t->nephroid[a][t].  To plot try kidney[1][0,3Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottle[a][u,v] is a parametrization in R^3 of the surface \
formed by moving and twisting a figure eight along a circle of radius a. The \
surface is nonorientable and a neighborhood of the self-intersection curve is \
nonorientable.  To plot try kleinbottle[2][-Pi/4,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottlebis[e,f][u,v] is a Klein bottle in R^3. A \
neighborhood of the self-intersection curve is orientable.  To plot try \
kleinbottlebis[1,2][-Pi,29.9517,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottlewri[u,v] is WRI's version of a Klein bottle in R^3. \
A neighborhood of the self-intersection curve is orientable.  To plot try \
kleinbottlewri[0,2Pi,0,2Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->klein4[a,b][u,v] is a parametrization of a Klein bottle as a \
surface in R^4."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kuen[a][u,v] is a parametrization of Kuen's surface. It has \
constant negative curvature -1/a^2.  To plot try kuen[1][-4,4,0.01,Pi - \
0.01]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kuentcheb[a][u,v] is a Tchebyshef principal patch and \
{p,q}->kuentcheb[a][p + q,p - q] is a Tchebyshef asymptotic patch for Kuen's \
surface of constant negative curvature -1/a^2.  To plot try \
kuentcheb[1][-4,4,-4,4]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->lemniscatemin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->lemniscatemin[a][0][u,v] is a minimal surface \
containing a lemniscate as a geodesic.  To plot try \
lemniscatemin[1][0][-Pi,Pi,-0.2Pi,0.2Pi,PlotPoints->{100,20}]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->logminpolar[n][t][r_,theta_] is a 1-parameter family of \
minimal surfaces whose height function is the identity and whose Gauss map is \
an iterated logarithm.  To plot try \
logminpolar[0][0][0.005,2.005,-3Pi,3Pi,PlotPoints->{10,60},ViewPoint->{-2.5,-\
1.5,1.6}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->menn[a][u,v] is a parametrization of Menn's surface.  To plot \
try menn[1][-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->mercatorellipsoid[a,b,c][u,v] is the Mercator injection of an \
ellipsoid with axes of lengths a, b and c into R^3.  To plot try \
mercatorellipsoid[1,2,3][0,3Pi/2,-0.49Pi,0.49Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->mercatorsphere[a][u,v] is the Mercator injection of a sphere of \
radius a into R^3.  To plot try \
mercatorsphere[1][0,3Pi/2,-0.49Pi,0.49Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->moebcirc[a][u,v] is a parametrization of a Moebius strip that \
has a circle as boundary.  To plot try moebcirc[1][0,Pi,0,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->moebiusstrip[a][u,v] is the standard parametrization of a \
Moebius strip.  To plot try \
moebiusstrip[1][0,2Pi,-0.3,0.3,PlotPoints->{40,5}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->monkeysaddle[u,v] is a parametrization of a monkey saddle. \
{u,v}->monkeysaddle[n][u,v] is a parametrization of a monkey saddle for a \
monkey with n-2 tails.  To plot try monkeysaddle[-1.1,1.1,-1.1,1.1]."\)], \
"Output"],

Cell[BoxData[
    \("{r,theta}->monkeysaddlepolar[n][r,theta] is a polar parametrization of \
a monkey saddle with n - 2 tails.  To plot try \
monkeysaddlepolar[3][0,1,0,2Pi,PlotRange->All,PlotPoints->{10,33}]."\)], \
"Output"],

Cell[BoxData[
    \("See nodoidnds.  To plot try \
nodoid[-9,9][8,3,1,0.6][0,3Pi/2,-9,9,PlotPoints->{21,51}]."\)], "Output"],

Cell[BoxData[
    \("nodoidnds[vmin,vmax][a,b,c,e][u,v] is an approximation over the \
interval vmin<v<vmax found by NDSolve to a nodoid. It is a surface of \
revolution of a curve of Delaunay of eccentricity e and has constant mean \
curvature."\)], "Output"],

Cell[BoxData[
    \("{u,v}->parabolamin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->parabolamin[a][0][u,v] is a minimal surface \
containing a parabola as a geodesic.  To plot try \
parabolamin[1][0][-2,2,-0.3,0.3,PlotPoints->{40,10}]."\)], "Output"],

Cell[BoxData[
    \("{u,v,w}->paraboliccoor[d,e,f][a,b,c][w][u,v] is a parabolic coordinate \
patch on R^3. The parameters d, e and f are plus 1 or minus 1.  To plot try \
paraboliccoor[1,1,1][2,1,3][4][-9,1,1,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->paraboliccyclide[a,k][u,v] is a parametrization of the cyclide \
of Dupin of radius k whose focal sets are the parabolas u->{u,0,-u^2/(8*a) + \
a} and v->{0,v,v^2/(8*a) - a}.  To plot try \
paraboliccyclide[2,1][-40,40,-40,40]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->paraboloid[a][u,v] is a circular paraboloid of radius a. \
{u,v}->paraboloid[a,b][u,v] and {u,v}->paraboloid[a,b,c][u,v] is either an \
elliptic or a hyperbolic paraboloid.  To plot try \
paraboloid[1][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->paraboloidpolar[n,a,b][r,theta] is a polar parametrization \
of a generalized paraboloid.  To plot try \
paraboloidpolar[2,2,1][0,1,0,3Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pear[a,b][u,v] is a surface of revolution generated by \
t->piriform[a,b][t] with the axis of revolution passing through the cusp.  To \
plot try pear[1,1][0,3Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pearbis[u,v] is a parametrization of the surface of revolution \
that resembles an pear.  To plot try pearbis[0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->perturbedms[a][u,v] is a parametrization of a monkey saddle \
perturbed by a circular paraboloid.  To plot try \
perturbedms[-1.0][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->perturbedmspolar[n,a][r,theta] is a polar parametrization \
of a monkey saddle of order n perturbed by a circular paraboloid.  To plot \
try perturbedmspolar[3,-1][0,1,0,2Pi,PlotPoints->{10,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pillow[a][u,v] is a pillow-shaped surface.  To plot try \
pillow[1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->plane[a1,a2,b1,b2,c1,c2][u,v] is a parametrization of a plane \
in R^3."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->planepolar[a][r,theta] is a polar parametrization of the \
plane."\)], "Output"],

Cell[BoxData[
    \("{u,v}->planetocat[t][u,v] is a 1-parameter family of minimal surfaces \
containing a plane and a catenoid. The principal curves of each surface are \
planar.  To plot try planetocat[0.1][0,3Pi/2,-2,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->plucker[u,v] is the standard parametrization of Plucker's \
surface. {u,v}->plucker[n][u,v] is a parametrization of Plucker's surface \
with n folds. {u,v}->plucker[m,n,a][u,v] is a generalization of the monkey \
saddle and Plucker's surface.  To plot try plucker[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->pluckerpolar[n][r,theta] is the polar parametrization of \
Plucker's surface with n folds. {r,theta}->pluckerpolar[m,n,a][r,theta] is a \
generalization of the polar parametrizations of the monkey saddle and \
Plucker's surface.  To plot try \
pluckerpolar[0,5,1][0,1,-Pi,Pi,PlotPoints->{10,75}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudocrosscap[u,v] is a parametrization of a pseudocrosscap in \
R^3.  To plot try pseudocrosscap[-1,0.5,0,2Pi,PlotPoints->{24,48}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->pseudosphere[a][u,v] is the standard parametrization of a \
pseudosphere of constant negative curvature -1/a^2.  To plot try \
pseudosphere[1][0,3Pi/2,0.001,Pi-0.001]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudospherebis[a][u,v] is a parametrization of a pseudosphere \
of constant negative curvature -1/a^2.  To plot try \
pseudospherebis[1][0,3Pi/2,0.01,2,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudospheretcheb[a][u,v] is a Tchebyshef principal patch and \
{p,q}->pseudospheretcheb[a][p + q,p - q] is a Tchebyshef asymptotic patch for \
a pseudosphere of constant negative curvature -1/a^2.  To plot try \
pseudospheretcheb[1][-2.8,2.8,0,3Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->rconoid[u,v] is a right conoid. It coincides with \
{u,v}->2*pluckerpolar[1][v/2,u].  To plot try rconoid[-Pi,Pi,-2,2]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->richmond[u,v] is a minimal surface with one planar end.  To \
plot try richmond[-1,1,-1,1,PlotRange->{{-1,1},{-1,1},Automatic}]."\)], \
"Output"],

Cell[BoxData[
    \("{r,theta}->richmondpolar[n][t][r,theta] is the polar parametrization \
of a 1-parameter family of minimal surfaces such that \
{r,theta}->richmondpolar[n][0][r,theta] is a minimal surface with one planar \
end of degree n.  To plot try richmondpolar[1][0][0.3,1.3,0,2Pi]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->roman[a][u,v] is a parametrization of Steiner's Roman surface \
of radius a in R^3.  To plot try roman[1][0,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->rosemin[n,a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->rosemin[n,a][0][u,v] contains the rose \
t->{a*Cos[t]*Cos[n*t],a*Cos[n*t]*Sin[t]} as a geodesic.  To plot try \
rosemin[3,1][0][0,Pi,-0.3,0.3,PlotPoints->{45,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->scherk[a][u,v] is a parametrization of Scherk's minimal \
surface. {u,v}->scherk[a,theta][u,v] is a parametrization of twisted Scherk's \
minimal surface of angle theta.  To plot try scherk[1][-Pi/2 + 0.01,3Pi/2 + \
0.01,-Pi/2 + .01,3Pi/2 + 0.01]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->scherk5[a,b,c][u,v] is a parametrization of Scherk's fifth \
minimal surface, where a, b, c are plus 1 or minus 1.  {u,v}->scherk5[u,v] is \
the same as {u,v}->scherk5[a,b,c][u,v]. To plot try scherk5[-1,1,-1,1]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->shoe[a,-a][u,v] resembles the instep of a shoe.  To plot try \
shoe[1,-1][-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->shoeasym[a,b][u,v] is an asymptotic parametrization of a shoe \
surface.  To plot try shoeasym[1,-1][-1,1.2,-1,1.2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sievert[a][u,v] is a parametrization of Sievert's surface of \
constant positive curvature a^2.  To plot try sievert[1][-Pi/2,Pi/2,0.001,Pi \
- 0.001]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sinovaloid[n,a][u,v] is the surface of revolution generated by \
t->sinoval[n,a][t].  To plot try sinovaloid[3,1][0,3Pi/2,-Pi/2,Pi/2]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->sinsurface[a][u,v] is the {u,v}->a*{Sin[u],Sin[v],Sin[u + v]}. \
The implicit equation is 4*x^2*y^2*(a^2 - z^2) == a^2*(x^2 + y^2 - z^2)^2.  \
To plot try sinsurface[1][-Pi,Pi,-Pi,Pi,PlotPoints->{40,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->snail[u,v] is a surface resembling a snail.  To plot try \
snail[-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sphere[a][u,v] is the standard parametrization of a sphere of \
radius a centered at the origin.  To plot try sphere[1][0,3Pi/2,-Pi/2,Pi/2]."\
\)], "Output"],

Cell[BoxData[
    \("{u,v}->stereographicellipsoid[a,b,c][u,v] is a stereographic \
parametrization of an ellipsoid with axes of lengths a, b and c.  To plot try \
stereographicellipsoid[5,3,1][-2.8,2.8,-2.8,2.8]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->stereographicsphere[a][u,v] is a stereographic parametrization \
of a sphere of radius a in R^3.  To plot try \
stereographicsphere[1][-2.8,2.8,-2.8,2.8,PlotPoints->{40,40}]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->stereographicspherepolar[a][r,theta] is a polar \
stereographic parametrization of a sphere of radius a in R^3.  To plot try \
stereographicspherepolar[1][0,3,0,2Pi,PlotPoints->{10,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->swallowtail[u,v] is a parametrization of a swallow tail shaped \
surface.  To plot try \
swallowtail[-3,2,-0.8,0.8,PlotRange->All,PlotPoints->{10,15},ViewPoint->{4,1,-\
4}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tetrahedral[m,n][A,B,C][a,b,c][u,v] is a parametrization of a \
tetrahedral surface."\)], "Output"],

Cell[BoxData[
    \("{u,v}->thomsen[a,b][u,v] is a parametrization of Thomsen's minimal \
surface.  To plot try thomsen[1,-2][-Pi/2,Pi/2,0,2Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->torus[a,b][u,v] is a parametrization of the torus formed by \
revolving a circle of radius b in the xz-plane about the z-axis along a \
circle of radius a in the xy-plane. {u,v}->torus[a,b,c][u,v] is a \
parametrization of the torus formed by revolving an ellipse with axes of \
lengths b and c in the xz-plane about the z-axis along a circle of radius a \
in the xy-plane. {u,v}->torus[a,b,b,d,d][u,v] is a surface formed by moving a \
circle of radius b in the xz-plane along an ellipse in the xy-plane. \
{u,v}->torus[a,b,c,d,e][u,v] is a surface formed by moving an ellipse in the \
xz-plane along an ellipse in the xy-plane.  To plot try \
torus[8,3][0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->torusasym[pm,a][p,q] is an asymptotic parametrization of \
{u,v}->torus[a,a][u,v]. The parameter pm is plus or minus 1.  To plot try \
torusasym[1,1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->torusbis[pm,a,b][u,v] is a parametrization of a torus. The \
parameter pm is plus or minus 1.  To plot try \
torusbis[1,8,3][5,11,0,2Pi,PlotPoints->{10,33}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->twiflat[pm,a,c][sl][u,v] is a parametrization of a generalized \
helicoid of zero Gaussian curvature of slant sl. The parameter pm is plus or \
minus 1.  To plot try \
twiflat[1,1,1][1][0,7Pi/2,1,5,PlotPoints->{40,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->twisphere[a,b][u,v] is a parametrization of a generalized \
helicoid formed by rotating and twisting a semicircle. It is also called a \
corkscrew surface.  To plot try twisphere[1,1][0,2Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->veronese[a][u,v] is a parametrization of a Veronese surface in \
R^5."\)], "Output"],

Cell[BoxData[
    \("{u,v}->wallis[a,b,c][u,v] is a parametrization of a conical edge of \
Wallis.  To plot try wallis[1,1,3][Pi/4,3Pi/4,0,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->whitneyumbrella[u,v] is a parametrization of a Whitney \
umbrella.  To plot try whitneyumbrella[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->wrinkles[a][u,v] is the Monge patch {u,v}->{u,v,a*(u/v + v/u)}. \
 To plot try wrinkles[0.05][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("cossurfaceimplicit[a][x,y,z]==0 is the nonparametric form of the \
surface {u,v}->{a*Cos[u],a*Cos[v],a*Cos[u + v]}."\)], "Output"],

Cell[BoxData[
    \("crosscapimplicit[a,b][x,y,z]==0 is the nonparametric form of a \
crosscap."\)], "Output"],

Cell[BoxData[
    \("ellipsoidimplicit[a,b,c][x,y,z]==0 is the nonparametric form of an \
ellipsoid."\)], "Output"],

Cell[BoxData[
    \("ellipticparaboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric form \
of an elliptic paraboloid."\)], "Output"],

Cell[BoxData[
    \("equihom1implicit[x,y,z]==0 is the nonparametric form of the first \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom2implicit[x,y,z]==0 is the nonparametric form of the second \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom3implicit[x,y,z]==0 is the nonparametric form of the third \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom4implicit[x,y,z]==0 is the nonparametric form of the fourth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom5implicit[x,y,z]==0 is the nonparametric form of the fifth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom6implicit[x,y,z]==0 is the nonparametric form of the sixth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("goursatimplicit[a,b,c][x,y,z]==0 is the nonparametric form of \
Goursat's surface."\)], "Output"],

Cell[BoxData[
    \("hyperbolicparaboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric \
form of a hyperbolic paraboloid."\)], "Output"],

Cell[BoxData[
    \("hyperboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric form of a \
hyperboloid of one sheet."\)], "Output"],

Cell[BoxData[
    \("hy2sheetimplicit[a,b,c][x,y,z]==0 is the nonparametric form of a \
hyperboloid of two sheets."\)], "Output"],

Cell[BoxData[
    \("kazoolaimplicit[a,b,c,d][x,y,z]==0 is the nonparametric form of a \
kazoola."\)], "Output"],

Cell[BoxData[
    \("kummerimplicit[x,y,z]==0 is the nonparametric form of Kummer's \
surface."\)], "Output"],

Cell[BoxData[
    \("scherkimplicit[a][x,y,z]==0 is the nonparametric form of Scherk's \
minimal surface. scherkimplicit[a,phi][x,y,z]==0 is the nonparametric form of \
a twisted Scherk's minimal surface."\)], "Output"],

Cell[BoxData[
    \("scherk5implicit[x,y,z]==0 is the nonparametric form of a Scherk's \
fifth minimal surface."\)], "Output"],

Cell[BoxData[
    \("sinsurfaceimplicit[a][x,y,z]==0 is the nonparametric form of the \
surface {u,v}->{a*Sin[u],a*Sin[v],a*Sin[u + v]}."\)], "Output"],

Cell[BoxData[
    \("sphereimplicit[a][x,y,z]==0 is the nonparametric form of a sphere. \
sphereimplicit[n,a][x,y,z]==0 is the nonparametric form of the surface \
x^(2*n) + y^(2*n) +z^(2*n) = a^(2*n)."\)], "Output"],

Cell[BoxData[
    \("torusimplicit[a,b][x,y,z]==0 is the nonparametric form of a \
torus."\)], "Output"],

Cell[BoxData[
    \("twocuspsimplicit[x,y,z]==0 is the nonparametric form of a surface with \
two cusps."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->circularmembrane[m,n,t][r,theta] is a parametrization of a \
circular membrane of degree {m,n} at time t."\)], "Output"],

Cell[BoxData[
    \("circularmembraneplot[m,n,t] plots a circular membrane of degree {m,n} \
at time t."\)], "Output"],

Cell[BoxData[
    \(" circularmembranemovie[m,n,{t,tmin,tmax,numf}] animates a circular \
membrane of degree {m,n} from tmin to tmax with numf frames."\)], "Output"],

Cell[BoxData[
    \("{u,v}->squaremembrane[m,n,t][u,v] is a parametrization of a square \
membrane of degree {m,n} at time t."\)], "Output"],

Cell[BoxData[
    \("squaremembraneplot[m,n,t] plots a square membrane of degree {m,n} at \
time t."\)], "Output"],

Cell[BoxData[
    \("squaremembranemovie[m,n,{t,tmin,tmax,numf}] animates a square membrane \
of degree {m,n} from tmin to tmax with numf frames."\)], "Output"],

Cell[BoxData[
    \("z->astroidmincurve[a][z] is the minimal curve generated by the astroid \
t->astroid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->bourmincurve[m][z] is the minimal curve corresponding to Bour's \
minimal surface of order m. z->bourmincurve[m,n][z] is the minimal curve \
corresponding to Bour's minimal surface of order {m,n}. Note that \
bourmincurve[m]=bourmincurve[m,1], enneper[n]=bourmincurve[2,n] and \
richmond[n][z]=bourmincurve[0,n + 1][z]/2."\)], "Output"],

Cell[BoxData[
    \("z->cardioidmincurve[a][z] is the minimal curve generated by the \
cardioid t->cardioid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->catalanmincurve[a][z] is the minimal curve corresponding to \
Catalan's minimal surface. It contains a cycloid as a geodesic."\)], "Output"],

Cell[BoxData[
    \("z->catenoidmincurve[a][z] is the minimal curve corresponding to a \
catenoid. It contains a circle as a geodesic."\)], "Output"],

Cell[BoxData[
    \("z->cayleysexticmincurve[a][z] is the minimal curve generated by the \
Cayley's sextic t->cayleysextic[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->circleinvolutemincurve[n,a][z] is the minimal curve generated by \
the nth involute starting at {a,0} of the circle t->{a*Cos[t],a*Sin[t]}."\)], \
"Output"],

Cell[BoxData[
    \("z->cissoidmincurve[a][z] is the minimal curve generated by the cissoid \
t->cissoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->clothoidmincurve[a][z] is the minimal curve generated by the \
clothoid t->clothoid[1,a][z]."\)], "Output"],

Cell[BoxData[
    \("z->cnchyprofilemincurve[pm,a,b][z] is the minimal curve generated by \
the curve t->cnchyprofile[pm,a,b][t]. The parameter pm is plus 1 or -1."\)], \
"Output"],

Cell[BoxData[
    \("z->costamincurve[z] is the minimal curve that determines Costa's \
minimal surface."\)], "Output"],

Cell[BoxData[
    \("z->cpcprofilemincurve[pm,a,b][z] is the minimal curve generated by the \
curve t->cpcprofile[pm,a,b][t]. The parameter pm is plus 1 or -1."\)], \
"Output"],

Cell[BoxData[
    \("z->deltoidinvolutemincurve[a][z] is the minimal curve generated by the \
involute starting at t=0 of t->deltoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->deltoidmincurve[a][z] is the minimal curve generated by the deltoid \
t->deltoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->ellipsemincurve[a,b][z] is the minimal curve generated by the \
ellipse t->ellipse[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->ennepercatenoidmincurve[n,a,b][z] is the minimal curve whose \
Weierstrass representation is given by f[z_]:=2 and g[z_]:=a/z + b*z^n."\)], \
"Output"],

Cell[BoxData[
    \("z->ennepermincurve[n][z] is the minimal curve corresponding to \
Enneper's minimal surface of order n."\)], "Output"],

Cell[BoxData[
    \("z->epicycloidmincurve[a,b][z] is the minimal curve generated by the \
epicycloid t->epicycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hennebergmincurve[z] is the minimal curve corresponding to \
Henneberg's minimal surface."\)], "Output"],

Cell[BoxData[
    \("z->hyperbolamincurve[a,b][z] is the minimal curve generated by the \
hyperbola t->hyperbola[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hypocycloidinvolutemincurve[a,b][z] is the minimal curve generated \
by the involute starting at t=0 of t->hypocycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hypocycloidmincurve[a,b][z] is the minimal curve generated by the \
hypocycloid t->hypocycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->jorgemeeksmincurve[n,a][z] is the minimal curve used to generate \
the Jorge-Meeks n-noid."\)], "Output"],

Cell[BoxData[
    \("z->jorgemeeksmincurveprime[n,a][z] is the derivative of \
z->jorgemeeksmincurve[n,a][z]."\)], "Output"],

Cell[BoxData[
    \("z->lemniscatemincurve[a][z] is the minimal curve generated by the \
lemniscate t->lemniscate[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->logmincurve[n][z] is a minimal curve whose height function is the \
identity and whose Gauss map is an iterated logarithm."\)], "Output"],

Cell[BoxData[
    \("z->logspiralmincurve[a,b][z] is the minimal curve generated by the log \
spiral t->logspiral[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->nephroidmincurve[a][z] is the minimal curve generated by the \
nephroid t->nephroid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->nielsenspiralmincurve[a][z] is the minimal curve generated by \
Nielsen's spiral t->nielsenspiral[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->parabolamincurve[a][z] is the minimal curve generated by the \
parabola t->parabola[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->richmondmincurve[n][z] is the minimal curve corresponding to \
Richmond's minimal surface of order n."\)], "Output"],

Cell[BoxData[
    \("z->rosemincurve[n,a][z] is the minimal curve generated by the rose \
t->rose[n,a][t]."\)], "Output"],

Cell[BoxData[
    \("z->scherktowermincurveprime[n][z] is the integrand of the Scherk tower \
minimal curve."\)], "Output"],

Cell[BoxData[
    \("z->scmincurve[z] is the minimal curve generated by the semicubical \
parabola t->sc[t]."\)], "Output"],

Cell[BoxData[
    \("z->tractrixmincurve[a][z] is the minimal curve generated by the \
tractrix t->tractrix[a][t]."\)], "Output"],

Cell[BoxData[
    \("geopolar[f] is the geodesic polar coordinate metric relative to the \
function f."\)], "Output"],

Cell[BoxData[
    \("liouville[f,g] is the metric of a Liouville patch corresponding to the \
functions f and g."\)], "Output"],

Cell[BoxData[
    \("poincare[lambda] is the metric on the Poincare upper half-plane with \
constant curvature -1/lambda^2. poincare[m,n,lambda] is a generalization of \
the metric poincare[lambda]."\)], "Output"],

Cell[BoxData[
    \("poindisk[lambda] is the metric on the Poincare disk with constant \
curvature -1/lambda^2."\)], "Output"],

Cell[BoxData[
    \("schwarzschildplane[m] is the 2-dimensional Schwarzschild metric. \
schwarzschildplane[m,f] is the 2-dimensional Schwarzschild metric relative to \
the function f."\)], "Output"],

Cell[BoxData[
    \("SURFS`Private`"\)], "Output"],

Cell[BoxData[
    \("SURFS`Private`"\)], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Index of Surfaces", "Section"],

Cell[BoxData[
    \("{u,v}->agnesirev[a][u,v] is a parametrization of the surface of \
revolution formed from a rotated witch of Agnesi.  To plot try \
agnesirev[1][0,2Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->apple[u,v] is a parametrization of the surface of revolution \
that resembles an apple.  To plot try apple[0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->astell[a,b,c][u,v] is a parametrization of an astroidial \
ellipsoid with axes of lengths a, b and c.  To plot try \
astell[1,1,1][0,2Pi,-Pi/2,Pi/2,PlotPoints->{40,40},PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->bohdom[a,b,c][u,v] is a parametrization of a Bohemian dome. It \
is formed by moving an ellipse along a circle in a perpendicular plane so \
that the ellipse remains parallel to a plane.  To plot try \
bohdom[4,4,4][0,2Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->bour[u,v] is a parametrization of Bour's minimal surface.  To \
plot try bour[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->bourpolar[n][t][r,theta] is the polar parametrization of a \
1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[n][0][r,theta] is Bour's minimal surface of degree n. \
{r,theta}->bourpolar[m,n][t][r,theta] is the polar parametrization of a \
1-parameter family of minimal surfaces such that \
{r,theta}->bourpolar[m,n][0][r,theta] is Bour's minimal surface of degree \
{m,n}.  To plot try \
bourpolar[2,1][0][0,1.7,-Pi,Pi,PlotPoints->{20,40},PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->boy[a,b,c][u,v] is a parametrization of Boy's surface.  To plot \
try boy[4,4,1][-Pi/2,Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catalan[a][u,v] is a parametrization of Catalan's minimal \
surface.  To plot try catalan[1][-2Pi,2Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catalandef[a][t][u,v] is a 1-parameter family of minimal \
surfaces connecting Catalan's minimal surface to its conjugate.  To plot try \
catalandef[1][Pi/4][-2Pi,2Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catenoid[a][u,v] is the minimal surface of revolution generated \
by t->catenary[a][t].  To plot try catenoid[1][0,3Pi/2,-1.5,1.5]."\)], \
"Output"],

Cell[BoxData[
    \("{p,q}->catenoidasym[a][p,q] is a parametrization of a catenoid by \
asymptotic curves.  To plot try \
catenoidasym[1][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->catenoidiso[a][u,v] is an isothermal parametrization of a \
catenoid.  To plot try catenoidiso[1][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->circleinvolutemin[1,a][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->circleinvolutemin[1,a][0][u,v] is a minimal \
surface containing the first involute of a circle as a geodesic.  To plot try \
circleinvolutemin[1,1][1][0,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->circularcone[a,b][u,v] is a parametrization of a circular cone \
of radius a and slope b/a.  To plot try \
circularcone[1,0.5][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->circularcylinder[a][u,v] is a parametrization of a circular \
cylinder of radius a.  To plot try circularcylinder[1][-Pi,Pi,-4,4]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->clothoidmin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->clothoidmin[a][0][u,v] is a minimal surface \
containing a clothoid as a geodesic.  To plot try \
clothoidmin[1][0][-5,5,-0.3,0.3,PlotPoints->{60,10}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnccosurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant negative curvature -1/a^2 of conic type.  To plot try \
cnccosurfrev[1,0.83][-Pi,Pi,-0.6,0.6]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnccotcheb[a,b][u,v] is a Tchebyshef parametrization of a \
constant negative curvature surface of revolution of conic type.  To plot try \
cnccotcheb[1,1.2][-3.5,3.5,-Pi/1.2,Pi/1.2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnchysurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant negative curvature -1/a^2 of hyperboloid type.  To \
plot try cnchysurfrev[1,0.83][-Pi,Pi,-0.6,0.6]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cnchytcheb[a,b][u,v] is a Tchebyshef parametrization of a \
constant negative curvature surface of revolution of hyperboloid type.  To \
plot try cnchytcheb[1,0.8][-3.5,3.5,-Pi/0.8,Pi/0.8]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cossurface[a][u,v] is the surface {u,v}->a*{Cos[u],Cos[v],Cos[u \
+ v]}. The implicit equation is (z - a*x*y) == a^2*(1 - x^2)*(1 - y^2).  To \
plot try cossurface[1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->costa[u,v] is a parametrization of Costa's minimal \
surface."\)], "Output"],

Cell[BoxData[
    \("{u,v}->cpcsurfrev[a,b][u,v] is a parametrization of a surface of \
revolution of constant positive curvature 1/a^2. There are 3 cases: football \
type (a>b), sphere (a=b), barrel type (a<b).  To plot try \
cpcsurfrev[1,0.5][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->crosscap[a][u,v] is a parametrization of a cross cap in R^3.  \
To plot try crosscap[1][-Pi/2,Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->deltoidinvolutemin[a][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->deltoidinvolutemin[a][0][u,v] is a minimal \
surface containing the involute of a deltoid as a geodesic.  To plot try \
deltoidinvolutemin[1][0][-2Pi,2Pi,-0.3,0.3, \
PlotRange->All,PlotPoints->{40,10}."\)], "Output"],

Cell[BoxData[
    \("{u,v}->deltoidmin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->deltoidmin[a][0][u,v] is a minimal surface \
containing a deltoid as a geodesic.  To plot try \
deltoidmin[1][0][-Pi,Pi,-0.3,0.3,PlotRange->All,PlotPoints->{40,10}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->dini[a,b][u,v] is the standard parametrization of Dini's \
surface of constant negative curvature -1/a^2. It is the generalized helicoid \
of slant b generated by a tractrix. The case b=0 is the standard \
parametrization of a pseudosphere.  To plot try dini[1,0.2][0,4Pi,0.05,1, \
PlotPoints->{55,10},DisplayFunction->dip[EdgeForm[]]]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->dinihelicoid[pm,a,b,c][u,v] is a generalized helicoid of \
constant negative curvature -1/a^2 and slope c. The parameter pm is plus or \
minus 1."\)], "Output"],

Cell[BoxData[
    \("{u,v}->dinitcheb[a,b][u,v] is a Tchebyshef principal patch and \
{p,q}->dinitcheb[a,b][p + q,p - q] is a Tchebyshef asymptotic patch for \
Dini's surface of constant negative curvature -1/a^2.  To plot try \
dinitcheb[1,0.2][-3,3,0,6Pi,PlotPoints->{10,55},DisplayFunction->dip[EdgeForm[\
]]]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->earth[u,v] is a parametrization of the earth (with equatorial \
diameter 12756.4 kilometers and polar diameter 12713.2 kilometers).  To plot \
try earth[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eighteight[u,v] is a parametrization of the generalized surface \
of revolution formed by moving a figure eight about a figure eight.  To plot \
try eighteight[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->eightsurface[u,v] is a surface of revolution generated by \
t->eight[t].  To plot try eightsurface[-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellhypcyclide[a,c,k][u,v] is a parametrization of the cyclide \
of Dupin of radius k whose focal sets are the ellipse u->{a*Cos[u],Sqrt[a^2 - \
c^2]*Sin[u],0} and the hyperbola v->{c*Sec[v],0,Sqrt[a^2 - c^2]*Tan[v]}.  To \
plot try ellhypcyclide[8,3,5][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipsemin[a,b][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->ellipsemin[a,b][0][u,v] is an elliptical catenoid \
and {u,v}->ellipsemin[a,b][Pi/2][u,v] is an elliptical helicoid. The patch \
{u,v}->ellipsemin[a,b][0][u,v] contains the ellipse t->ellipse[a,b][t] as a \
geodesic.  To plot try ellipsemin[2,1][0][-Pi,Pi,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipsoid[a,b,c][u,v] is a parametrization of an ellipsoid with \
axes of lengths a, b and c. {u,v}->ellipsoid[a,c][u,v] is a parametrization \
of an ellipsoid with axes of lengths a, a and c.  To plot try \
ellipsoid[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticalhyperboloidminus[a,b,c][u,v] is a parametrization of \
a hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidminus[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticalhyperboloidplus[a,b,c][u,v] is a parametrization of a \
hyperboloid of one sheet as a ruled surface.  To plot try \
ellipticalhyperboloidplus[1,2,3][-Pi,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v,w}->ellipticcoor[d,e,f][a,b,c][w][u,v] is an elliptic coordinate \
patch on R^3. The parameters d, e and f are plus 1 or minus 1.  To plot try \
ellipticcoor[1,1,1][12,5,1][-1][1,5,5,12]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->ellipticparaboloid[a,b][u,v] is the surface {u,v}->{u,v,u^2/a^2 \
+ v^2/b^2}.  To plot try ellipticparaboloid[1,2][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->enneper[u,v] is a parametrization of Enneper's minimal surface. \
 To plot try enneper[-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->ennepercatenoidpolar[n,a,b][t][r,theta] is the polar \
parametrization of a 1-parameter family of minimal surfaces constructed from \
the minimal curve whose Weierstrass representation is given by f[z_]:=2 and \
g[z_]:=a/z + b*z^n. For t=0 and a=b=1 the surface has a catenoid-like bottom \
and an enneper-like top with n + 1 lobes.  To plot try \
ennepercatenoidpolar[1,1,1][0][0.40,1.08,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->enneperpolar[n][t][r,theta] is the polar parametrization of \
a 1-parameter family of minimal surfaces such that \
{r,theta}->enneperpolar[n][0][r,theta] is Enneper's minimal surface of degree \
n.  To plot try enneperpolar[1][0][0,2,-Pi,Pi,PlotPoints->{15,69}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->exptwist[a,c][u,v] is a parametrization of a helicoid-like \
surface whose twisting varies exponentially.  To plot try \
exptwist[1,0.2][0,4Pi,-1,1,PlotPoints->{60,10}]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->exptwistasym[a,c][p,q] is the parametrization by asymptotic \
curves of {u,v}->exptwist[a,c][u,v].  To plot try \
exptwistasym[1,0.3][-Pi,2Pi,-Pi,2Pi,PlotPoints->{48,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->flattorus[a,b][u,v] is a parametrization of a torus into R^4 as \
the product of two circles. {u,v}->flattorus[a,b,c,d][u,v]} is a \
parametrization of an elliptical torus into R^4 as the product of two \
ellipses. The Gaussian curvature is zero."\)], "Output"],

Cell[BoxData[
    \("{u,v}->funnel[1,1,c][u,v] is a parametrization of the surface of \
revolution formed by rotating the graph of t->c*Log[t].  To plot try \
funnel[5,1,2][-Pi,Pi,0.01,1]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->funnelasym[c][p,q] is the parametrization by asymptotic curves \
of the surface of revolution formed by rotating the graph of t->c*Log[t].  To \
plot try funnelasym[1][-Pi/2,Pi/2,0.0,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->gencube[n,a,b,c][u,v] is a generalized cube. \
{u,v}->gencube[1,a/Sqrt[2],a/Sqrt[2],a][u,v] is a sphere. \
{u,v}->gencube[2,a,a,a][u,v] is a parametrization of an ordinary cube. \
{u,v}->genoctahedron[3,a,a,a][u,v] is an astroidial cube.  To plot try \
gencube[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->genhypparab[a,b][u,v] is a parametrization of a hyperbolic \
paraboloid as a ruled surface.  To plot try genhypparab[1,1][-1,1,-1,1]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->genoctahedron[n,a,b,c][u,v] is a generalized octahedron. \
{u,v}->genoctahedron[1,a,b,c][u,v] is an ellipsoid. \
{u,v}->genoctahedron[2,a,a,a][u,v] is a parametrization of an ordinary \
octahedron. {u,v}->genoctahedron[3,a,b,c][u,v] is an astroidial ellipsoid.  \
To plot try \
genoctahedron[2,1,1,1][-Pi/2,Pi/2,-Pi,Pi,PlotRange->All,PlotPoints->{25,25}].\
"\)], "Output"],

Cell[BoxData[
    \("{u,v}->handkerchief[a][u,v] is a parametrization of a handkerchief \
shaped surface.  To plot try handkerchief[1][-1,1,-1,1,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->heart[a][u,v] is a surface of revolution generated by \
t->cardioid[a][t] with the axis of revolution passing through the cusp.  To \
plot try heart[1][-Pi/2,Pi/2,-Pi,Pi,PlotPoints->{15,45}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->helicoid[a,c][u,v] is the standard parametrization of a \
circular helicoid of radius a and slant c. {u,v}->helicoid[a,b,c][u,v] is the \
standard parametrization of an elliptical helicoid of slant c.  To plot try \
helicoid[1,1,0.3][0,4Pi,-1,1,PlotPoints->{75,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->helicoidprin[b][u,v] is a parametrization of a circular \
helicoid of radius b and slant b by principal curves. The parametrization is \
also isothermal.  To plot try \
helicoidprin[1][-Pi/2,Pi/2,-Pi/2,Pi/2,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->heltocat[t][u,v] is a 1-parameter family of minimal surfaces \
connecting a helicoid to a catenoid.  To plot try \
heltocat[Pi/4][0,4Pi,-1.5,1.5,PlotPoints->{75,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->henneberg[u,v] is a parametrization of Henneberg's minimal \
surface.  To plot try henneberg[0.3,1,-Pi,Pi,PlotPoints->{15,45}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->hyperbolicparaboloid[u,v] is a parametrization of a hyperbolic \
paraboloid.  To plot try hyperbolicparaboloid[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->hyperboloid[a,c][u,v] is the standard parametrization of a \
circular hyperboloid of one sheet. {u,v}->hyperboloid[a,b,c][u,v] is the \
standard parametrization of an elliptical hyperboloid of one sheet.  To plot \
try hyperboloid[1,2,3][0,3Pi/2,-2,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->hypocycloidinvolutemin[a,b][t][u,v] is a 1-parameter family of \
minimal surfaces such that {u,v}->hypocycloidinvolutemin[a,b][0][u,v] is a \
minimal surface containing the involute of a hypocycloid as a geodesic.  To \
plot try hypocycloidinvolutemin[4,1][0][-Pi,Pi,-1,1,PlotPoints->{99,15}]."\)],\
 "Output"],

Cell[BoxData[
    \("{u,v}->hy2sheet[a,c][u,v] is the standard parametrization of a \
circular hyperboloid of two sheets. {u,v}->hy2sheet[a,b,c][u,v] is the \
standard parametrization an elliptical hyperboloid of two sheets.  To plot \
try hy2sheet[1,1,1][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedcircularcone[{p1,p2,p3},rho,a,b][u,v] is a \
parametrization of {u,v}->circularcone[a,b][u,v] inverted with respect to a \
sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcone[rho,a,b][u,v] is a parametrization of \
{u,v}->{u,v}->circularcone[a,b][u,v] inverted with respect to a sphere of \
radius rho centered at the origin. An inverted circular cone is a cyclide of \
Dupin.  To plot try \
invertedcircularcone[40,1,1][-Pi,Pi,-40,40,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedcircularcylinder[{p1,p2,p3},rho,a][u,v] is a \
parametrization of {u,v}->circularcylinder[a][u,v] inverted with respect to a \
sphere of radius rho centered at {p1,p2,p3}. \
{u,v}->invertedcircularcylinder[rho,a][u,v] is a parametrization of \
{u,v}->circularcylinder[a][u,v] inverted with respect to a sphere of radius \
rho centered at the origin. An inverted circular cylinder is a cyclide of \
Dupin.  To plot try \
invertedcircularcylinder[40,1][-Pi,Pi,-40,40,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->invertedtorus[{p1,p2,p3},rho,a,b][u,v] is a parametrization of \
{u,v}->torus[a,b][u,v] inverted with respect to a sphere of radius rho \
centered at {p1,p2,p3}. {u,v}->invertedtorus[rho,a,b][u,v] is a \
parametrization of {u,v}->torus[a,b][u,v] inverted with respect to a sphere \
of radius rho centered at the origin. An inverted torus is a cyclide of \
Dupin.  To plot try invertedtorus[40,8,3][-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], \
"Output"],

Cell[BoxData[
    \("jorgemeekspolar[n,a][r,theta] is a polar parametrization of a \
Jorge-Meeks n-noid.  To plot try \
jorgemeekspolar[3,1][0.001,1.999,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kidney[a][u,v] is a surface of revolution generated by \
t->nephroid[a][t].  To plot try kidney[1][0,3Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottle[a][u,v] is a parametrization in R^3 of the surface \
formed by moving and twisting a figure eight along a circle of radius a. The \
surface is nonorientable and a neighborhood of the self-intersection curve is \
nonorientable.  To plot try kleinbottle[2][-Pi/4,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottlebis[e,f][u,v] is a Klein bottle in R^3. A \
neighborhood of the self-intersection curve is orientable.  To plot try \
kleinbottlebis[1,2][-Pi,29.9517,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kleinbottlewri[u,v] is WRI's version of a Klein bottle in R^3. \
A neighborhood of the self-intersection curve is orientable.  To plot try \
kleinbottlewri[0,2Pi,0,2Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->klein4[a,b][u,v] is a parametrization of a Klein bottle as a \
surface in R^4."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kuen[a][u,v] is a parametrization of Kuen's surface. It has \
constant negative curvature -1/a^2.  To plot try kuen[1][-4,4,0.01,Pi - \
0.01]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->kuentcheb[a][u,v] is a Tchebyshef principal patch and \
{p,q}->kuentcheb[a][p + q,p - q] is a Tchebyshef asymptotic patch for Kuen's \
surface of constant negative curvature -1/a^2.  To plot try \
kuentcheb[1][-4,4,-4,4]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->lemniscatemin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->lemniscatemin[a][0][u,v] is a minimal surface \
containing a lemniscate as a geodesic.  To plot try \
lemniscatemin[1][0][-Pi,Pi,-0.2Pi,0.2Pi,PlotPoints->{100,20}]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->logminpolar[n][t][r_,theta_] is a 1-parameter family of \
minimal surfaces whose height function is the identity and whose Gauss map is \
an iterated logarithm.  To plot try \
logminpolar[0][0][0.005,2.005,-3Pi,3Pi,PlotPoints->{10,60},ViewPoint->{-2.5,-\
1.5,1.6}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->menn[a][u,v] is a parametrization of Menn's surface.  To plot \
try menn[1][-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->mercatorellipsoid[a,b,c][u,v] is the Mercator injection of an \
ellipsoid with axes of lengths a, b and c into R^3.  To plot try \
mercatorellipsoid[1,2,3][0,3Pi/2,-0.49Pi,0.49Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->mercatorsphere[a][u,v] is the Mercator injection of a sphere of \
radius a into R^3.  To plot try \
mercatorsphere[1][0,3Pi/2,-0.49Pi,0.49Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->moebcirc[a][u,v] is a parametrization of a Moebius strip that \
has a circle as boundary.  To plot try moebcirc[1][0,Pi,0,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->moebiusstrip[a][u,v] is the standard parametrization of a \
Moebius strip.  To plot try \
moebiusstrip[1][0,2Pi,-0.3,0.3,PlotPoints->{40,5}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->monkeysaddle[u,v] is a parametrization of a monkey saddle. \
{u,v}->monkeysaddle[n][u,v] is a parametrization of a monkey saddle for a \
monkey with n-2 tails.  To plot try monkeysaddle[-1.1,1.1,-1.1,1.1]."\)], \
"Output"],

Cell[BoxData[
    \("{r,theta}->monkeysaddlepolar[n][r,theta] is a polar parametrization of \
a monkey saddle with n - 2 tails.  To plot try \
monkeysaddlepolar[3][0,1,0,2Pi,PlotRange->All,PlotPoints->{10,33}]."\)], \
"Output"],

Cell[BoxData[
    \("See nodoidnds.  To plot try \
nodoid[-9,9][8,3,1,0.6][0,3Pi/2,-9,9,PlotPoints->{21,51}]."\)], "Output"],

Cell[BoxData[
    \("nodoidnds[vmin,vmax][a,b,c,e][u,v] is an approximation over the \
interval vmin<v<vmax found by NDSolve to a nodoid. It is a surface of \
revolution of a curve of Delaunay of eccentricity e and has constant mean \
curvature."\)], "Output"],

Cell[BoxData[
    \("{u,v}->parabolamin[a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->parabolamin[a][0][u,v] is a minimal surface \
containing a parabola as a geodesic.  To plot try \
parabolamin[1][0][-2,2,-0.3,0.3,PlotPoints->{40,10}]."\)], "Output"],

Cell[BoxData[
    \("{u,v,w}->paraboliccoor[d,e,f][a,b,c][w][u,v] is a parabolic coordinate \
patch on R^3. The parameters d, e and f are plus 1 or minus 1.  To plot try \
paraboliccoor[1,1,1][2,1,3][4][-9,1,1,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->paraboliccyclide[a,k][u,v] is a parametrization of the cyclide \
of Dupin of radius k whose focal sets are the parabolas u->{u,0,-u^2/(8*a) + \
a} and v->{0,v,v^2/(8*a) - a}.  To plot try \
paraboliccyclide[2,1][-40,40,-40,40]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->paraboloid[a][u,v] is a circular paraboloid of radius a. \
{u,v}->paraboloid[a,b][u,v] and {u,v}->paraboloid[a,b,c][u,v] is either an \
elliptic or a hyperbolic paraboloid.  To plot try \
paraboloid[1][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->paraboloidpolar[n,a,b][r,theta] is a polar parametrization \
of a generalized paraboloid.  To plot try \
paraboloidpolar[2,2,1][0,1,0,3Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pear[a,b][u,v] is a surface of revolution generated by \
t->piriform[a,b][t] with the axis of revolution passing through the cusp.  To \
plot try pear[1,1][0,3Pi/2,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pearbis[u,v] is a parametrization of the surface of revolution \
that resembles an pear.  To plot try pearbis[0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->perturbedms[a][u,v] is a parametrization of a monkey saddle \
perturbed by a circular paraboloid.  To plot try \
perturbedms[-1.0][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->perturbedmspolar[n,a][r,theta] is a polar parametrization \
of a monkey saddle of order n perturbed by a circular paraboloid.  To plot \
try perturbedmspolar[3,-1][0,1,0,2Pi,PlotPoints->{10,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pillow[a][u,v] is a pillow-shaped surface.  To plot try \
pillow[1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->plane[a1,a2,b1,b2,c1,c2][u,v] is a parametrization of a plane \
in R^3."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->planepolar[a][r,theta] is a polar parametrization of the \
plane."\)], "Output"],

Cell[BoxData[
    \("{u,v}->planetocat[t][u,v] is a 1-parameter family of minimal surfaces \
containing a plane and a catenoid. The principal curves of each surface are \
planar.  To plot try planetocat[0.1][0,3Pi/2,-2,2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->plucker[u,v] is the standard parametrization of Plucker's \
surface. {u,v}->plucker[n][u,v] is a parametrization of Plucker's surface \
with n folds. {u,v}->plucker[m,n,a][u,v] is a generalization of the monkey \
saddle and Plucker's surface.  To plot try plucker[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->pluckerpolar[n][r,theta] is the polar parametrization of \
Plucker's surface with n folds. {r,theta}->pluckerpolar[m,n,a][r,theta] is a \
generalization of the polar parametrizations of the monkey saddle and \
Plucker's surface.  To plot try \
pluckerpolar[0,5,1][0,1,-Pi,Pi,PlotPoints->{10,75}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudocrosscap[u,v] is a parametrization of a pseudocrosscap in \
R^3.  To plot try pseudocrosscap[-1,0.5,0,2Pi,PlotPoints->{24,48}]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->pseudosphere[a][u,v] is the standard parametrization of a \
pseudosphere of constant negative curvature -1/a^2.  To plot try \
pseudosphere[1][0,3Pi/2,0.001,Pi-0.001]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudospherebis[a][u,v] is a parametrization of a pseudosphere \
of constant negative curvature -1/a^2.  To plot try \
pseudospherebis[1][0,3Pi/2,0.01,2,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->pseudospheretcheb[a][u,v] is a Tchebyshef principal patch and \
{p,q}->pseudospheretcheb[a][p + q,p - q] is a Tchebyshef asymptotic patch for \
a pseudosphere of constant negative curvature -1/a^2.  To plot try \
pseudospheretcheb[1][-2.8,2.8,0,3Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->rconoid[u,v] is a right conoid. It coincides with \
{u,v}->2*pluckerpolar[1][v/2,u].  To plot try rconoid[-Pi,Pi,-2,2]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->richmond[u,v] is a minimal surface with one planar end.  To \
plot try richmond[-1,1,-1,1,PlotRange->{{-1,1},{-1,1},Automatic}]."\)], \
"Output"],

Cell[BoxData[
    \("{r,theta}->richmondpolar[n][t][r,theta] is the polar parametrization \
of a 1-parameter family of minimal surfaces such that \
{r,theta}->richmondpolar[n][0][r,theta] is a minimal surface with one planar \
end of degree n.  To plot try richmondpolar[1][0][0.3,1.3,0,2Pi]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->roman[a][u,v] is a parametrization of Steiner's Roman surface \
of radius a in R^3.  To plot try roman[1][0,Pi,-Pi/2,Pi/2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->rosemin[n,a][t][u,v] is a 1-parameter family of minimal \
surfaces such that {u,v}->rosemin[n,a][0][u,v] contains the rose \
t->{a*Cos[t]*Cos[n*t],a*Cos[n*t]*Sin[t]} as a geodesic.  To plot try \
rosemin[3,1][0][0,Pi,-0.3,0.3,PlotPoints->{45,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->scherk[a][u,v] is a parametrization of Scherk's minimal \
surface. {u,v}->scherk[a,theta][u,v] is a parametrization of twisted Scherk's \
minimal surface of angle theta.  To plot try scherk[1][-Pi/2 + 0.01,3Pi/2 + \
0.01,-Pi/2 + .01,3Pi/2 + 0.01]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->scherk5[a,b,c][u,v] is a parametrization of Scherk's fifth \
minimal surface, where a, b, c are plus 1 or minus 1.  {u,v}->scherk5[u,v] is \
the same as {u,v}->scherk5[a,b,c][u,v]. To plot try scherk5[-1,1,-1,1]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->shoe[a,-a][u,v] resembles the instep of a shoe.  To plot try \
shoe[1,-1][-1.5,1.5,-1.5,1.5]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->shoeasym[a,b][u,v] is an asymptotic parametrization of a shoe \
surface.  To plot try shoeasym[1,-1][-1,1.2,-1,1.2]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sievert[a][u,v] is a parametrization of Sievert's surface of \
constant positive curvature a^2.  To plot try sievert[1][-Pi/2,Pi/2,0.001,Pi \
- 0.001]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sinovaloid[n,a][u,v] is the surface of revolution generated by \
t->sinoval[n,a][t].  To plot try sinovaloid[3,1][0,3Pi/2,-Pi/2,Pi/2]."\)], \
"Output"],

Cell[BoxData[
    \("{u,v}->sinsurface[a][u,v] is the {u,v}->a*{Sin[u],Sin[v],Sin[u + v]}. \
The implicit equation is 4*x^2*y^2*(a^2 - z^2) == a^2*(x^2 + y^2 - z^2)^2.  \
To plot try sinsurface[1][-Pi,Pi,-Pi,Pi,PlotPoints->{40,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->snail[u,v] is a surface resembling a snail.  To plot try \
snail[-Pi,Pi,-Pi,Pi,PlotRange->All]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->sphere[a][u,v] is the standard parametrization of a sphere of \
radius a centered at the origin.  To plot try sphere[1][0,3Pi/2,-Pi/2,Pi/2]."\
\)], "Output"],

Cell[BoxData[
    \("{u,v}->stereographicellipsoid[a,b,c][u,v] is a stereographic \
parametrization of an ellipsoid with axes of lengths a, b and c.  To plot try \
stereographicellipsoid[5,3,1][-2.8,2.8,-2.8,2.8]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->stereographicsphere[a][u,v] is a stereographic parametrization \
of a sphere of radius a in R^3.  To plot try \
stereographicsphere[1][-2.8,2.8,-2.8,2.8,PlotPoints->{40,40}]."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->stereographicspherepolar[a][r,theta] is a polar \
stereographic parametrization of a sphere of radius a in R^3.  To plot try \
stereographicspherepolar[1][0,3,0,2Pi,PlotPoints->{10,40}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->swallowtail[u,v] is a parametrization of a swallow tail shaped \
surface.  To plot try \
swallowtail[-3,2,-0.8,0.8,PlotRange->All,PlotPoints->{10,15},ViewPoint->{4,1,-\
4}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->tetrahedral[m,n][A,B,C][a,b,c][u,v] is a parametrization of a \
tetrahedral surface."\)], "Output"],

Cell[BoxData[
    \("{u,v}->thomsen[a,b][u,v] is a parametrization of Thomsen's minimal \
surface.  To plot try thomsen[1,-2][-Pi/2,Pi/2,0,2Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->torus[a,b][u,v] is a parametrization of the torus formed by \
revolving a circle of radius b in the xz-plane about the z-axis along a \
circle of radius a in the xy-plane. {u,v}->torus[a,b,c][u,v] is a \
parametrization of the torus formed by revolving an ellipse with axes of \
lengths b and c in the xz-plane about the z-axis along a circle of radius a \
in the xy-plane. {u,v}->torus[a,b,b,d,d][u,v] is a surface formed by moving a \
circle of radius b in the xz-plane along an ellipse in the xy-plane. \
{u,v}->torus[a,b,c,d,e][u,v] is a surface formed by moving an ellipse in the \
xz-plane along an ellipse in the xy-plane.  To plot try \
torus[8,3][0,3Pi/2,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{p,q}->torusasym[pm,a][p,q] is an asymptotic parametrization of \
{u,v}->torus[a,a][u,v]. The parameter pm is plus or minus 1.  To plot try \
torusasym[1,1][-Pi,Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->torusbis[pm,a,b][u,v] is a parametrization of a torus. The \
parameter pm is plus or minus 1.  To plot try \
torusbis[1,8,3][5,11,0,2Pi,PlotPoints->{10,33}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->twiflat[pm,a,c][sl][u,v] is a parametrization of a generalized \
helicoid of zero Gaussian curvature of slant sl. The parameter pm is plus or \
minus 1.  To plot try \
twiflat[1,1,1][1][0,7Pi/2,1,5,PlotPoints->{40,15}]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->twisphere[a,b][u,v] is a parametrization of a generalized \
helicoid formed by rotating and twisting a semicircle. It is also called a \
corkscrew surface.  To plot try twisphere[1,1][0,2Pi,-Pi,Pi]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->veronese[a][u,v] is a parametrization of a Veronese surface in \
R^5."\)], "Output"],

Cell[BoxData[
    \("{u,v}->wallis[a,b,c][u,v] is a parametrization of a conical edge of \
Wallis.  To plot try wallis[1,1,3][Pi/4,3Pi/4,0,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->whitneyumbrella[u,v] is a parametrization of a Whitney \
umbrella.  To plot try whitneyumbrella[-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("{u,v}->wrinkles[a][u,v] is the Monge patch {u,v}->{u,v,a*(u/v + v/u)}. \
 To plot try wrinkles[0.05][-1,1,-1,1]."\)], "Output"],

Cell[BoxData[
    \("cossurfaceimplicit[a][x,y,z]==0 is the nonparametric form of the \
surface {u,v}->{a*Cos[u],a*Cos[v],a*Cos[u + v]}."\)], "Output"],

Cell[BoxData[
    \("crosscapimplicit[a,b][x,y,z]==0 is the nonparametric form of a \
crosscap."\)], "Output"],

Cell[BoxData[
    \("ellipsoidimplicit[a,b,c][x,y,z]==0 is the nonparametric form of an \
ellipsoid."\)], "Output"],

Cell[BoxData[
    \("ellipticparaboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric form \
of an elliptic paraboloid."\)], "Output"],

Cell[BoxData[
    \("equihom1implicit[x,y,z]==0 is the nonparametric form of the first \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom2implicit[x,y,z]==0 is the nonparametric form of the second \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom3implicit[x,y,z]==0 is the nonparametric form of the third \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom4implicit[x,y,z]==0 is the nonparametric form of the fourth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom5implicit[x,y,z]==0 is the nonparametric form of the fifth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("equihom6implicit[x,y,z]==0 is the nonparametric form of the sixth \
equiaffinely homogeneous surface."\)], "Output"],

Cell[BoxData[
    \("goursatimplicit[a,b,c][x,y,z]==0 is the nonparametric form of \
Goursat's surface."\)], "Output"],

Cell[BoxData[
    \("hyperbolicparaboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric \
form of a hyperbolic paraboloid."\)], "Output"],

Cell[BoxData[
    \("hyperboloidimplicit[a,b,c][x,y,z]==0 is the nonparametric form of a \
hyperboloid of one sheet."\)], "Output"],

Cell[BoxData[
    \("hy2sheetimplicit[a,b,c][x,y,z]==0 is the nonparametric form of a \
hyperboloid of two sheets."\)], "Output"],

Cell[BoxData[
    \("kazoolaimplicit[a,b,c,d][x,y,z]==0 is the nonparametric form of a \
kazoola."\)], "Output"],

Cell[BoxData[
    \("kummerimplicit[x,y,z]==0 is the nonparametric form of Kummer's \
surface."\)], "Output"],

Cell[BoxData[
    \("scherkimplicit[a][x,y,z]==0 is the nonparametric form of Scherk's \
minimal surface. scherkimplicit[a,phi][x,y,z]==0 is the nonparametric form of \
a twisted Scherk's minimal surface."\)], "Output"],

Cell[BoxData[
    \("scherk5implicit[x,y,z]==0 is the nonparametric form of a Scherk's \
fifth minimal surface."\)], "Output"],

Cell[BoxData[
    \("sinsurfaceimplicit[a][x,y,z]==0 is the nonparametric form of the \
surface {u,v}->{a*Sin[u],a*Sin[v],a*Sin[u + v]}."\)], "Output"],

Cell[BoxData[
    \("sphereimplicit[a][x,y,z]==0 is the nonparametric form of a sphere. \
sphereimplicit[n,a][x,y,z]==0 is the nonparametric form of the surface \
x^(2*n) + y^(2*n) +z^(2*n) = a^(2*n)."\)], "Output"],

Cell[BoxData[
    \("torusimplicit[a,b][x,y,z]==0 is the nonparametric form of a \
torus."\)], "Output"],

Cell[BoxData[
    \("twocuspsimplicit[x,y,z]==0 is the nonparametric form of a surface with \
two cusps."\)], "Output"],

Cell[BoxData[
    \("{r,theta}->circularmembrane[m,n,t][r,theta] is a parametrization of a \
circular membrane of degree {m,n} at time t."\)], "Output"],

Cell[BoxData[
    \("circularmembraneplot[m,n,t] plots a circular membrane of degree {m,n} \
at time t."\)], "Output"],

Cell[BoxData[
    \(" circularmembranemovie[m,n,{t,tmin,tmax,numf}] animates a circular \
membrane of degree {m,n} from tmin to tmax with numf frames."\)], "Output"],

Cell[BoxData[
    \("{u,v}->squaremembrane[m,n,t][u,v] is a parametrization of a square \
membrane of degree {m,n} at time t."\)], "Output"],

Cell[BoxData[
    \("squaremembraneplot[m,n,t] plots a square membrane of degree {m,n} at \
time t."\)], "Output"],

Cell[BoxData[
    \("squaremembranemovie[m,n,{t,tmin,tmax,numf}] animates a square membrane \
of degree {m,n} from tmin to tmax with numf frames."\)], "Output"],

Cell[BoxData[
    \("z->astroidmincurve[a][z] is the minimal curve generated by the astroid \
t->astroid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->bourmincurve[m][z] is the minimal curve corresponding to Bour's \
minimal surface of order m. z->bourmincurve[m,n][z] is the minimal curve \
corresponding to Bour's minimal surface of order {m,n}. Note that \
bourmincurve[m]=bourmincurve[m,1], enneper[n]=bourmincurve[2,n] and \
richmond[n][z]=bourmincurve[0,n + 1][z]/2."\)], "Output"],

Cell[BoxData[
    \("z->cardioidmincurve[a][z] is the minimal curve generated by the \
cardioid t->cardioid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->catalanmincurve[a][z] is the minimal curve corresponding to \
Catalan's minimal surface. It contains a cycloid as a geodesic."\)], "Output"],

Cell[BoxData[
    \("z->catenoidmincurve[a][z] is the minimal curve corresponding to a \
catenoid. It contains a circle as a geodesic."\)], "Output"],

Cell[BoxData[
    \("z->cayleysexticmincurve[a][z] is the minimal curve generated by the \
Cayley's sextic t->cayleysextic[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->circleinvolutemincurve[n,a][z] is the minimal curve generated by \
the nth involute starting at {a,0} of the circle t->{a*Cos[t],a*Sin[t]}."\)], \
"Output"],

Cell[BoxData[
    \("z->cissoidmincurve[a][z] is the minimal curve generated by the cissoid \
t->cissoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->clothoidmincurve[a][z] is the minimal curve generated by the \
clothoid t->clothoid[1,a][z]."\)], "Output"],

Cell[BoxData[
    \("z->cnchyprofilemincurve[pm,a,b][z] is the minimal curve generated by \
the curve t->cnchyprofile[pm,a,b][t]. The parameter pm is plus 1 or -1."\)], \
"Output"],

Cell[BoxData[
    \("z->costamincurve[z] is the minimal curve that determines Costa's \
minimal surface."\)], "Output"],

Cell[BoxData[
    \("z->cpcprofilemincurve[pm,a,b][z] is the minimal curve generated by the \
curve t->cpcprofile[pm,a,b][t]. The parameter pm is plus 1 or -1."\)], \
"Output"],

Cell[BoxData[
    \("z->deltoidinvolutemincurve[a][z] is the minimal curve generated by the \
involute starting at t=0 of t->deltoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->deltoidmincurve[a][z] is the minimal curve generated by the deltoid \
t->deltoid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->ellipsemincurve[a,b][z] is the minimal curve generated by the \
ellipse t->ellipse[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->ennepercatenoidmincurve[n,a,b][z] is the minimal curve whose \
Weierstrass representation is given by f[z_]:=2 and g[z_]:=a/z + b*z^n."\)], \
"Output"],

Cell[BoxData[
    \("z->ennepermincurve[n][z] is the minimal curve corresponding to \
Enneper's minimal surface of order n."\)], "Output"],

Cell[BoxData[
    \("z->epicycloidmincurve[a,b][z] is the minimal curve generated by the \
epicycloid t->epicycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hennebergmincurve[z] is the minimal curve corresponding to \
Henneberg's minimal surface."\)], "Output"],

Cell[BoxData[
    \("z->hyperbolamincurve[a,b][z] is the minimal curve generated by the \
hyperbola t->hyperbola[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hypocycloidinvolutemincurve[a,b][z] is the minimal curve generated \
by the involute starting at t=0 of t->hypocycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->hypocycloidmincurve[a,b][z] is the minimal curve generated by the \
hypocycloid t->hypocycloid[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->jorgemeeksmincurve[n,a][z] is the minimal curve used to generate \
the Jorge-Meeks n-noid."\)], "Output"],

Cell[BoxData[
    \("z->jorgemeeksmincurveprime[n,a][z] is the derivative of \
z->jorgemeeksmincurve[n,a][z]."\)], "Output"],

Cell[BoxData[
    \("z->lemniscatemincurve[a][z] is the minimal curve generated by the \
lemniscate t->lemniscate[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->logmincurve[n][z] is a minimal curve whose height function is the \
identity and whose Gauss map is an iterated logarithm."\)], "Output"],

Cell[BoxData[
    \("z->logspiralmincurve[a,b][z] is the minimal curve generated by the log \
spiral t->logspiral[a,b][t]."\)], "Output"],

Cell[BoxData[
    \("z->nephroidmincurve[a][z] is the minimal curve generated by the \
nephroid t->nephroid[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->nielsenspiralmincurve[a][z] is the minimal curve generated by \
Nielsen's spiral t->nielsenspiral[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->parabolamincurve[a][z] is the minimal curve generated by the \
parabola t->parabola[a][t]."\)], "Output"],

Cell[BoxData[
    \("z->richmondmincurve[n][z] is the minimal curve corresponding to \
Richmond's minimal surface of order n."\)], "Output"],

Cell[BoxData[
    \("z->rosemincurve[n,a][z] is the minimal curve generated by the rose \
t->rose[n,a][t]."\)], "Output"],

Cell[BoxData[
    \("z->scherktowermincurveprime[n][z] is the integrand of the Scherk tower \
minimal curve."\)], "Output"],

Cell[BoxData[
    \("z->scmincurve[z] is the minimal curve generated by the semicubical \
parabola t->sc[t]."\)], "Output"],

Cell[BoxData[
    \("z->tractrixmincurve[a][z] is the minimal curve generated by the \
tractrix t->tractrix[a][t]."\)], "Output"],

Cell[BoxData[
    \("geopolar[f] is the geodesic polar coordinate metric relative to the \
function f."\)], "Output"],

Cell[BoxData[
    \("liouville[f,g] is the metric of a Liouville patch corresponding to the \
functions f and g."\)], "Output"],

Cell[BoxData[
    \("poincare[lambda] is the metric on the Poincare upper half-plane with \
constant curvature -1/lambda^2. poincare[m,n,lambda] is a generalization of \
the metric poincare[lambda]."\)], "Output"],

Cell[BoxData[
    \("poindisk[lambda] is the metric on the Poincare disk with constant \
curvature -1/lambda^2."\)], "Output"],

Cell[BoxData[
    \("schwarzschildplane[m] is the 2-dimensional Schwarzschild metric. \
schwarzschildplane[m,f] is the 2-dimensional Schwarzschild metric relative to \
the function f."\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell["Computations", "Section"],

Cell[CellGroupData[{

Cell["Area", "Subsection"],

Cell[BoxData[
    \(Integrate[\(infarea[s]\)[u, v], \ {u, \ u\_\(\(i\)\(\ \)\), 
        u\_f}, \ {v, \ v\_i, v\_f}]\)], "Input"],

Cell[BoxData[
    \(NIntegrate[\(infarea[s]\)[u, v], \ {u, \ u\_\(\(i\)\(\ \)\), 
        u\_f}, \ {v, \ v\_i, v\_f}]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gassian Curvature", "Subsection"],

Cell[BoxData[
    \(\(gaussiancurvature[s]\)[u, v]\)], "Input"],

Cell[BoxData[
    \(Plot3D[\(gaussiancurvature[s]\)[u, v], {v, v\_i, v\_f}, \ {u, u\_i, 
        u\_f}]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mean Curvature", "Subsection"],

Cell[BoxData[
    \(\(meancurvature[s]\)[u, v]\)], "Input"],

Cell[BoxData[
    \(Plot3D[\(meancurvature[s]\)[u, v], {v, v\_i, v\_f}, \ {u, u\_i, 
        u\_f}]\)], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Section"],

Cell[CellGroupData[{

Cell["Basic Plot and Options", "Subsection"],

Cell[BoxData[
    \(ParametricPlot3D[s[u, v], \ {u, u\_i, u\_f}, \ {v, v\_i, v\_f}, 
      Axes \[Rule] False]\)], "Input"],

Cell[BoxData[
    \(ParametricPlot3D[
      Append[s[u, v], Red], \ {u, u\_i, u\_f}, \ {v, v\_i, v\_f}, 
      Axes \[Rule] False, Lighting \[Rule] False]\)], "Input"],

Cell[BoxData[
    \(Options[ParametricPlot3D]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot Colored by Gaussian Curvature", "Subsection"],

Cell[BoxData[{
    \(\(colorfunction[u_, v_] := 
        If[\(gaussiancurvature[s]\)[u, v] > 0, 
          0.5 + \(gaussiancurvature[s]\)[u, v]/\((2  maxgauss)\), 
          0.5 - \(gaussiancurvature[s]\)[u, 
                v]/\((2  mingauss)\)];\)\), "\n", 
    \(\(maxgauss = 
        Max[Table[\(gaussiancurvature[s]\)[u, v], {u, u\_i, 
              u\_f, \((u\_f - u\_i)\)/20}, {v, v\_i, 
              v\_f, \((v\_f - v\_i)\)/20}]];\)\), "\n", 
    \(\(mingauss = 
        Min[Table[\(gaussiancurvature[s]\)[u, v], {u, u\_i, 
              u\_f, \((u\_f - u\_i)\)/20}, {v, v\_i, 
              v\_f, \((v\_f - v\_i)\)/20}]];\)\), "\n", 
    \(\(ParametricPlot3D[
        Append[s[u, v], Hue[1/3 + 2  colorfunction[u, v]/3]] // 
          Evaluate, \ {u, u\_i, u\_f}, \ {v, v\_i, v\_f}, 
        AspectRatio \[Rule] Automatic, Boxed \[Rule] False, 
        Axes \[Rule] None, Lighting \[Rule] False, 
        PlotPoints \[Rule] {30, 30}, PlotRange \[Rule] All];\)\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot Colored by Mean Curvature", "Subsection"],

Cell[BoxData[{
    \(\(colorfunction[u_, v_] := 
        If[\(meancurvature[s]\)[u, v] > 0, 
          0.5 + \(meancurvature[s]\)[u, v]/\((2  maxmean)\), 
          0.5 - \(meancurvature[s]\)[u, v]/\((2  minmean)\)];\)\), "\n", 
    \(\(maxmean = 
        Max[Table[\(meancurvature[s]\)[u, v], {u, u\_i, 
              u\_f, \((u\_f - u\_i)\)/20}, {v, v\_i, 
              v\_f, \((v\_f - v\_i)\)/20}]];\)\), "\n", 
    \(\(minmean = 
        Min[Table[\(meancurvature[s]\)[u, v], {u, u\_i, 
              u\_f, \((u\_f - u\_i)\)/20}, {v, v\_i, 
              v\_f, \((v\_f - v\_i)\)/20}]];\)\), "\n", 
    \(\(ParametricPlot3D[
        Append[s[u, v], Hue[1/3 + 2  colorfunction[u, v]/3]] // 
          Evaluate, \ {u, u\_i, u\_f}, \ {v, v\_i, v\_f}, 
        AspectRatio \[Rule] Automatic, Boxed \[Rule] False, 
        Axes \[Rule] None, Lighting \[Rule] False, 
        PlotPoints \[Rule] {20, 40}, PlotRange \[Rule] All];\)\)}], "Input"]
}, Closed]]
}, Closed]]
},
FrontEndVersion->"5.0 for Macintosh",
ScreenRectangle->{{0, 1440}, {0, 874}},
AutoGeneratedPackage->None,
WindowToolbars->"EditBar",
WindowSize->{658, 806},
WindowMargins->{{Automatic, 79}, {Automatic, 0}},
StyleDefinitions -> "Classroom.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Info3288980037-1384274"->{
    Cell[182185, 7863, 287, 5, 55, "Print",
      CellTags->"Info3288980037-1384274"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Info3288980037-1384274", 491933, 15899}
  }
*)

(*NotebookFileOutline
Notebook[{
Cell[1754, 51, 25, 0, 62, "Title"],
Cell[1782, 53, 190, 7, 41, "Subtitle"],
Cell[1975, 62, 77, 3, 56, "Author"],
Cell[2055, 67, 178579, 7742, 152, 123809, 7062, "GraphicsData", "PostScript", \
"Graphics"],

Cell[CellGroupData[{
Cell[180659, 7813, 31, 0, 59, "Section"],
Cell[180693, 7815, 382, 6, 64, "Text"],

Cell[CellGroupData[{
Cell[181100, 7825, 59, 0, 49, "Subsection"],
Cell[181162, 7827, 140, 3, 28, "Text"],
Cell[181305, 7832, 89, 1, 47, "Input"],
Cell[181397, 7835, 49, 0, 28, "Text"],
Cell[181449, 7837, 71, 1, 51, "Input"],
Cell[181523, 7840, 140, 3, 28, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[181700, 7848, 52, 0, 33, "Subsection"],
Cell[181755, 7850, 352, 6, 64, "Text"],

Cell[CellGroupData[{
Cell[182132, 7860, 50, 1, 60, "Input"],
Cell[182185, 7863, 287, 5, 55, "Print",
  CellTags->"Info3288980037-1384274"]
}, Open  ]],
Cell[182487, 7871, 111, 3, 28, "Text"],

Cell[CellGroupData[{
Cell[182623, 7878, 51, 1, 60, "Input"],
Cell[182677, 7881, 59, 1, 62, "Output"]
}, Open  ]],
Cell[182751, 7885, 62, 0, 28, "Text"],
Cell[182816, 7887, 71, 1, 51, "Input"],
Cell[182890, 7890, 173, 4, 46, "Text"],
Cell[183066, 7896, 38, 1, 60, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[183141, 7902, 51, 0, 33, "Subsection"],
Cell[183195, 7904, 64, 0, 28, "Text"],
Cell[183262, 7906, 188, 3, 108, "Input"],
Cell[183453, 7911, 154, 3, 79, "Input"],
Cell[183610, 7916, 153, 3, 79, "Input"],
Cell[183766, 7921, 191, 4, 95, "Input"],
Cell[183960, 7927, 165, 3, 95, "Input"],
Cell[184128, 7932, 175, 3, 108, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[184352, 7941, 61, 1, 39, "Section",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[184438, 7946, 44, 0, 49, "Subsection"],
Cell[184485, 7948, 81, 2, 60, "Input",
  InitializationCell->True],
Cell[184569, 7952, 87, 2, 60, "Input",
  InitializationCell->True],
Cell[184659, 7956, 92, 2, 60, "Input",
  InitializationCell->True],
Cell[184754, 7960, 80, 2, 60, "Input",
  InitializationCell->True],
Cell[184837, 7964, 80, 2, 60, "Input",
  InitializationCell->True],
Cell[184920, 7968, 80, 2, 60, "Input",
  InitializationCell->True],
Cell[185003, 7972, 79, 2, 60, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[185119, 7979, 37, 0, 33, "Subsection"],

Cell[CellGroupData[{
Cell[185181, 7983, 168, 6, 43, "Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[185374, 7993, 24971, 678, 9317, "Input",
  InitializationCell->True],
Cell[210348, 8673, 45, 1, 70, "Output"],
Cell[210396, 8676, 115, 2, 70, "Output"],
Cell[210514, 8680, 366, 5, 70, "Output"],
Cell[210883, 8687, 309, 4, 70, "Output"],
Cell[211195, 8693, 232, 3, 70, "Output"],
Cell[211430, 8698, 243, 4, 70, "Output"],
Cell[211676, 8704, 149, 2, 70, "Output"],
Cell[211828, 8708, 187, 3, 70, "Output"],
Cell[212018, 8713, 226, 3, 70, "Output"],
Cell[212247, 8718, 131, 2, 70, "Output"],
Cell[212381, 8722, 208, 3, 70, "Output"],
Cell[212592, 8727, 100, 2, 70, "Output"],
Cell[212695, 8731, 182, 3, 70, "Output"],
Cell[212880, 8736, 228, 3, 70, "Output"],
Cell[213111, 8741, 228, 3, 70, "Output"],
Cell[213342, 8746, 296, 4, 70, "Output"],
Cell[213641, 8752, 425, 6, 70, "Output"],
Cell[214069, 8760, 207, 3, 70, "Output"],
Cell[214279, 8765, 218, 3, 70, "Output"],
Cell[214500, 8770, 240, 3, 70, "Output"],
Cell[214743, 8775, 112, 2, 70, "Output"],
Cell[214858, 8779, 326, 5, 70, "Output"],
Cell[215187, 8786, 221, 3, 70, "Output"],
Cell[215411, 8791, 317, 4, 70, "Output"],
Cell[215731, 8797, 330, 5, 70, "Output"],
Cell[216064, 8804, 326, 5, 70, "Output"],
Cell[216393, 8811, 193, 3, 70, "Output"],
Cell[216589, 8816, 222, 4, 70, "Output"],
Cell[216814, 8822, 260, 4, 70, "Output"],
Cell[217077, 8828, 256, 4, 70, "Output"],
Cell[217336, 8834, 53, 1, 70, "Output"],
Cell[217392, 8837, 35, 1, 70, "Output"],
Cell[217430, 8840, 35, 1, 70, "Output"],
Cell[217468, 8843, 35, 1, 70, "Output"],
Cell[217506, 8846, 35, 1, 70, "Output"],
Cell[217544, 8849, 35, 1, 70, "Output"],
Cell[217582, 8852, 35, 1, 70, "Output"],
Cell[217620, 8855, 35, 1, 70, "Output"],
Cell[217658, 8858, 35, 1, 70, "Output"],
Cell[217696, 8861, 35, 1, 70, "Output"],
Cell[217734, 8864, 36, 1, 70, "Output"],
Cell[217773, 8867, 36, 1, 70, "Output"],
Cell[217812, 8870, 36, 1, 70, "Output"],
Cell[217851, 8873, 36, 1, 70, "Output"],
Cell[217890, 8876, 36, 1, 70, "Output"],
Cell[217929, 8879, 36, 1, 70, "Output"],
Cell[217968, 8882, 53, 1, 70, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[218070, 8889, 114, 2, 35, "Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[218209, 8895, 54792, 1513, 22262, "Input",
  InitializationCell->True],
Cell[273004, 10410, 71, 1, 70, "Print"],
Cell[273078, 10413, 44, 1, 70, "Output"],
Cell[273125, 10416, 141, 2, 70, "Output"],
Cell[273269, 10420, 143, 2, 70, "Output"],
Cell[273415, 10424, 123, 2, 70, "Output"],
Cell[273541, 10428, 128, 2, 70, "Output"],
Cell[273672, 10432, 183, 3, 70, "Output"],
Cell[273858, 10437, 280, 4, 70, "Output"],
Cell[274141, 10443, 264, 4, 70, "Output"],
Cell[274408, 10449, 207, 3, 70, "Output"],
Cell[274618, 10454, 209, 3, 70, "Output"],
Cell[274830, 10459, 112, 2, 70, "Output"],
Cell[274945, 10463, 115, 2, 70, "Output"],
Cell[275063, 10467, 170, 3, 70, "Output"],
Cell[275236, 10472, 288, 4, 70, "Output"],
Cell[275527, 10478, 288, 4, 70, "Output"],
Cell[275818, 10484, 142, 2, 70, "Output"],
Cell[275963, 10488, 130, 2, 70, "Output"],
Cell[276096, 10492, 146, 2, 70, "Output"],
Cell[276245, 10496, 129, 2, 70, "Output"],
Cell[276377, 10500, 221, 3, 70, "Output"],
Cell[276601, 10505, 233, 3, 70, "Output"],
Cell[276837, 10510, 311, 4, 70, "Output"],
Cell[277151, 10516, 142, 2, 70, "Output"],
Cell[277296, 10520, 230, 3, 70, "Output"],
Cell[277529, 10525, 187, 3, 70, "Output"],
Cell[277719, 10530, 395, 5, 70, "Output"],
Cell[278117, 10537, 140, 2, 70, "Output"],
Cell[278260, 10541, 140, 2, 70, "Output"],
Cell[278403, 10545, 146, 2, 70, "Output"],
Cell[278552, 10549, 147, 2, 70, "Output"],
Cell[278702, 10553, 161, 2, 70, "Output"],
Cell[278866, 10557, 129, 2, 70, "Output"],
Cell[278998, 10561, 138, 2, 70, "Output"],
Cell[279139, 10565, 129, 2, 70, "Output"],
Cell[279271, 10569, 183, 3, 70, "Output"],
Cell[279457, 10574, 155, 2, 70, "Output"],
Cell[279615, 10578, 153, 2, 70, "Output"],
Cell[279771, 10582, 356, 5, 70, "Output"],
Cell[280130, 10589, 145, 2, 70, "Output"],
Cell[280278, 10593, 160, 2, 70, "Output"],
Cell[280441, 10597, 179, 3, 70, "Output"],
Cell[280623, 10602, 135, 2, 70, "Output"],
Cell[280761, 10606, 145, 2, 70, "Output"],
Cell[280909, 10610, 126, 2, 70, "Output"],
Cell[281038, 10614, 225, 3, 70, "Output"],
Cell[281266, 10619, 112, 2, 70, "Output"],
Cell[281381, 10623, 122, 2, 70, "Output"],
Cell[281506, 10627, 136, 2, 70, "Output"],
Cell[281645, 10631, 112, 2, 70, "Output"],
Cell[281760, 10635, 108, 2, 70, "Output"],
Cell[281871, 10639, 119, 2, 70, "Output"],
Cell[281993, 10643, 111, 2, 70, "Output"],
Cell[282107, 10647, 126, 2, 70, "Output"],
Cell[282236, 10651, 270, 4, 70, "Output"],
Cell[282509, 10657, 266, 4, 70, "Output"],
Cell[282778, 10663, 113, 2, 70, "Output"],
Cell[282894, 10667, 114, 2, 70, "Output"],
Cell[283011, 10671, 107, 2, 70, "Output"],
Cell[283121, 10675, 116, 2, 70, "Output"],
Cell[283240, 10679, 121, 2, 70, "Output"],
Cell[283364, 10683, 133, 2, 70, "Output"],
Cell[283500, 10687, 266, 4, 70, "Output"],
Cell[283769, 10693, 100, 2, 70, "Output"],
Cell[283872, 10697, 123, 2, 70, "Output"],
Cell[283998, 10701, 115, 2, 70, "Output"],
Cell[284116, 10705, 129, 2, 70, "Output"],
Cell[284248, 10709, 102, 2, 70, "Output"],
Cell[284353, 10713, 107, 2, 70, "Output"],
Cell[284463, 10717, 130, 2, 70, "Output"],
Cell[284596, 10721, 168, 2, 70, "Output"],
Cell[284767, 10725, 168, 2, 70, "Output"],
Cell[284938, 10729, 156, 2, 70, "Output"],
Cell[285097, 10733, 156, 2, 70, "Output"],
Cell[285256, 10737, 165, 2, 70, "Output"],
Cell[285424, 10741, 165, 2, 70, "Output"],
Cell[285592, 10745, 106, 2, 70, "Output"],
Cell[285701, 10749, 123, 2, 70, "Output"],
Cell[285827, 10753, 113, 2, 70, "Output"],
Cell[285943, 10757, 102, 2, 70, "Output"],
Cell[286048, 10761, 104, 2, 70, "Output"],
Cell[286155, 10765, 277, 4, 70, "Output"],
Cell[286435, 10771, 153, 2, 70, "Output"],
Cell[286591, 10775, 205, 3, 70, "Output"],
Cell[286799, 10780, 221, 3, 70, "Output"],
Cell[287023, 10785, 302, 5, 70, "Output"],
Cell[287328, 10792, 273, 4, 70, "Output"],
Cell[287604, 10798, 309, 4, 70, "Output"],
Cell[287916, 10804, 316, 4, 70, "Output"],
Cell[288235, 10810, 141, 2, 70, "Output"],
Cell[288379, 10814, 120, 2, 70, "Output"],
Cell[288502, 10818, 167, 2, 70, "Output"],
Cell[288672, 10822, 143, 2, 70, "Output"],
Cell[288818, 10826, 131, 2, 70, "Output"],
Cell[288952, 10830, 190, 3, 70, "Output"],
Cell[289145, 10835, 160, 2, 70, "Output"],
Cell[289308, 10839, 160, 2, 70, "Output"],
Cell[289471, 10843, 158, 2, 70, "Output"],
Cell[289632, 10847, 155, 2, 70, "Output"],
Cell[289790, 10851, 150, 2, 70, "Output"],
Cell[289943, 10855, 330, 5, 70, "Output"],
Cell[290276, 10862, 176, 3, 70, "Output"],
Cell[290455, 10867, 157, 2, 70, "Output"],
Cell[290615, 10871, 166, 2, 70, "Output"],
Cell[290784, 10875, 105, 2, 70, "Output"],
Cell[290892, 10879, 124, 2, 70, "Output"],
Cell[291019, 10883, 124, 2, 70, "Output"],
Cell[291146, 10887, 130, 2, 70, "Output"],
Cell[291279, 10891, 130, 2, 70, "Output"],
Cell[291412, 10895, 170, 2, 70, "Output"],
Cell[291585, 10899, 199, 3, 70, "Output"],
Cell[291787, 10904, 172, 2, 70, "Output"],
Cell[291962, 10908, 201, 3, 70, "Output"],
Cell[292166, 10913, 171, 2, 70, "Output"],
Cell[292340, 10917, 201, 3, 70, "Output"],
Cell[292544, 10922, 148, 2, 70, "Output"],
Cell[292695, 10926, 210, 3, 70, "Output"],
Cell[292908, 10931, 178, 3, 70, "Output"],
Cell[293089, 10936, 188, 3, 70, "Output"],
Cell[293280, 10941, 145, 2, 70, "Output"],
Cell[293428, 10945, 153, 2, 70, "Output"],
Cell[293584, 10949, 162, 2, 70, "Output"],
Cell[293749, 10953, 161, 2, 70, "Output"],
Cell[293913, 10957, 154, 2, 70, "Output"],
Cell[294070, 10961, 159, 2, 70, "Output"],
Cell[294232, 10965, 204, 3, 70, "Output"],
Cell[294439, 10970, 132, 2, 70, "Output"],
Cell[294574, 10974, 323, 4, 70, "Output"],
Cell[294900, 10980, 217, 3, 70, "Output"],
Cell[295120, 10985, 155, 2, 70, "Output"],
Cell[295278, 10989, 143, 2, 70, "Output"],
Cell[295424, 10993, 159, 2, 70, "Output"],
Cell[295586, 10997, 113, 2, 70, "Output"],
Cell[295702, 11001, 52, 1, 70, "Output"],
Cell[295757, 11004, 307, 4, 70, "Message"],
Cell[296067, 11010, 41, 1, 70, "Output"],
Cell[296111, 11013, 52, 1, 70, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[296212, 11020, 94, 1, 35, "Subsubsection",
  InitializationCell->True],

Cell[CellGroupData[{
Cell[296331, 11025, 108590, 2730, 34230, "Input",
  InitializationCell->True],
Cell[404924, 13757, 272, 4, 70, "Message"],
Cell[405199, 13763, 311, 5, 70, "Message"],
Cell[405513, 13770, 42, 1, 70, "Output"],
Cell[405558, 13773, 192, 3, 70, "Output"],
Cell[405753, 13778, 166, 2, 70, "Output"],
Cell[405922, 13782, 229, 4, 70, "Output"],
Cell[406154, 13788, 273, 4, 70, "Output"],
Cell[406430, 13794, 132, 2, 70, "Output"],
Cell[406565, 13798, 528, 9, 70, "Output"],
Cell[407096, 13809, 147, 2, 70, "Output"],
Cell[407246, 13813, 157, 2, 70, "Output"],
Cell[407406, 13817, 222, 3, 70, "Output"],
Cell[407631, 13822, 176, 3, 70, "Output"],
Cell[407810, 13827, 184, 3, 70, "Output"],
Cell[407997, 13832, 173, 3, 70, "Output"],
Cell[408173, 13837, 300, 4, 70, "Output"],
Cell[408476, 13843, 183, 3, 70, "Output"],
Cell[408662, 13848, 175, 3, 70, "Output"],
Cell[408840, 13853, 280, 4, 70, "Output"],
Cell[409123, 13859, 222, 3, 70, "Output"],
Cell[409348, 13864, 226, 3, 70, "Output"],
Cell[409577, 13869, 228, 3, 70, "Output"],
Cell[409808, 13874, 232, 3, 70, "Output"],
Cell[410043, 13879, 225, 3, 70, "Output"],
Cell[410271, 13884, 104, 2, 70, "Output"],
Cell[410378, 13888, 273, 4, 70, "Output"],
Cell[410654, 13894, 154, 2, 70, "Output"],
Cell[410811, 13898, 337, 5, 70, "Output"],
Cell[411151, 13905, 295, 5, 70, "Output"],
Cell[411449, 13912, 379, 5, 70, "Output"],
Cell[411831, 13919, 188, 3, 70, "Output"],
Cell[412022, 13924, 328, 5, 70, "Output"],
Cell[412353, 13931, 215, 3, 70, "Output"],
Cell[412571, 13936, 222, 3, 70, "Output"],
Cell[412796, 13941, 161, 2, 70, "Output"],
Cell[412960, 13945, 311, 4, 70, "Output"],
Cell[413274, 13951, 392, 5, 70, "Output"],
Cell[413669, 13958, 287, 4, 70, "Output"],
Cell[413959, 13964, 223, 3, 70, "Output"],
Cell[414185, 13969, 221, 3, 70, "Output"],
Cell[414409, 13974, 228, 3, 70, "Output"],
Cell[414640, 13979, 169, 2, 70, "Output"],
Cell[414812, 13983, 149, 2, 70, "Output"],
Cell[414964, 13987, 444, 6, 70, "Output"],
Cell[415411, 13995, 311, 5, 70, "Output"],
Cell[415725, 14002, 212, 3, 70, "Output"],
Cell[415940, 14007, 214, 3, 70, "Output"],
Cell[416157, 14012, 289, 4, 70, "Output"],
Cell[416449, 14018, 203, 3, 70, "Output"],
Cell[416655, 14023, 245, 3, 70, "Output"],
Cell[416903, 14028, 369, 6, 70, "Output"],
Cell[417275, 14036, 178, 3, 70, "Output"],
Cell[417456, 14041, 400, 7, 70, "Output"],
Cell[417859, 14050, 178, 3, 70, "Output"],
Cell[418040, 14055, 234, 3, 70, "Output"],
Cell[418277, 14060, 309, 4, 70, "Output"],
Cell[418589, 14066, 266, 4, 70, "Output"],
Cell[418858, 14072, 209, 3, 70, "Output"],
Cell[419070, 14077, 172, 3, 70, "Output"],
Cell[419245, 14082, 165, 2, 70, "Output"],
Cell[419413, 14086, 295, 4, 70, "Output"],
Cell[419711, 14092, 338, 5, 70, "Output"],
Cell[420052, 14099, 282, 4, 70, "Output"],
Cell[420337, 14105, 525, 8, 70, "Output"],
Cell[420865, 14115, 532, 8, 70, "Output"],
Cell[421400, 14125, 473, 7, 70, "Output"],
Cell[421876, 14134, 176, 3, 70, "Output"],
Cell[422055, 14139, 162, 2, 70, "Output"],
Cell[422220, 14143, 330, 4, 70, "Output"],
Cell[422553, 14149, 212, 3, 70, "Output"],
Cell[422768, 14154, 212, 3, 70, "Output"],
Cell[422983, 14159, 121, 2, 70, "Output"],
Cell[423107, 14163, 185, 3, 70, "Output"],
Cell[423295, 14168, 264, 4, 70, "Output"],
Cell[423562, 14174, 295, 4, 70, "Output"],
Cell[423860, 14180, 312, 5, 70, "Output"],
Cell[424175, 14187, 138, 2, 70, "Output"],
Cell[424316, 14191, 223, 3, 70, "Output"],
Cell[424542, 14196, 185, 3, 70, "Output"],
Cell[424730, 14201, 169, 2, 70, "Output"],
Cell[424902, 14205, 184, 3, 70, "Output"],
Cell[425089, 14210, 250, 4, 70, "Output"],
Cell[425342, 14216, 227, 4, 70, "Output"],
Cell[425572, 14222, 124, 2, 70, "Output"],
Cell[425699, 14226, 260, 4, 70, "Output"],
Cell[425962, 14232, 280, 4, 70, "Output"],
Cell[426245, 14238, 228, 3, 70, "Output"],
Cell[426476, 14243, 270, 4, 70, "Output"],
Cell[426749, 14249, 256, 4, 70, "Output"],
Cell[427008, 14255, 188, 3, 70, "Output"],
Cell[427199, 14260, 219, 3, 70, "Output"],
Cell[427421, 14265, 169, 2, 70, "Output"],
Cell[427593, 14269, 185, 3, 70, "Output"],
Cell[427781, 14274, 242, 3, 70, "Output"],
Cell[428026, 14279, 126, 2, 70, "Output"],
Cell[428155, 14283, 114, 2, 70, "Output"],
Cell[428272, 14287, 112, 2, 70, "Output"],
Cell[428387, 14291, 237, 3, 70, "Output"],
Cell[428627, 14296, 318, 4, 70, "Output"],
Cell[428948, 14302, 343, 5, 70, "Output"],
Cell[429294, 14309, 178, 3, 70, "Output"],
Cell[429475, 14314, 210, 3, 70, "Output"],
Cell[429688, 14319, 212, 3, 70, "Output"],
Cell[429903, 14324, 295, 4, 70, "Output"],
Cell[430201, 14330, 164, 3, 70, "Output"],
Cell[430368, 14335, 173, 3, 70, "Output"],
Cell[430544, 14340, 309, 5, 70, "Output"],
Cell[430856, 14347, 166, 2, 70, "Output"],
Cell[431025, 14351, 290, 4, 70, "Output"],
Cell[431318, 14357, 290, 4, 70, "Output"],
Cell[431611, 14363, 257, 4, 70, "Output"],
Cell[431871, 14369, 136, 2, 70, "Output"],
Cell[432010, 14373, 159, 2, 70, "Output"],
Cell[432172, 14377, 194, 3, 70, "Output"],
Cell[432369, 14382, 179, 3, 70, "Output"],
Cell[432551, 14387, 247, 3, 70, "Output"],
Cell[432801, 14392, 138, 2, 70, "Output"],
Cell[432942, 14396, 185, 3, 70, "Output"],
Cell[433130, 14401, 228, 3, 70, "Output"],
Cell[433361, 14406, 217, 3, 70, "Output"],
Cell[433581, 14411, 233, 3, 70, "Output"],
Cell[433817, 14416, 216, 4, 70, "Output"],
Cell[434036, 14422, 127, 2, 70, "Output"],
Cell[434166, 14426, 159, 2, 70, "Output"],
Cell[434328, 14430, 715, 10, 70, "Output"],
Cell[435046, 14442, 208, 3, 70, "Output"],
Cell[435257, 14447, 200, 3, 70, "Output"],
Cell[435460, 14452, 262, 4, 70, "Output"],
Cell[435725, 14458, 241, 3, 70, "Output"],
Cell[435969, 14463, 112, 2, 70, "Output"],
Cell[436084, 14467, 157, 2, 70, "Output"],
Cell[436244, 14471, 150, 2, 70, "Output"],
Cell[436397, 14475, 148, 2, 70, "Output"],
Cell[436548, 14479, 151, 2, 70, "Output"],
Cell[436702, 14483, 110, 2, 70, "Output"],
Cell[436815, 14487, 115, 2, 70, "Output"],
Cell[436933, 14491, 134, 2, 70, "Output"],
Cell[437070, 14495, 137, 2, 70, "Output"],
Cell[437210, 14499, 138, 2, 70, "Output"],
Cell[437351, 14503, 137, 2, 70, "Output"],
Cell[437491, 14507, 138, 2, 70, "Output"],
Cell[437632, 14511, 137, 2, 70, "Output"],
Cell[437772, 14515, 137, 2, 70, "Output"],
Cell[437912, 14519, 118, 2, 70, "Output"],
Cell[438033, 14523, 137, 2, 70, "Output"],
Cell[438173, 14527, 131, 2, 70, "Output"],
Cell[438307, 14531, 129, 2, 70, "Output"],
Cell[438439, 14535, 112, 2, 70, "Output"],
Cell[438554, 14539, 109, 2, 70, "Output"],
Cell[438666, 14543, 219, 3, 70, "Output"],
Cell[438888, 14548, 126, 2, 70, "Output"],
Cell[439017, 14552, 151, 2, 70, "Output"],
Cell[439171, 14556, 215, 3, 70, "Output"],
Cell[439389, 14561, 104, 2, 70, "Output"],
Cell[439496, 14565, 119, 2, 70, "Output"],
Cell[439618, 14569, 152, 2, 70, "Output"],
Cell[439773, 14573, 118, 2, 70, "Output"],
Cell[439894, 14577, 165, 2, 70, "Output"],
Cell[440062, 14581, 140, 2, 70, "Output"],
Cell[440205, 14585, 114, 2, 70, "Output"],
Cell[440322, 14589, 160, 2, 70, "Output"],
Cell[440485, 14593, 126, 2, 70, "Output"],
Cell[440614, 14597, 360, 5, 70, "Output"],
Cell[440977, 14604, 129, 2, 70, "Output"],
Cell[441109, 14608, 164, 2, 70, "Output"],
Cell[441276, 14612, 149, 2, 70, "Output"],
Cell[441428, 14616, 144, 2, 70, "Output"],
Cell[441575, 14620, 180, 3, 70, "Output"],
Cell[441758, 14625, 126, 2, 70, "Output"],
Cell[441887, 14629, 131, 2, 70, "Output"],
Cell[442021, 14633, 180, 3, 70, "Output"],
Cell[442204, 14638, 119, 2, 70, "Output"],
Cell[442326, 14642, 176, 3, 70, "Output"],
Cell[442505, 14647, 154, 2, 70, "Output"],
Cell[442662, 14651, 126, 2, 70, "Output"],
Cell[442791, 14655, 130, 2, 70, "Output"],
Cell[442924, 14659, 175, 3, 70, "Output"],
Cell[443102, 14664, 138, 2, 70, "Output"],
Cell[443243, 14668, 139, 2, 70, "Output"],
Cell[443385, 14672, 128, 2, 70, "Output"],
Cell[443516, 14676, 136, 2, 70, "Output"],
Cell[443655, 14680, 166, 2, 70, "Output"],
Cell[443824, 14684, 142, 2, 70, "Output"],
Cell[443969, 14688, 129, 2, 70, "Output"],
Cell[444101, 14692, 124, 2, 70, "Output"],
Cell[444228, 14696, 135, 2, 70, "Output"],
Cell[444366, 14700, 161, 2, 70, "Output"],
Cell[444530, 14704, 137, 2, 70, "Output"],
Cell[444670, 14708, 129, 2, 70, "Output"],
Cell[444802, 14712, 143, 2, 70, "Output"],
Cell[444948, 14716, 129, 2, 70, "Output"],
Cell[445080, 14720, 140, 2, 70, "Output"],
Cell[445223, 14724, 121, 2, 70, "Output"],
Cell[445347, 14728, 123, 2, 70, "Output"],
Cell[445473, 14732, 123, 2, 70, "Output"],
Cell[445599, 14736, 129, 2, 70, "Output"],
Cell[445731, 14740, 117, 2, 70, "Output"],
Cell[445851, 14744, 127, 2, 70, "Output"],
Cell[445981, 14748, 213, 3, 70, "Output"],
Cell[446197, 14753, 126, 2, 70, "Output"],
Cell[446326, 14757, 198, 3, 70, "Output"],
Cell[446527, 14762, 50, 1, 70, "Output"],
Cell[446580, 14765, 50, 1, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[446703, 14774, 36, 0, 39, "Section"],
Cell[446742, 14776, 192, 3, 79, "Output"],
Cell[446937, 14781, 166, 2, 63, "Output"],
Cell[447106, 14785, 229, 4, 79, "Output"],
Cell[447338, 14791, 273, 4, 95, "Output"],
Cell[447614, 14797, 132, 2, 63, "Output"],
Cell[447749, 14801, 528, 9, 143, "Output"],
Cell[448280, 14812, 147, 2, 63, "Output"],
Cell[448430, 14816, 157, 2, 63, "Output"],
Cell[448590, 14820, 222, 3, 79, "Output"],
Cell[448815, 14825, 176, 3, 63, "Output"],
Cell[448994, 14830, 184, 3, 63, "Output"],
Cell[449181, 14835, 173, 3, 63, "Output"],
Cell[449357, 14840, 300, 4, 95, "Output"],
Cell[449660, 14846, 183, 3, 63, "Output"],
Cell[449846, 14851, 175, 3, 63, "Output"],
Cell[450024, 14856, 280, 4, 95, "Output"],
Cell[450307, 14862, 222, 3, 79, "Output"],
Cell[450532, 14867, 226, 3, 79, "Output"],
Cell[450761, 14872, 228, 3, 79, "Output"],
Cell[450992, 14877, 232, 3, 79, "Output"],
Cell[451227, 14882, 225, 3, 79, "Output"],
Cell[451455, 14887, 104, 2, 47, "Output"],
Cell[451562, 14891, 273, 4, 95, "Output"],
Cell[451838, 14897, 154, 2, 63, "Output"],
Cell[451995, 14901, 337, 5, 111, "Output"],
Cell[452335, 14908, 295, 5, 95, "Output"],
Cell[452633, 14915, 379, 5, 111, "Output"],
Cell[453015, 14922, 188, 3, 63, "Output"],
Cell[453206, 14927, 328, 5, 95, "Output"],
Cell[453537, 14934, 215, 3, 79, "Output"],
Cell[453755, 14939, 222, 3, 79, "Output"],
Cell[453980, 14944, 161, 2, 63, "Output"],
Cell[454144, 14948, 311, 4, 95, "Output"],
Cell[454458, 14954, 392, 5, 111, "Output"],
Cell[454853, 14961, 287, 4, 95, "Output"],
Cell[455143, 14967, 223, 3, 79, "Output"],
Cell[455369, 14972, 221, 3, 79, "Output"],
Cell[455593, 14977, 228, 3, 79, "Output"],
Cell[455824, 14982, 169, 2, 63, "Output"],
Cell[455996, 14986, 149, 2, 63, "Output"],
Cell[456148, 14990, 444, 6, 127, "Output"],
Cell[456595, 14998, 311, 5, 95, "Output"],
Cell[456909, 15005, 212, 3, 79, "Output"],
Cell[457124, 15010, 214, 3, 79, "Output"],
Cell[457341, 15015, 289, 4, 95, "Output"],
Cell[457633, 15021, 203, 3, 79, "Output"],
Cell[457839, 15026, 245, 3, 79, "Output"],
Cell[458087, 15031, 369, 6, 111, "Output"],
Cell[458459, 15039, 178, 3, 63, "Output"],
Cell[458640, 15044, 400, 7, 111, "Output"],
Cell[459043, 15053, 178, 3, 63, "Output"],
Cell[459224, 15058, 234, 3, 79, "Output"],
Cell[459461, 15063, 309, 4, 95, "Output"],
Cell[459773, 15069, 266, 4, 95, "Output"],
Cell[460042, 15075, 209, 3, 79, "Output"],
Cell[460254, 15080, 172, 3, 63, "Output"],
Cell[460429, 15085, 165, 2, 63, "Output"],
Cell[460597, 15089, 295, 4, 95, "Output"],
Cell[460895, 15095, 338, 5, 111, "Output"],
Cell[461236, 15102, 282, 4, 95, "Output"],
Cell[461521, 15108, 525, 8, 143, "Output"],
Cell[462049, 15118, 532, 8, 143, "Output"],
Cell[462584, 15128, 473, 7, 127, "Output"],
Cell[463060, 15137, 176, 3, 63, "Output"],
Cell[463239, 15142, 162, 2, 63, "Output"],
Cell[463404, 15146, 330, 4, 95, "Output"],
Cell[463737, 15152, 212, 3, 79, "Output"],
Cell[463952, 15157, 212, 3, 79, "Output"],
Cell[464167, 15162, 121, 2, 63, "Output"],
Cell[464291, 15166, 185, 3, 63, "Output"],
Cell[464479, 15171, 264, 4, 95, "Output"],
Cell[464746, 15177, 295, 4, 95, "Output"],
Cell[465044, 15183, 312, 5, 95, "Output"],
Cell[465359, 15190, 138, 2, 63, "Output"],
Cell[465500, 15194, 223, 3, 79, "Output"],
Cell[465726, 15199, 185, 3, 63, "Output"],
Cell[465914, 15204, 169, 2, 63, "Output"],
Cell[466086, 15208, 184, 3, 63, "Output"],
Cell[466273, 15213, 250, 4, 79, "Output"],
Cell[466526, 15219, 227, 4, 79, "Output"],
Cell[466756, 15225, 124, 2, 63, "Output"],
Cell[466883, 15229, 260, 4, 79, "Output"],
Cell[467146, 15235, 280, 4, 95, "Output"],
Cell[467429, 15241, 228, 3, 79, "Output"],
Cell[467660, 15246, 270, 4, 95, "Output"],
Cell[467933, 15252, 256, 4, 79, "Output"],
Cell[468192, 15258, 188, 3, 63, "Output"],
Cell[468383, 15263, 219, 3, 79, "Output"],
Cell[468605, 15268, 169, 2, 63, "Output"],
Cell[468777, 15272, 185, 3, 63, "Output"],
Cell[468965, 15277, 242, 3, 79, "Output"],
Cell[469210, 15282, 126, 2, 63, "Output"],
Cell[469339, 15286, 114, 2, 47, "Output"],
Cell[469456, 15290, 112, 2, 47, "Output"],
Cell[469571, 15294, 237, 3, 79, "Output"],
Cell[469811, 15299, 318, 4, 95, "Output"],
Cell[470132, 15305, 343, 5, 111, "Output"],
Cell[470478, 15312, 178, 3, 63, "Output"],
Cell[470659, 15317, 210, 3, 79, "Output"],
Cell[470872, 15322, 212, 3, 79, "Output"],
Cell[471087, 15327, 295, 4, 95, "Output"],
Cell[471385, 15333, 164, 3, 63, "Output"],
Cell[471552, 15338, 173, 3, 63, "Output"],
Cell[471728, 15343, 309, 5, 95, "Output"],
Cell[472040, 15350, 166, 2, 63, "Output"],
Cell[472209, 15354, 290, 4, 95, "Output"],
Cell[472502, 15360, 290, 4, 95, "Output"],
Cell[472795, 15366, 257, 4, 79, "Output"],
Cell[473055, 15372, 136, 2, 63, "Output"],
Cell[473194, 15376, 159, 2, 63, "Output"],
Cell[473356, 15380, 194, 3, 79, "Output"],
Cell[473553, 15385, 179, 3, 63, "Output"],
Cell[473735, 15390, 247, 3, 79, "Output"],
Cell[473985, 15395, 138, 2, 63, "Output"],
Cell[474126, 15399, 185, 3, 63, "Output"],
Cell[474314, 15404, 228, 3, 79, "Output"],
Cell[474545, 15409, 217, 3, 79, "Output"],
Cell[474765, 15414, 233, 3, 79, "Output"],
Cell[475001, 15419, 216, 4, 79, "Output"],
Cell[475220, 15425, 127, 2, 63, "Output"],
Cell[475350, 15429, 159, 2, 63, "Output"],
Cell[475512, 15433, 715, 10, 191, "Output"],
Cell[476230, 15445, 208, 3, 79, "Output"],
Cell[476441, 15450, 200, 3, 79, "Output"],
Cell[476644, 15455, 262, 4, 95, "Output"],
Cell[476909, 15461, 241, 3, 79, "Output"],
Cell[477153, 15466, 112, 2, 47, "Output"],
Cell[477268, 15470, 157, 2, 63, "Output"],
Cell[477428, 15474, 150, 2, 63, "Output"],
Cell[477581, 15478, 148, 2, 63, "Output"],
Cell[477732, 15482, 151, 2, 63, "Output"],
Cell[477886, 15486, 110, 2, 47, "Output"],
Cell[477999, 15490, 115, 2, 47, "Output"],
Cell[478117, 15494, 134, 2, 63, "Output"],
Cell[478254, 15498, 137, 2, 63, "Output"],
Cell[478394, 15502, 138, 2, 63, "Output"],
Cell[478535, 15506, 137, 2, 63, "Output"],
Cell[478675, 15510, 138, 2, 63, "Output"],
Cell[478816, 15514, 137, 2, 63, "Output"],
Cell[478956, 15518, 137, 2, 63, "Output"],
Cell[479096, 15522, 118, 2, 63, "Output"],
Cell[479217, 15526, 137, 2, 63, "Output"],
Cell[479357, 15530, 131, 2, 63, "Output"],
Cell[479491, 15534, 129, 2, 63, "Output"],
Cell[479623, 15538, 112, 2, 47, "Output"],
Cell[479738, 15542, 109, 2, 47, "Output"],
Cell[479850, 15546, 219, 3, 79, "Output"],
Cell[480072, 15551, 126, 2, 63, "Output"],
Cell[480201, 15555, 151, 2, 63, "Output"],
Cell[480355, 15559, 215, 3, 79, "Output"],
Cell[480573, 15564, 104, 2, 47, "Output"],
Cell[480680, 15568, 119, 2, 63, "Output"],
Cell[480802, 15572, 152, 2, 63, "Output"],
Cell[480957, 15576, 118, 2, 63, "Output"],
Cell[481078, 15580, 165, 2, 63, "Output"],
Cell[481246, 15584, 140, 2, 63, "Output"],
Cell[481389, 15588, 114, 2, 47, "Output"],
Cell[481506, 15592, 160, 2, 63, "Output"],
Cell[481669, 15596, 126, 2, 63, "Output"],
Cell[481798, 15600, 360, 5, 111, "Output"],
Cell[482161, 15607, 129, 2, 63, "Output"],
Cell[482293, 15611, 164, 2, 63, "Output"],
Cell[482460, 15615, 149, 2, 63, "Output"],
Cell[482612, 15619, 144, 2, 63, "Output"],
Cell[482759, 15623, 180, 3, 63, "Output"],
Cell[482942, 15628, 126, 2, 63, "Output"],
Cell[483071, 15632, 131, 2, 63, "Output"],
Cell[483205, 15636, 180, 3, 63, "Output"],
Cell[483388, 15641, 119, 2, 63, "Output"],
Cell[483510, 15645, 176, 3, 63, "Output"],
Cell[483689, 15650, 154, 2, 63, "Output"],
Cell[483846, 15654, 126, 2, 63, "Output"],
Cell[483975, 15658, 130, 2, 63, "Output"],
Cell[484108, 15662, 175, 3, 63, "Output"],
Cell[484286, 15667, 138, 2, 63, "Output"],
Cell[484427, 15671, 139, 2, 63, "Output"],
Cell[484569, 15675, 128, 2, 63, "Output"],
Cell[484700, 15679, 136, 2, 63, "Output"],
Cell[484839, 15683, 166, 2, 63, "Output"],
Cell[485008, 15687, 142, 2, 63, "Output"],
Cell[485153, 15691, 129, 2, 63, "Output"],
Cell[485285, 15695, 124, 2, 63, "Output"],
Cell[485412, 15699, 135, 2, 63, "Output"],
Cell[485550, 15703, 161, 2, 63, "Output"],
Cell[485714, 15707, 137, 2, 63, "Output"],
Cell[485854, 15711, 129, 2, 63, "Output"],
Cell[485986, 15715, 143, 2, 63, "Output"],
Cell[486132, 15719, 129, 2, 63, "Output"],
Cell[486264, 15723, 140, 2, 63, "Output"],
Cell[486407, 15727, 121, 2, 63, "Output"],
Cell[486531, 15731, 123, 2, 63, "Output"],
Cell[486657, 15735, 123, 2, 63, "Output"],
Cell[486783, 15739, 129, 2, 63, "Output"],
Cell[486915, 15743, 117, 2, 63, "Output"],
Cell[487035, 15747, 127, 2, 63, "Output"],
Cell[487165, 15751, 213, 3, 79, "Output"],
Cell[487381, 15756, 126, 2, 63, "Output"],
Cell[487510, 15760, 198, 3, 79, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[487745, 15768, 31, 0, 39, "Section"],

Cell[CellGroupData[{
Cell[487801, 15772, 26, 0, 49, "Subsection"],
Cell[487830, 15774, 129, 2, 47, "Input"],
Cell[487962, 15778, 130, 2, 47, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[488129, 15785, 39, 0, 33, "Subsection"],
Cell[488171, 15787, 63, 1, 47, "Input"],
Cell[488237, 15790, 116, 2, 47, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[488390, 15797, 36, 0, 33, "Subsection"],
Cell[488429, 15799, 59, 1, 47, "Input"],
Cell[488491, 15802, 112, 2, 47, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[488652, 15810, 24, 0, 39, "Section"],

Cell[CellGroupData[{
Cell[488701, 15814, 44, 0, 49, "Subsection"],
Cell[488748, 15816, 123, 2, 47, "Input"],
Cell[488874, 15820, 167, 3, 63, "Input"],
Cell[489044, 15825, 58, 1, 47, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[489139, 15831, 56, 0, 33, "Subsection"],
Cell[489198, 15833, 983, 19, 268, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[490218, 15857, 52, 0, 33, "Subsection"],
Cell[490273, 15859, 942, 18, 268, "Input"]
}, Closed]]
}, Closed]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

