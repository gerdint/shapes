<section id="types-simple">
<title>Simple types</title>
<top>
	<p>Values that are naturally characterized by a single scalar are considered to have simple types.  These types generally have no fields.</p>
</top>

  <coretype name="Float">
    <abstraction>
			<p>A scalar; a quantity without physical dimension.</p>
    </abstraction>
    <construction>
      <syntax name="float" />
    </construction>
		<operators>
			<p>A large number of types may be scaled by floats, which makes the list of operators very long for floats.  Since dividing by a float is expected to mean the same as multiplying by the multiplicative inverse of the float, the list gets even longer.</p>
		</operators>
  </coretype>

  <coretype name="Boolean">
    <abstraction>
			<p>A truth value.</p>
    </abstraction>
    <construction>
      <syntax name="boolean" />
    </construction>
  </coretype>

  <coretype name="Integer">
    <abstraction>
			<p>An integer number.</p>
    </abstraction>
    <construction>
      <syntax name="integer" />
    </construction>
  </coretype>

  <coretype name="Length">
    <abstraction>
			<p>The <self /> type represents a physical length.  Lengths are often specified as a scalar times a unit of length.</p>
    </abstraction>
    <construction>
      <syntax name="length" />
    </construction>
  </coretype>

  <coretype name="Offset">
    <abstraction>
			<p>The <self /> type represents a coordinate which is to be interpreted relative a local coordinate frame.  The values are sometimes referred to as <em>relative lengths</em>, since they specify a length relative to something else.</p>
    </abstraction>
  </coretype>

  <coretype name="LengthLike">
    <abstraction>
			<p>The <self /> type is something which can be used as a coordinate.  It is either an ordinary <named-type name="Length" />, or an <named-type name="Offset" />.</p>
    </abstraction>
  </coretype>

  <coretype name="Symbol">
    <abstraction>
			<p>A value defined by its name; the value analogue of identifiers in the source.</p>
    </abstraction>
    <construction>
      <syntax name="symbol" />
    </construction>
  </coretype>

  <coretype name="String">
    <abstraction>
			<p>A chunk of text.</p>
    </abstraction>
    <construction>
      <syntax name="string" />
    </construction>
  </coretype>

</section>
