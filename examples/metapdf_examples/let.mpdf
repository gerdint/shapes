[let (a:7)
  {
    /* let shadows current binding of a */
    [let (a:5 b:a) [show a+b]]

    /* Simulate let* */
    [let (a:5)
      [let (b:a)
        [show a+b]]]

    /* Verify that let* yields the same results */
    [let* (a:5 b:a) [show a+b]]
  }
]

/* Use named let to create a loop */
[let h (i:0)
  [if i<3
    {[show i]
     [h i:i+1]}]]

/* Use letrec to create functions that can call each other */
[letrec (a: [\ i] {[show [sprintf `a:%g´ i]] [b i+1]}
         b: [\ i] [if i < 10 {[show [sprintf `b:%g´ i]] [a i+1]}])
  [a 6]]


/* Prevent empty output-error */
[stroke (0cm,0cm)--(1cm,1cm)]
