/** This file is part of Shapes.
 **
 ** Shapes is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
 ** the Free Software Foundation, either version 3 of the License, or
 ** any later version.
 **
 ** Shapes is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU General Public License for more details.
 **
 ** You should have received a copy of the GNU General Public License
 ** along with Shapes.  If not, see <http://www.gnu.org/licenses/>.
 **
 ** Copyright 2008 Henrik Tidefelt
 **/

circle:
{
   p1cm: @defaultunit:1%c
	 | (^)<(1cm,0cm)>(^)--(^)<(0cm,1cm)>(^)--(^)<(~1cm,0cm)>(^)--(^)<(0cm,~1cm)>(^)--cycle
   \ r .> [[scale r / 1cm] p1cm]
}

ccw_arc: \ z0 zStart zEnd r .>
{
  dStart: r * [normalized zStart - z0]
  dEnd: r * [normalized zEnd - z0]
  aStart: [angle dStart]
  aEnd: { tmp: [angle dEnd]
          [if tmp >= aStart tmp tmp+360°] }
  @defaultunit:1%C | [shift z0] [] ( dStart>(^aStart+90°)--(^)<(r*[dir aStart+0.25*(aEnd-aStart)])>(^)--(^)<(r*[dir aStart+0.5*(aEnd-aStart)])>(^)--(^)<(r*[dir aStart+0.75*(aEnd-aStart)])>(^)--(^aEnd-90°)<dEnd )
}

cw_arc: \ z0 zStart zEnd r .>
{
  dStart: r * [normalized zStart - z0]
  dEnd: r * [normalized zEnd - z0]
  aStart: [angle dStart]
  aEnd: { tmp: [angle dEnd]
          [if tmp <= aStart tmp tmp-360°] }
  @defaultunit:1%C | [shift z0] [] ( dStart>(^aStart-90°)--(^)<(r*[dir aStart+0.25*(aEnd-aStart)])>(^)--(^)<(r*[dir aStart+0.5*(aEnd-aStart)])>(^)--(^)<(r*[dir aStart+0.75*(aEnd-aStart)])>(^)--(^aEnd+90°)<dEnd )
}

generic_arc3D: \ arc2D z0 zStart zEnd r .>
{
	dStart: [normalized zStart - z0]
	dEnd: [normalized zEnd - z0]
  n: [normalized [cross dStart dEnd]]
  tf: [affinetransform3D dStart [cross n dStart] n z0]
	itf: [inverse tf]
	tf [] immerse [] [arc2D [view [itf z0]] [view [itf zStart]] [view [itf zEnd]] r]
}

ccw_arc3D: [generic_arc3D ccw_arc ...]
cw_arc3D: [generic_arc3D cw_arc ...]
